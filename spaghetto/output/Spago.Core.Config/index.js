// Generated by purs version 0.15.10
import * as Control_Alt from "../Control.Alt/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Codec from "../Data.Codec/index.js";
import * as Data_Codec_Argonaut from "../Data.Codec.Argonaut/index.js";
import * as Data_Codec_Argonaut_Common from "../Data.Codec.Argonaut.Common/index.js";
import * as Data_Codec_Argonaut_Record from "../Data.Codec.Argonaut.Record/index.js";
import * as Data_Codec_Argonaut_Sum from "../Data.Codec.Argonaut.Sum/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_List from "../Data.List/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Profunctor from "../Data.Profunctor/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unfoldable from "../Data.Unfoldable/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Partial_Unsafe from "../Partial.Unsafe/index.js";
import * as Registry_Internal_Codec from "../Registry.Internal.Codec/index.js";
import * as Registry_License from "../Registry.License/index.js";
import * as Registry_Location from "../Registry.Location/index.js";
import * as Registry_PackageName from "../Registry.PackageName/index.js";
import * as Registry_Range from "../Registry.Range/index.js";
import * as Registry_Sha256 from "../Registry.Sha256/index.js";
import * as Registry_Version from "../Registry.Version/index.js";
import * as Spago_Core_Prelude from "../Spago.Core.Prelude/index.js";
import * as Spago_FS from "../Spago.FS/index.js";
import * as Spago_Log from "../Spago.Log/index.js";
var unionWith = /* #__PURE__ */ Data_Map_Internal.unionWith(Registry_PackageName.ordPackageName);
var eq = /* #__PURE__ */ Data_Eq.eq(Registry_Version.eqVersion);
var eq1 = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Maybe.eqMaybe(Registry_Sha256.eqSha256));
var eq3 = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Map_Internal.eqMap(Registry_PackageName.eqPackageName)(/* #__PURE__ */ Data_Maybe.eqMaybe(Registry_Range.eqRange)));
var eq4 = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Maybe.eqMaybe(Data_Eq.eqString));
var eq5 = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Eq.eqArray(Registry_PackageName.eqPackageName));
var dimap = /* #__PURE__ */ Data_Profunctor.dimap(/* #__PURE__ */ Data_Codec.profunctorCodec(Data_Either.functorEither));
var object = /* #__PURE__ */ Data_Codec_Argonaut_Record.object();
var rowListCodecCons = /* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(Data_Codec_Argonaut_Record.rowListCodecNil)()();
var alt = /* #__PURE__ */ Control_Alt.alt(Data_Either.altEither);
var map = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);
var rowListCodecConsOptional = /* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(Data_Codec_Argonaut_Record.rowListCodecNil)()();
var mainIsSymbol = {
    reflectSymbol: function () {
        return "main";
    }
};
var execArgsIsSymbol = {
    reflectSymbol: function () {
        return "execArgs";
    }
};
var rowListCodecCons1 = /* #__PURE__ */ rowListCodecCons({
    reflectSymbol: function () {
        return "version";
    }
});
var eq6 = /* #__PURE__ */ Data_Eq.eq(Registry_Range.eqRange);
var dependenciesIsSymbol = {
    reflectSymbol: function () {
        return "dependencies";
    }
};
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var toUnfoldable = /* #__PURE__ */ Data_Map_Internal.toUnfoldable(Data_Unfoldable.unfoldableArray);
var rmap = /* #__PURE__ */ Data_Bifunctor.rmap(Data_Bifunctor.bifunctorTuple);
var toUnfoldable1 = /* #__PURE__ */ Data_Map_Internal.toUnfoldable(Data_List_Types.unfoldableList);
var nonEmptySet = /* #__PURE__ */ Data_Codec_Argonaut_Common.nonEmptySet(Data_Ord.ordString);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Spago_Core_Prelude.bindSpago);
var logDebug = /* #__PURE__ */ Spago_Log.logDebug(Spago_Core_Prelude.monadEffectSpago)(Spago_Core_Prelude.monadAskSpago)(Spago_Log.loggableString);
var bind = /* #__PURE__ */ Control_Bind.bind(Spago_Core_Prelude.bindSpago);
var exists = /* #__PURE__ */ Spago_FS.exists(Spago_Core_Prelude.monadEffectSpago);
var pure = /* #__PURE__ */ Control_Applicative.pure(Spago_Core_Prelude.applicativeSpago);
var liftAff = /* #__PURE__ */ Effect_Aff_Class.liftAff(Spago_Core_Prelude.monadAffSpago);
var NoStats = /* #__PURE__ */ (function () {
    function NoStats() {

    };
    NoStats.value = new NoStats();
    return NoStats;
})();
var CompactStats = /* #__PURE__ */ (function () {
    function CompactStats() {

    };
    CompactStats.value = new CompactStats();
    return CompactStats;
})();
var VerboseStats = /* #__PURE__ */ (function () {
    function VerboseStats() {

    };
    VerboseStats.value = new VerboseStats();
    return VerboseStats;
})();
var ShowSourceCode = /* #__PURE__ */ (function () {
    function ShowSourceCode() {

    };
    ShowSourceCode.value = new ShowSourceCode();
    return ShowSourceCode;
})();
var NoSourceCode = /* #__PURE__ */ (function () {
    function NoSourceCode() {

    };
    NoSourceCode.value = new NoSourceCode();
    return NoSourceCode;
})();
var SetFromRegistry = /* #__PURE__ */ (function () {
    function SetFromRegistry(value0) {
        this.value0 = value0;
    };
    SetFromRegistry.create = function (value0) {
        return new SetFromRegistry(value0);
    };
    return SetFromRegistry;
})();
var SetFromUrl = /* #__PURE__ */ (function () {
    function SetFromUrl(value0) {
        this.value0 = value0;
    };
    SetFromUrl.create = function (value0) {
        return new SetFromUrl(value0);
    };
    return SetFromUrl;
})();
var Dependencies = function (x) {
    return x;
};
var RemoteGitPackage = /* #__PURE__ */ (function () {
    function RemoteGitPackage(value0) {
        this.value0 = value0;
    };
    RemoteGitPackage.create = function (value0) {
        return new RemoteGitPackage(value0);
    };
    return RemoteGitPackage;
})();
var RemoteRegistryVersion = /* #__PURE__ */ (function () {
    function RemoteRegistryVersion(value0) {
        this.value0 = value0;
    };
    RemoteRegistryVersion.create = function (value0) {
        return new RemoteRegistryVersion(value0);
    };
    return RemoteRegistryVersion;
})();
var RemoteLegacyPackage = /* #__PURE__ */ (function () {
    function RemoteLegacyPackage(value0) {
        this.value0 = value0;
    };
    RemoteLegacyPackage.create = function (value0) {
        return new RemoteLegacyPackage(value0);
    };
    return RemoteLegacyPackage;
})();
var ExtraLocalPackage = /* #__PURE__ */ (function () {
    function ExtraLocalPackage(value0) {
        this.value0 = value0;
    };
    ExtraLocalPackage.create = function (value0) {
        return new ExtraLocalPackage(value0);
    };
    return ExtraLocalPackage;
})();
var ExtraRemotePackage = /* #__PURE__ */ (function () {
    function ExtraRemotePackage(value0) {
        this.value0 = value0;
    };
    ExtraRemotePackage.create = function (value0) {
        return new ExtraRemotePackage(value0);
    };
    return ExtraRemotePackage;
})();
var CensorNoWarnings = /* #__PURE__ */ (function () {
    function CensorNoWarnings() {

    };
    CensorNoWarnings.value = new CensorNoWarnings();
    return CensorNoWarnings;
})();
var CensorDependencyWarnings = /* #__PURE__ */ (function () {
    function CensorDependencyWarnings() {

    };
    CensorDependencyWarnings.value = new CensorDependencyWarnings();
    return CensorDependencyWarnings;
})();
var CensorProjectWarnings = /* #__PURE__ */ (function () {
    function CensorProjectWarnings() {

    };
    CensorProjectWarnings.value = new CensorProjectWarnings();
    return CensorProjectWarnings;
})();
var CensorAllWarnings = /* #__PURE__ */ (function () {
    function CensorAllWarnings() {

    };
    CensorAllWarnings.value = new CensorAllWarnings();
    return CensorAllWarnings;
})();
var BundleApp = /* #__PURE__ */ (function () {
    function BundleApp() {

    };
    BundleApp.value = new BundleApp();
    return BundleApp;
})();
var BundleModule = /* #__PURE__ */ (function () {
    function BundleModule() {

    };
    BundleModule.value = new BundleModule();
    return BundleModule;
})();
var BundleNode = /* #__PURE__ */ (function () {
    function BundleNode() {

    };
    BundleNode.value = new BundleNode();
    return BundleNode;
})();
var BundleBrowser = /* #__PURE__ */ (function () {
    function BundleBrowser() {

    };
    BundleBrowser.value = new BundleBrowser();
    return BundleBrowser;
})();
var showStatVerbosity = {
    show: function (v) {
        if (v instanceof NoStats) {
            return "NoStats";
        };
        if (v instanceof CompactStats) {
            return "CompactStats";
        };
        if (v instanceof VerboseStats) {
            return "VerboseStats";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 363, column 10 - line 366, column 35): " + [ v.constructor.name ]);
    }
};
var showShowSourceCode = {
    show: function (v) {
        if (v instanceof ShowSourceCode) {
            return "ShowSourceCode";
        };
        if (v instanceof NoSourceCode) {
            return "NoSourceCode";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 353, column 10 - line 355, column 35): " + [ v.constructor.name ]);
    }
};
var showCensorBuildWarnings = {
    show: function (v) {
        if (v instanceof CensorNoWarnings) {
            return "CensorNoWarnings";
        };
        if (v instanceof CensorDependencyWarnings) {
            return "CensorDependencyWarnings";
        };
        if (v instanceof CensorProjectWarnings) {
            return "CensorProjectWarnings";
        };
        if (v instanceof CensorAllWarnings) {
            return "CensorAllWarnings";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 314, column 10 - line 318, column 45): " + [ v.constructor.name ]);
    }
};
var showBundleType = {
    show: function (v) {
        if (v instanceof BundleApp) {
            return "app";
        };
        if (v instanceof BundleModule) {
            return "module";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 183, column 10 - line 185, column 29): " + [ v.constructor.name ]);
    }
};
var showBundlePlatform = {
    show: function (v) {
        if (v instanceof BundleNode) {
            return "node";
        };
        if (v instanceof BundleBrowser) {
            return "browser";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 165, column 10 - line 167, column 31): " + [ v.constructor.name ]);
    }
};
var semigroupDependencies = {
    append: function (v) {
        return function (v1) {
            return unionWith(function (v2) {
                return function (v3) {
                    if (v2 instanceof Data_Maybe.Nothing && v3 instanceof Data_Maybe.Nothing) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (v2 instanceof Data_Maybe.Just && v3 instanceof Data_Maybe.Nothing) {
                        return new Data_Maybe.Just(v2.value0);
                    };
                    if (v2 instanceof Data_Maybe.Nothing && v3 instanceof Data_Maybe.Just) {
                        return new Data_Maybe.Just(v3.value0);
                    };
                    if (v2 instanceof Data_Maybe.Just && v3 instanceof Data_Maybe.Just) {
                        return Registry_Range.intersect(v2.value0)(v3.value0);
                    };
                    throw new Error("Failed pattern match at Spago.Core.Config (line 203, column 7 - line 207, column 50): " + [ v2.constructor.name, v3.constructor.name ]);
                };
            })(v)(v1);
        };
    }
};
var newtypeDependencies_ = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidDependencies = {
    mempty: Data_Map_Internal.empty,
    Semigroup0: function () {
        return semigroupDependencies;
    }
};
var eqShowSourceCode = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ShowSourceCode && y instanceof ShowSourceCode) {
                return true;
            };
            if (x instanceof NoSourceCode && y instanceof NoSourceCode) {
                return true;
            };
            return false;
        };
    }
};
var eqSetAddress = {
    eq: function (x) {
        return function (y) {
            if (x instanceof SetFromRegistry && y instanceof SetFromRegistry) {
                return eq(x.value0.registry)(y.value0.registry);
            };
            if (x instanceof SetFromUrl && y instanceof SetFromUrl) {
                return eq1(x.value0.hash)(y.value0.hash) && x.value0.url === y.value0.url;
            };
            return false;
        };
    }
};
var eqDependencies = {
    eq: function (x) {
        return function (y) {
            return eq3(x)(y);
        };
    }
};
var eq7 = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Maybe.eqMaybe(eqDependencies));
var eqRemotePackage = {
    eq: function (x) {
        return function (y) {
            if (x instanceof RemoteGitPackage && y instanceof RemoteGitPackage) {
                return eq7(x.value0.dependencies)(y.value0.dependencies) && x.value0.git === y.value0.git && x.value0.ref === y.value0.ref && eq4(x.value0.subdir)(y.value0.subdir);
            };
            if (x instanceof RemoteRegistryVersion && y instanceof RemoteRegistryVersion) {
                return eq(x.value0)(y.value0);
            };
            if (x instanceof RemoteLegacyPackage && y instanceof RemoteLegacyPackage) {
                return eq5(x.value0.dependencies)(y.value0.dependencies) && x.value0.repo === y.value0.repo && x.value0.version === y.value0.version;
            };
            return false;
        };
    }
};
var eq8 = /* #__PURE__ */ Data_Eq.eq(eqRemotePackage);
var eqExtraPackage = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ExtraLocalPackage && y instanceof ExtraLocalPackage) {
                return x.value0.path === y.value0.path;
            };
            if (x instanceof ExtraRemotePackage && y instanceof ExtraRemotePackage) {
                return eq8(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var eqCensorBuildWarnings = {
    eq: function (x) {
        return function (y) {
            if (x instanceof CensorNoWarnings && y instanceof CensorNoWarnings) {
                return true;
            };
            if (x instanceof CensorDependencyWarnings && y instanceof CensorDependencyWarnings) {
                return true;
            };
            if (x instanceof CensorProjectWarnings && y instanceof CensorProjectWarnings) {
                return true;
            };
            if (x instanceof CensorAllWarnings && y instanceof CensorAllWarnings) {
                return true;
            };
            return false;
        };
    }
};
var widestRange = /* #__PURE__ */ Data_Either["fromRight$prime"](function (v) {
    return Partial_Unsafe.unsafeCrashWith("Fake range failed");
})(/* #__PURE__ */ Registry_Range.parse(">=0.0.0 <2147483647.0.0"));
var statVerbosityCodec = /* #__PURE__ */ (function () {
    var print = function (v) {
        if (v instanceof NoStats) {
            return "no-stats";
        };
        if (v instanceof CompactStats) {
            return "compact-stats";
        };
        if (v instanceof VerboseStats) {
            return "verbose-stats";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 371, column 11 - line 374, column 36): " + [ v.constructor.name ]);
    };
    var parse = function (v) {
        if (v === "no-stats") {
            return new Data_Maybe.Just(NoStats.value);
        };
        if (v === "compact-stats") {
            return new Data_Maybe.Just(CompactStats.value);
        };
        if (v === "verbose-stats") {
            return new Data_Maybe.Just(VerboseStats.value);
        };
        return Data_Maybe.Nothing.value;
    };
    return Data_Codec_Argonaut_Sum.enumSum(print)(parse);
})();
var showSourceCodec = /* #__PURE__ */ (function () {
    var to = function (v) {
        if (v instanceof ShowSourceCode) {
            return true;
        };
        if (v instanceof NoSourceCode) {
            return false;
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 345, column 8 - line 347, column 26): " + [ v.constructor.name ]);
    };
    var from = function (v) {
        if (!v) {
            return NoSourceCode.value;
        };
        if (v) {
            return ShowSourceCode.value;
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 348, column 10 - line 350, column 27): " + [ v.constructor.name ]);
    };
    return dimap(to)(from)(Data_Codec_Argonaut["boolean"]);
})();
var setAddressCodec = /* #__PURE__ */ (function () {
    var setFromUrlCodec = object(Data_Codec_Argonaut_Record.rowListCodecConsOptional(rowListCodecCons({
        reflectSymbol: function () {
            return "url";
        }
    }))()()({
        reflectSymbol: function () {
            return "hash";
        }
    }))("SetFromUrl")({
        url: Data_Codec_Argonaut.string,
        hash: Data_Codec_Argonaut_Record.optional(Registry_Sha256.codec)
    });
    var setFromRegistryCodec = object(rowListCodecCons({
        reflectSymbol: function () {
            return "registry";
        }
    }))("SetFromRegistry")({
        registry: Registry_Version.codec
    });
    var encode = function (v) {
        if (v instanceof SetFromRegistry) {
            return Data_Codec.encode(setFromRegistryCodec)(v.value0);
        };
        if (v instanceof SetFromUrl) {
            return Data_Codec.encode(setFromUrlCodec)(v.value0);
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 393, column 3 - line 393, column 64): " + [ v.constructor.name ]);
    };
    var decode = function (json) {
        return alt(map(SetFromRegistry.create)(Data_Codec.decode(setFromRegistryCodec)(json)))(map(SetFromUrl.create)(Data_Codec.decode(setFromUrlCodec)(json)));
    };
    return Data_Codec["codec$prime"](decode)(encode);
})();
var runConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecConsOptional(mainIsSymbol))()()(execArgsIsSymbol))("RunConfig")({
    main: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    execArgs: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ Data_Codec_Argonaut.array(Data_Codec_Argonaut.string))
});
var publishConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(rowListCodecCons1)()()({
    reflectSymbol: function () {
        return "location";
    }
}))()()({
    reflectSymbol: function () {
        return "license";
    }
}))()()({
    reflectSymbol: function () {
        return "include";
    }
}))()()({
    reflectSymbol: function () {
        return "exclude";
    }
}))("PublishConfig")({
    version: Registry_Version.codec,
    license: Registry_License.codec,
    location: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Registry_Location.codec),
    include: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ Data_Codec_Argonaut.array(Data_Codec_Argonaut.string)),
    exclude: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ Data_Codec_Argonaut.array(Data_Codec_Argonaut.string))
});
var printSpagoRange = function (range) {
    var $383 = eq6(range)(widestRange);
    if ($383) {
        return "*";
    };
    return Registry_Range.print(range);
};
var spagoRangeCodec = /* #__PURE__ */ (function () {
    var rangeParse = function (str) {
        var $384 = str === "*";
        if ($384) {
            return new Data_Maybe.Just(widestRange);
        };
        return Data_Either.hush(Registry_Range.parse(str));
    };
    return Data_Codec_Argonaut.prismaticCodec("SpagoRange")(rangeParse)(printSpagoRange)(Data_Codec_Argonaut.string);
})();
var parsePlatform = function (v) {
    if (v === "node") {
        return new Data_Maybe.Just(BundleNode.value);
    };
    if (v === "browser") {
        return new Data_Maybe.Just(BundleBrowser.value);
    };
    return Data_Maybe.Nothing.value;
};
var parseBundleType = function (v) {
    if (v === "app") {
        return new Data_Maybe.Just(BundleApp.value);
    };
    if (v === "module") {
        return new Data_Maybe.Just(BundleModule.value);
    };
    return Data_Maybe.Nothing.value;
};
var localPackageCodec = /* #__PURE__ */ object(/* #__PURE__ */ rowListCodecCons({
    reflectSymbol: function () {
        return "path";
    }
}))("LocalPackage")({
    path: Data_Codec_Argonaut.string
});
var legacyPackageSetEntryCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(rowListCodecCons1)()()({
    reflectSymbol: function () {
        return "repo";
    }
}))()()(dependenciesIsSymbol))("LegacyPackageSetEntry")({
    dependencies: /* #__PURE__ */ Data_Codec_Argonaut.array(Registry_PackageName.codec),
    repo: Data_Codec_Argonaut.string,
    version: Data_Codec_Argonaut.string
});
var dependenciesCodec = /* #__PURE__ */ (function () {
    var to = function (v) {
        return map1(function (v1) {
            if (v1.value1 instanceof Data_Maybe.Nothing) {
                return new Data_Either.Left(v1.value0);
            };
            if (v1.value1 instanceof Data_Maybe.Just) {
                return new Data_Either.Right(Data_Map_Internal.singleton(v1.value0)(v1.value1.value0));
            };
            throw new Error("Failed pattern match at Spago.Core.Config (line 223, column 37 - line 225, column 49): " + [ v1.value1.constructor.name ]);
        })(toUnfoldable(v));
    };
    var packageSingletonCodec = Registry_Internal_Codec.packageMap(spagoRangeCodec);
    var from = (function () {
        var $409 = Data_Map_Internal.fromFoldable(Registry_PackageName.ordPackageName)(Data_Foldable.foldableArray);
        var $410 = map1(function (v) {
            if (v instanceof Data_Either.Left) {
                return new Data_Tuple.Tuple(v.value0, Data_Maybe.Nothing.value);
            };
            if (v instanceof Data_Either.Right) {
                return rmap(Data_Maybe.Just.create)(Spago_Core_Prelude.unsafeFromJust(Data_List.head(toUnfoldable1(v.value0))));
            };
            throw new Error("Failed pattern match at Spago.Core.Config (line 231, column 7 - line 233, column 79): " + [ v.constructor.name ]);
        });
        return function ($411) {
            return Dependencies($409($410($411)));
        };
    })();
    var dependencyCodec = (function () {
        var encode = function (v) {
            if (v instanceof Data_Either.Left) {
                return Data_Codec.encode(Registry_PackageName.codec)(v.value0);
            };
            if (v instanceof Data_Either.Right) {
                return Data_Codec.encode(packageSingletonCodec)(v.value0);
            };
            throw new Error("Failed pattern match at Spago.Core.Config (line 239, column 14 - line 241, column 73): " + [ v.constructor.name ]);
        };
        var decode = function (json) {
            return alt(map(Data_Either.Left.create)(Data_Codec.decode(Registry_PackageName.codec)(json)))(map(Data_Either.Right.create)(Data_Codec.decode(packageSingletonCodec)(json)));
        };
        return Data_Codec["codec$prime"](decode)(encode);
    })();
    return dimap(to)(from)(Data_Codec_Argonaut.array(dependencyCodec));
})();
var gitPackageCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ rowListCodecConsOptional({
    reflectSymbol: function () {
        return "subdir";
    }
}))()()({
    reflectSymbol: function () {
        return "ref";
    }
}))()()({
    reflectSymbol: function () {
        return "git";
    }
}))()()(dependenciesIsSymbol))("GitPackage")({
    git: Data_Codec_Argonaut.string,
    ref: Data_Codec_Argonaut.string,
    subdir: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    dependencies: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(dependenciesCodec)
});
var remotePackageCodec = /* #__PURE__ */ (function () {
    var encode = function (v) {
        if (v instanceof RemoteRegistryVersion) {
            return Data_Codec.encode(Registry_Version.codec)(v.value0);
        };
        if (v instanceof RemoteGitPackage) {
            return Data_Codec.encode(gitPackageCodec)(v.value0);
        };
        if (v instanceof RemoteLegacyPackage) {
            return Data_Codec.encode(legacyPackageSetEntryCodec)(v.value0);
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 429, column 3 - line 429, column 63): " + [ v.constructor.name ]);
    };
    var decode = function (json) {
        return alt(map(RemoteRegistryVersion.create)(Data_Codec.decode(Registry_Version.codec)(json)))(alt(map(RemoteGitPackage.create)(Data_Codec.decode(gitPackageCodec)(json)))(map(RemoteLegacyPackage.create)(Data_Codec.decode(legacyPackageSetEntryCodec)(json))));
    };
    return Data_Codec["codec$prime"](decode)(encode);
})();
var extraPackageCodec = /* #__PURE__ */ (function () {
    var encode = function (v) {
        if (v instanceof ExtraLocalPackage) {
            return Data_Codec.encode(localPackageCodec)(v.value0);
        };
        if (v instanceof ExtraRemotePackage) {
            return Data_Codec.encode(remotePackageCodec)(v.value0);
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 408, column 3 - line 408, column 65): " + [ v.constructor.name ]);
    };
    var decode = function (json) {
        return alt(map(ExtraLocalPackage.create)(Data_Codec.decode(localPackageCodec)(json)))(map(ExtraRemotePackage.create)(Data_Codec.decode(remotePackageCodec)(json)));
    };
    return Data_Codec["codec$prime"](decode)(encode);
})();
var testConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecCons(mainIsSymbol))()()(execArgsIsSymbol))()()(dependenciesIsSymbol))("TestConfig")({
    main: Data_Codec_Argonaut.string,
    execArgs: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ Data_Codec_Argonaut.array(Data_Codec_Argonaut.string)),
    dependencies: dependenciesCodec
});
var censorBuildWarningsCodec = /* #__PURE__ */ (function () {
    var print = function (v) {
        if (v instanceof CensorNoWarnings) {
            return "none";
        };
        if (v instanceof CensorDependencyWarnings) {
            return "dependency";
        };
        if (v instanceof CensorProjectWarnings) {
            return "project";
        };
        if (v instanceof CensorAllWarnings) {
            return "all";
        };
        throw new Error("Failed pattern match at Spago.Core.Config (line 323, column 11 - line 327, column 31): " + [ v.constructor.name ]);
    };
    var parse = function (v) {
        if (v === "none") {
            return new Data_Maybe.Just(CensorNoWarnings.value);
        };
        if (v === "dependency") {
            return new Data_Maybe.Just(CensorDependencyWarnings.value);
        };
        if (v === "project") {
            return new Data_Maybe.Just(CensorProjectWarnings.value);
        };
        if (v === "all") {
            return new Data_Maybe.Just(CensorAllWarnings.value);
        };
        return Data_Maybe.Nothing.value;
    };
    return Data_Codec_Argonaut_Sum.enumSum(print)(parse);
})();
var bundleTypeCodec = /* #__PURE__ */ Data_Codec_Argonaut_Sum.enumSum(/* #__PURE__ */ Data_Show.show(showBundleType))(parseBundleType);
var bundlePlatformCodec = /* #__PURE__ */ Data_Codec_Argonaut_Sum.enumSum(/* #__PURE__ */ Data_Show.show(showBundlePlatform))(parsePlatform);
var bundleConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecConsOptional({
    reflectSymbol: function () {
        return "type";
    }
}))()()({
    reflectSymbol: function () {
        return "platform";
    }
}))()()({
    reflectSymbol: function () {
        return "outfile";
    }
}))()()({
    reflectSymbol: function () {
        return "module";
    }
}))()()({
    reflectSymbol: function () {
        return "minify";
    }
}))("BundleConfig")({
    minify: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut["boolean"]),
    module: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    outfile: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    platform: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(bundlePlatformCodec),
    type: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(bundleTypeCodec)
});
var packageConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecConsOptional({
    reflectSymbol: function () {
        return "test";
    }
}))()()({
    reflectSymbol: function () {
        return "run";
    }
}))()()({
    reflectSymbol: function () {
        return "publish";
    }
}))()()({
    reflectSymbol: function () {
        return "name";
    }
}))()()({
    reflectSymbol: function () {
        return "description";
    }
}))()()(dependenciesIsSymbol))()()({
    reflectSymbol: function () {
        return "bundle";
    }
}))("PackageConfig")({
    name: Registry_PackageName.codec,
    description: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    dependencies: dependenciesCodec,
    bundle: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(bundleConfigCodec),
    run: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(runConfigCodec),
    test: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(testConfigCodec),
    publish: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(publishConfigCodec)
});
var buildOptionsCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecConsOptional({
    reflectSymbol: function () {
        return "strict";
    }
}))()()({
    reflectSymbol: function () {
        return "stat_verbosity";
    }
}))()()({
    reflectSymbol: function () {
        return "show_source";
    }
}))()()({
    reflectSymbol: function () {
        return "persist_warnings";
    }
}))()()({
    reflectSymbol: function () {
        return "pedantic_packages";
    }
}))()()({
    reflectSymbol: function () {
        return "output";
    }
}))()()({
    reflectSymbol: function () {
        return "filter_codes";
    }
}))()()({
    reflectSymbol: function () {
        return "censor_warnings";
    }
}))()()({
    reflectSymbol: function () {
        return "censor_codes";
    }
}))("CompileOptionsInput")({
    output: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    pedantic_packages: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut["boolean"]),
    censor_warnings: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(censorBuildWarningsCodec),
    censor_codes: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ nonEmptySet(Data_Codec_Argonaut.string)),
    filter_codes: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ nonEmptySet(Data_Codec_Argonaut.string)),
    stat_verbosity: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(statVerbosityCodec),
    show_source: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(showSourceCodec),
    strict: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut["boolean"]),
    persist_warnings: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut["boolean"])
});
var backendConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecCons({
    reflectSymbol: function () {
        return "cmd";
    }
}))()()({
    reflectSymbol: function () {
        return "args";
    }
}))("BackendConfig")({
    cmd: Data_Codec_Argonaut.string,
    args: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ Data_Codec_Argonaut.array(Data_Codec_Argonaut.string))
});
var workspaceConfigCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecConsOptional({
    reflectSymbol: function () {
        return "package_set";
    }
}))()()({
    reflectSymbol: function () {
        return "lock";
    }
}))()()({
    reflectSymbol: function () {
        return "extra_packages";
    }
}))()()({
    reflectSymbol: function () {
        return "build_opts";
    }
}))()()({
    reflectSymbol: function () {
        return "backend";
    }
}))("WorkspaceConfig")({
    package_set: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(setAddressCodec),
    extra_packages: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(/* #__PURE__ */ Registry_Internal_Codec.packageMap(extraPackageCodec)),
    backend: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(backendConfigCodec),
    build_opts: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(buildOptionsCodec),
    lock: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut["boolean"])
});
var configCodec = /* #__PURE__ */ object(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ rowListCodecConsOptional({
    reflectSymbol: function () {
        return "workspace";
    }
}))()()({
    reflectSymbol: function () {
        return "package";
    }
}))("Config")({
    "package": /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(packageConfigCodec),
    workspace: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(workspaceConfigCodec)
});
var readConfig = function (path) {
    return discard(logDebug("Reading config from " + path))(function () {
        return bind(exists(path))(function (v) {
            if (!v) {
                return pure(new Data_Either.Left("Did not find " + (path + " file. Run `spago init` to initialise a new project.")));
            };
            if (v) {
                return liftAff(Spago_FS.readYamlDocFile(configCodec)(path));
            };
            throw new Error("Failed pattern match at Spago.Core.Config (line 470, column 22 - line 472, column 58): " + [ v.constructor.name ]);
        });
    });
};
export {
    CensorNoWarnings,
    CensorDependencyWarnings,
    CensorProjectWarnings,
    CensorAllWarnings,
    ShowSourceCode,
    NoSourceCode,
    NoStats,
    CompactStats,
    VerboseStats,
    BundleNode,
    BundleBrowser,
    BundleApp,
    BundleModule,
    Dependencies,
    ExtraLocalPackage,
    ExtraRemotePackage,
    RemoteGitPackage,
    RemoteRegistryVersion,
    RemoteLegacyPackage,
    SetFromRegistry,
    SetFromUrl,
    configCodec,
    dependenciesCodec,
    extraPackageCodec,
    gitPackageCodec,
    legacyPackageSetEntryCodec,
    localPackageCodec,
    packageConfigCodec,
    parseBundleType,
    parsePlatform,
    printSpagoRange,
    readConfig,
    remotePackageCodec,
    setAddressCodec,
    widestRange,
    showBundlePlatform,
    showBundleType,
    eqDependencies,
    newtypeDependencies_,
    semigroupDependencies,
    monoidDependencies,
    eqCensorBuildWarnings,
    showCensorBuildWarnings,
    eqShowSourceCode,
    showShowSourceCode,
    showStatVerbosity,
    eqSetAddress,
    eqExtraPackage,
    eqRemotePackage
};
//# sourceMappingURL=index.js.map
