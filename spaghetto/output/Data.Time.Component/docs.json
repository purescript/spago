{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Hour"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[21,42],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[21,1]},"title":"eqHour"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Hour"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[22,44],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[22,1]},"title":"ordHour"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Bounded"],"Bounded"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Hour"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[26,16],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[24,1]},"title":"boundedHour"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"Enum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Hour"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[30,41],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[28,1]},"title":"enumHour"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"BoundedEnum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Hour"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[37,24],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[32,1]},"title":"boundedEnumHour"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Hour"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[40,44],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[39,1]},"title":"showHour"}],"comments":"An hour component for a time value.\n\nThe constructor is private as values for the type are restricted to the\nrange 0 to 23, inclusive. The `toEnum` function can be used to safely\nacquire an `Hour` value from an integer. Correspondingly, an `Hour` can be\nlowered to a plain integer with the `fromEnum` function.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[19,24],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[19,1]},"title":"Hour"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Minute"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[50,46],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[50,1]},"title":"eqMinute"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Minute"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[51,48],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[51,1]},"title":"ordMinute"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Bounded"],"Bounded"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Minute"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[55,18],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[53,1]},"title":"boundedMinute"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"Enum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Minute"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[59,41],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[57,1]},"title":"enumMinute"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"BoundedEnum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Minute"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[66,26],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[61,1]},"title":"boundedEnumMinute"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Minute"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[69,48],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[68,1]},"title":"showMinute"}],"comments":"An minute component for a time value.\n\nThe constructor is private as values for the type are restricted to the\nrange 0 to 59, inclusive. The `toEnum` function can be used to safely\nacquire an `Minute` value from an integer. Correspondingly, a `Minute` can\nbe lowered to a plain integer with the `fromEnum` function.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[48,28],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[48,1]},"title":"Minute"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Second"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[79,46],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[79,1]},"title":"eqSecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Second"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[80,48],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[80,1]},"title":"ordSecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Bounded"],"Bounded"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Second"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[84,18],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[82,1]},"title":"boundedSecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"Enum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Second"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[88,41],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[86,1]},"title":"enumSecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"BoundedEnum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Second"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[95,26],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[90,1]},"title":"boundedEnumSecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Second"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[98,48],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[97,1]},"title":"showSecond"}],"comments":"An second component for a time value.\n\nThe constructor is private as values for the type are restricted to the\nrange 0 to 59, inclusive. The `toEnum` function can be used to safely\nacquire an `Second` value from an integer. Correspondingly, a `Second` can\nbe lowered to a plain integer with the `fromEnum` function.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[77,28],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[77,1]},"title":"Second"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Millisecond"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[109,56],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[109,1]},"title":"eqMillisecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Millisecond"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[110,58],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[110,1]},"title":"ordMillisecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Bounded"],"Bounded"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Millisecond"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[114,24],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[112,1]},"title":"boundedMillisecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"Enum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Millisecond"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[118,41],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[116,1]},"title":"enumMillisecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Enum"],"BoundedEnum"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Millisecond"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[125,31],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[120,1]},"title":"boundedEnumMillisecond"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Time","Component"],"Millisecond"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[128,58],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[127,1]},"title":"showMillisecond"}],"comments":"An millisecond component for a time value.\n\nThe constructor is private as values for the type are restricted to the\nrange 0 to 999, inclusive. The `toEnum` function can be used to safely\nacquire an `Millisecond` value from an integer. Correspondingly, a\n`Millisecond` can be lowered to a plain integer with the `fromEnum`\nfunction.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[107,38],"name":".spago/packages/datetime-6.1.0/src/Data/Time/Component.purs","start":[107,1]},"title":"Millisecond"}],"name":"Data.Time.Component","reExports":[]}