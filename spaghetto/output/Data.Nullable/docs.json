{"comments":"This module defines types and functions for working with nullable types\nusing the FFI.\n","declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]}],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[67,39],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[66,1]},"title":"showNullable"},{"comments":null,"info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Eq"],"Eq"],"constraintData":null,"constraintKindArgs":[]}],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[70,23],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[69,1]},"title":"eqNullable"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[73,11],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[72,1]},"title":"eq1Nullable"},{"comments":null,"info":{"declType":"instance","dependencies":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Ord"],"Ord"],"constraintData":null,"constraintKindArgs":[]}],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[76,33],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[75,1]},"title":"ordNullable"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord1"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[79,21],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[78,1]},"title":"ord1Nullable"}],"comments":"A nullable type. This type constructor is intended to be used for\ninteroperating with JavaScript functions which accept or return null\nvalues.\n\nThe runtime representation of `Nullable T` is the same as that of `T`,\nexcept that it may also be `null`. For example, the JavaScript values\n`null`, `[]`, and `[1,2,3]` may all be given the type\n`Nullable (Array Int)`. Similarly, the JavaScript values `[]`, `[null]`,\nand `[1,2,null,3]` may all be given the type `Array (Nullable Int)`.\n\nThere is one pitfall with `Nullable`, which is that values of the type\n`Nullable T` will not function as you might expect if the type `T` happens\nto itself permit `null` as a valid runtime representation.\n\nIn particular, values of the type `Nullable (Nullable T)` will ‘collapse’,\nin the sense that the PureScript expressions `notNull null` and `null`\nwill both leave you with a value whose runtime representation is just\n`null`. Therefore it is important to avoid using `Nullable T` in\nsituations where `T` itself can take `null` as a runtime representation.\nIf in doubt, use `Maybe` instead.\n\n`Nullable` does not permit lawful `Functor`, `Applicative`, or `Monad`\ninstances as a result of this pitfall, which is why these instances are\nnot provided.\n","info":{"dataDeclType":"data","declType":"data","roles":["Representational"],"typeArguments":[["t0",null]]},"kind":null,"sourceSpan":{"end":[44,45],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[44,1]},"title":"Nullable"},{"children":[],"comments":"The null value.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[49,44],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[49,1]},"title":"null"},{"children":[],"comments":"Wrap a non-null value.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[54,52],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[54,1]},"title":"notNull"},{"children":[],"comments":"Represent `null` using `Maybe a` as `Nothing`. Note that this function\ncan violate parametricity, as it inspects the runtime representation of\nits argument (see the warning about the pitfall of `Nullable` above).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[63,43],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[63,1]},"title":"toMaybe"},{"children":[],"comments":"Takes `Nothing` to `null`, and `Just a` to `a`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Nullable"],"Nullable"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[57,46],"name":".spago/packages/nullable-6.0.0/src/Data/Nullable.purs","start":[57,1]},"title":"toNullable"}],"name":"Data.Nullable","reExports":[]}