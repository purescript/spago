// Generated by purs version 0.15.10
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Node_Path from "../Node.Path/index.js";
import * as Spago_Cmd from "../Spago.Cmd/index.js";
import * as Spago_Core_Config from "../Spago.Core.Config/index.js";
import * as Spago_Core_Prelude from "../Spago.Core.Prelude/index.js";
import * as Spago_Log from "../Spago.Log/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Spago_Core_Prelude.bindSpago);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Spago_Core_Prelude.bindSpago);
var logDebug = /* #__PURE__ */ Spago_Log.logDebug(Spago_Core_Prelude.monadEffectSpago)(Spago_Core_Prelude.monadAskSpago)(Spago_Log.loggableString);
var showRecord = /* #__PURE__ */ Data_Show.showRecord()();
var show = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "minify";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "module";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "outfile";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "platform";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil({
    reflectSymbol: function () {
        return "type";
    }
})(Spago_Core_Config.showBundleType))(Spago_Core_Config.showBundlePlatform))(Data_Show.showString))(Data_Show.showString))(Data_Show.showBoolean)));
var append1 = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);
var show1 = /* #__PURE__ */ Data_Show.show(Spago_Core_Config.showBundlePlatform);
var logInfo = /* #__PURE__ */ Spago_Log.logInfo(Spago_Core_Prelude.monadEffectSpago)(Spago_Core_Prelude.monadAskSpago)(Spago_Log.loggableString);
var show2 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ Data_Show.showArray(Data_Show.showString));
var exec = /* #__PURE__ */ Spago_Cmd.exec(Spago_Core_Prelude.monadAffSpago);
var logSuccess = /* #__PURE__ */ Spago_Log.logSuccess(Spago_Core_Prelude.monadEffectSpago)(Spago_Core_Prelude.monadAskSpago)(Spago_Log.loggableString);
var showMaybe = /* #__PURE__ */ Data_Maybe.showMaybe(Data_Show.showString);
var show3 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "escapedCommand";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "exitCode";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "failed";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "isCanceled";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "killed";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "message";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "originalMessage";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "shortMessage";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "signal";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "signalDescription";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "stderr";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "stdout";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil({
    reflectSymbol: function () {
        return "timedOut";
    }
})(Data_Show.showBoolean))(Data_Show.showString))(Data_Show.showString))(showMaybe))(/* #__PURE__ */ Data_Maybe.showMaybe(/* #__PURE__ */ Data_Either.showEither(Data_Show.showInt)(Data_Show.showString))))(Data_Show.showString))(showMaybe))(Data_Show.showString))(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))(/* #__PURE__ */ Data_Maybe.showMaybe(Data_Show.showInt)))(Data_Show.showString)));
var die = /* #__PURE__ */ Spago_Log.die(Spago_Core_Prelude.monadEffectSpago)(Spago_Core_Prelude.monadAskSpago)(/* #__PURE__ */ Spago_Log.loggableArray(Spago_Log.loggableString));
var run = /* #__PURE__ */ bind(/* #__PURE__ */ Control_Monad_Reader_Class.ask(Spago_Core_Prelude.monadAskSpago))(function (v) {
    return discard(logDebug("Bundle options: " + show(v.bundleOptions)))(function () {
        var output = (function () {
            if (v.workspace.buildOptions.output instanceof Data_Maybe.Nothing) {
                return "output";
            };
            if (v.workspace.buildOptions.output instanceof Data_Maybe.Just) {
                return v.workspace.buildOptions.output.value0;
            };
            throw new Error("Failed pattern match at Spago.Command.Bundle (line 53, column 14 - line 55, column 18): " + [ v.workspace.buildOptions.output.constructor.name ]);
        })();
        var outfile = Node_Path.concat([ v.selected.path, v.bundleOptions.outfile ]);
        var nodePatch = (function () {
            if (v.bundleOptions.platform instanceof Spago_Core_Config.BundleNode) {
                return [ "--banner:js=import __module from 'module';import __path from 'path';import __url from 'url';const require = __module.createRequire(import.meta.url);const __dirname = __path.dirname(__url.fileURLToPath(import.meta.url));" ];
            };
            return [  ];
        })();
        var minify = (function () {
            if (v.bundleOptions.minify) {
                return [ "--minify" ];
            };
            return [  ];
        })();
        var mainPath = Data_String_Common.replaceAll("\\")("/")(Node_Path.concat([ output, v.bundleOptions.module, "index.js" ]));
        var format = (function () {
            if (v.bundleOptions.platform instanceof Spago_Core_Config.BundleBrowser && v.bundleOptions.type instanceof Spago_Core_Config.BundleApp) {
                return "--format=iife";
            };
            return "--format=esm";
        })();
        var v1 = (function () {
            if (v.bundleOptions.type instanceof Spago_Core_Config.BundleApp) {
                return {
                    entrypoint: [  ],
                    input: new Spago_Cmd.StdinWrite("#!/usr/bin/env node\x0a\x0aimport { main } from './" + (mainPath + "'; main();"))
                };
            };
            if (v.bundleOptions.type instanceof Spago_Core_Config.BundleModule) {
                return {
                    entrypoint: [ mainPath ],
                    input: Spago_Cmd.StdinNewPipe.value
                };
            };
            throw new Error("Failed pattern match at Spago.Command.Bundle (line 61, column 29 - line 63, column 76): " + [ v.bundleOptions.type.constructor.name ]);
        })();
        var execOptions = {
            pipeStdin: v1.input,
            cwd: Spago_Cmd.defaultExecOptions.cwd,
            pipeStderr: Spago_Cmd.defaultExecOptions.pipeStderr,
            pipeStdout: Spago_Cmd.defaultExecOptions.pipeStdout
        };
        var args = append1([ "--bundle", "--outfile=" + outfile, "--platform=" + show1(v.bundleOptions.platform), "--loader:.node=file", format ])(append1(minify)(append1(v1.entrypoint)(nodePatch)));
        return discard(logInfo("Bundling..."))(function () {
            return discard(logDebug("Running esbuild: " + show2(args)))(function () {
                return bind(exec(v.esbuild.cmd)(args)(execOptions))(function (v2) {
                    if (v2 instanceof Data_Either.Right) {
                        return logSuccess("Bundle succeeded.");
                    };
                    if (v2 instanceof Data_Either.Left) {
                        return discard(logDebug(show3(v2.value0)))(function () {
                            return die([ "Failed to bundle." ]);
                        });
                    };
                    throw new Error("Failed pattern match at Spago.Command.Bundle (line 76, column 45 - line 80, column 34): " + [ v2.constructor.name ]);
                });
            });
        });
    });
});
export {
    run
};
