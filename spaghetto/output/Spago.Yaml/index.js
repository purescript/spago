// Generated by purs version 0.15.10
import * as $foreign from "./foreign.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Codec from "../Data.Codec/index.js";
import * as Data_Codec_Argonaut from "../Data.Codec.Argonaut/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Function_Uncurried from "../Data.Function.Uncurried/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Data_Either.bindEither);
var lmap = /* #__PURE__ */ Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither);
var pure = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);
var map = /* #__PURE__ */ Data_Functor.map(Data_Either.functorEither);
var yamlParser = function (j) {
    return $foreign.yamlDocParserImpl(Data_Either.Left.create, Data_Either.Right.create, j);
};
var toString = /* #__PURE__ */ Data_Function_Uncurried.runFn1($foreign.toStringImpl);
var toJson = /* #__PURE__ */ Data_Function_Uncurried.runFn1($foreign.toJsonImpl);
var stringifyYaml = function (codec) {
    var $8 = Data_Codec.encode(codec);
    return function ($9) {
        return $foreign.stringify($8($9));
    };
};
var printYaml = function (codec) {
    var $10 = $foreign.stringifyWithIndent(2);
    var $11 = Data_Codec.encode(codec);
    return function ($12) {
        return $10($11($12));
    };
};
var parseYamlDoc = function (codec) {
    return function (yamlStr) {
        return bind(lmap(function (err) {
            return new Data_Codec_Argonaut.TypeMismatch("YAML: " + err);
        })(yamlParser(yamlStr)))(function (doc) {
            return bind(Data_Codec.decode(codec)(toJson(doc)))(function (yaml) {
                return pure({
                    doc: doc,
                    yaml: yaml
                });
            });
        });
    };
};
var parseYaml = function (codec) {
    var $13 = map(function (v) {
        return v.yaml;
    });
    var $14 = parseYamlDoc(codec);
    return function ($15) {
        return $13($14($15));
    };
};
export {
    parseYaml,
    parseYamlDoc,
    printYaml,
    stringifyYaml,
    toString
};
//# sourceMappingURL=index.js.map
