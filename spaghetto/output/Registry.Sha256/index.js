// Generated by purs version 0.15.10
import * as $foreign from "./foreign.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Codec_Argonaut from "../Data.Codec.Argonaut/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_List_Lazy from "../Data.List.Lazy/index.js";
import * as Data_List_Lazy_Types from "../Data.List.Lazy.Types/index.js";
import * as Data_String_CodeUnits from "../Data.String.CodeUnits/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Effect_Aff_Class from "../Effect.Aff.Class/index.js";
import * as Effect_Class from "../Effect.Class/index.js";
import * as Node_Buffer from "../Node.Buffer/index.js";
import * as Node_Buffer_Class from "../Node.Buffer.Class/index.js";
import * as Node_Encoding from "../Node.Encoding/index.js";
import * as Node_FS_Aff from "../Node.FS.Aff/index.js";
import * as Parsing from "../Parsing/index.js";
import * as Parsing_String from "../Parsing.String/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Parsing.bindParserT);
var replicateM = /* #__PURE__ */ Data_List_Lazy.replicateM(Parsing.monadParserT);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Parsing.bindParserT);
var fromFoldable = /* #__PURE__ */ Data_Array.fromFoldable(Data_List_Lazy_Types.foldableList);
var pure = /* #__PURE__ */ Control_Applicative.pure(Parsing.applicativeParserT);
var toString = /* #__PURE__ */ Node_Buffer_Class.toString(Node_Buffer.mutableBufferEffect);
var bind2 = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var liftEffect = /* #__PURE__ */ Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
var fromString = /* #__PURE__ */ Node_Buffer_Class.fromString(Node_Buffer.mutableBufferEffect);
var Sha256 = function (x) {
    return x;
};
var eqSha256 = {
    eq: function (x) {
        return function (y) {
            return x.hash === y.hash && x.sri === y.sri;
        };
    }
};
var print = function (v) {
    return v.sri + ("-" + v.hash);
};
var parser = /* #__PURE__ */ bind(/* #__PURE__ */ Parsing_String.string("sha256"))(function (prefix) {
    return bind(Parsing_String["char"]("-"))(function () {
        return bind(replicateM(43)(Parsing_String.anyChar))(function (hash) {
            return bind(Parsing_String["char"]("="))(function (suffix) {
                return discard(Parsing_String.eof)(function () {
                    var fromCharList = function ($35) {
                        return Data_String_CodeUnits.fromCharArray(fromFoldable($35));
                    };
                    return pure({
                        sri: prefix,
                        hash: fromCharList(hash) + Data_String_CodeUnits.singleton(suffix)
                    });
                });
            });
        });
    });
});
var parse = /* #__PURE__ */ (function () {
    var $36 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Parsing.parseErrorMessage);
    var $37 = Data_Function.flip(Parsing.runParser)(parser);
    return function ($38) {
        return $36($37($38));
    };
})();
var hashBuffer = function (dictMonadEffect) {
    var liftEffect1 = Effect_Class.liftEffect(dictMonadEffect);
    return function (buffer) {
        return liftEffect1(function __do() {
            var newHash = $foreign.createHash("sha256")();
            var hash = $foreign.updateHash(buffer)(newHash)();
            var digest = $foreign.digestHash(hash)();
            var string = toString(Node_Encoding.Base64.value)(digest)();
            return {
                sri: "sha256",
                hash: string
            };
        });
    };
};
var hashBuffer1 = /* #__PURE__ */ hashBuffer(Effect_Class.monadEffectEffect);
var hashFile = function (dictMonadAff) {
    var liftAff = Effect_Aff_Class.liftAff(dictMonadAff);
    return function (path) {
        return liftAff(bind2(Node_FS_Aff.readFile(path))(function (fileBuffer) {
            return liftEffect(hashBuffer1(fileBuffer));
        }));
    };
};
var hashString = function (dictMonadEffect) {
    var liftEffect1 = Effect_Class.liftEffect(dictMonadEffect);
    return function (string) {
        return liftEffect1(function __do() {
            var buffer = fromString(string)(Node_Encoding.UTF8.value)();
            return hashBuffer1(buffer)();
        });
    };
};
var codec = /* #__PURE__ */ Data_Codec_Argonaut.prismaticCodec("Sha256")(function ($39) {
    return Data_Either.hush(parse($39));
})(print)(Data_Codec_Argonaut.string);
export {
    codec,
    hashBuffer,
    hashFile,
    hashString,
    parse,
    parser,
    print,
    eqSha256
};
//# sourceMappingURL=index.js.map
