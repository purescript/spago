{"comments":"A module for formatting numbers as strings.\n\nUsage:\n``` purs\n> let x = 1234.56789\n\n> toStringWith (precision 6) x\n\"1234.57\"\n\n> toStringWith (fixed 3) x\n\"1234.568\"\n\n> toStringWith (exponential 2) x\n\"1.23e+3\"\n```\n\nThe main method of this module is the `toStringWith` function that accepts\na `Format` argument which can be constructed through one of the smart\nconstructors `precision`, `fixed` and `exponential`. Internally, the\nnumber will be formatted with JavaScripts `toPrecision`, `toFixed` or\n`toExponential`.\n","declarations":[{"children":[],"comments":"The `Format` data type specifies how a number will be formatted.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[41,20],"name":".spago/packages/numbers-9.0.1/src/Data/Number/Format.purs","start":[38,1]},"title":"Format"},{"children":[],"comments":"Create a `toPrecision`-based format from an integer. Values smaller than\n`1` and larger than `21` will be clamped.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Number","Format"],"Format"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[45,27],"name":".spago/packages/numbers-9.0.1/src/Data/Number/Format.purs","start":[45,1]},"title":"precision"},{"children":[],"comments":"Create a `toFixed`-based format from an integer. Values smaller than `0`\nand larger than `20` will be clamped.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Number","Format"],"Format"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[50,23],"name":".spago/packages/numbers-9.0.1/src/Data/Number/Format.purs","start":[50,1]},"title":"fixed"},{"children":[],"comments":"Create a `toExponential`-based format from an integer. Values smaller than\n`0` and larger than `20` will be clamped.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Number","Format"],"Format"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[55,29],"name":".spago/packages/numbers-9.0.1/src/Data/Number/Format.purs","start":[55,1]},"title":"exponential"},{"children":[],"comments":"Convert a number to a string with a given format.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Number","Format"],"Format"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[59,43],"name":".spago/packages/numbers-9.0.1/src/Data/Number/Format.purs","start":[59,1]},"title":"toStringWith"},{"children":[],"comments":"Convert a number to a string via JavaScript's toString method.\n\n```purs\n> toString 12.34\n\"12.34\"\n\n> toString 1234.0\n\"1234\"\n\n> toString 1.2e-10\n\"1.2e-10\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[76,44],"name":".spago/packages/numbers-9.0.1/src/Data/Number/Format.purs","start":[76,1]},"title":"toString"}],"name":"Data.Number.Format","reExports":[]}