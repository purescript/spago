// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Control_Monad_State_Trans from "../Control.Monad.State.Trans/index.js";
import * as Control_Monad_Writer_Trans from "../Control.Monad.Writer.Trans/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Generic_Rep from "../Data.Generic.Rep/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_Int from "../Data.Int/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Show_Generic from "../Data.Show.Generic/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Test_Spec_Console from "../Test.Spec.Console/index.js";
import * as Test_Spec_Reporter_Base from "../Test.Spec.Reporter.Base/index.js";
import * as Test_Spec_Result from "../Test.Spec.Result/index.js";
import * as Test_Spec_Runner_Event from "../Test.Spec.Runner.Event/index.js";
import * as Test_Spec_Speed from "../Test.Spec.Speed/index.js";
import * as Test_Spec_Style from "../Test.Spec.Style/index.js";
import * as Test_Spec_Tree from "../Test.Spec.Tree/index.js";
var genericShowArgsArgument = /* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Data_Show.showString);
var genericShowConstructor = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(genericShowArgsArgument);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var monadWriterT = /* #__PURE__ */ Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidString)(Data_Identity.monadIdentity);
var monadStateStateT = /* #__PURE__ */ Control_Monad_State_Trans.monadStateStateT(monadWriterT);
var monadWriterStateT = /* #__PURE__ */ Control_Monad_State_Trans.monadWriterStateT(/* #__PURE__ */ Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidString)(Data_Identity.monadIdentity));
var applicativeStateT = /* #__PURE__ */ Control_Monad_State_Trans.applicativeStateT(monadWriterT);
var pure = /* #__PURE__ */ Control_Applicative.pure(applicativeStateT);
var bind = /* #__PURE__ */ Control_Bind.bind(/* #__PURE__ */ Control_Monad_State_Trans.bindStateT(monadWriterT));
var get = /* #__PURE__ */ Control_Monad_State_Class.get(monadStateStateT);
var when = /* #__PURE__ */ Control_Applicative.when(applicativeStateT);
var lookup = /* #__PURE__ */ Data_Map_Internal.lookup(/* #__PURE__ */ Data_Ord.ordArray(Test_Spec_Tree.pathItemOrd));
var defaultSummary = /* #__PURE__ */ Test_Spec_Reporter_Base.defaultSummary(monadWriterStateT);
var PrintSuite = /* #__PURE__ */ (function () {
    function PrintSuite(value0) {
        this.value0 = value0;
    };
    PrintSuite.create = function (value0) {
        return new PrintSuite(value0);
    };
    return PrintSuite;
})();
var PrintTest = /* #__PURE__ */ (function () {
    function PrintTest(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    PrintTest.create = function (value0) {
        return function (value1) {
            return new PrintTest(value0, value1);
        };
    };
    return PrintTest;
})();
var PrintPending = /* #__PURE__ */ (function () {
    function PrintPending(value0) {
        this.value0 = value0;
    };
    PrintPending.create = function (value0) {
        return new PrintPending(value0);
    };
    return PrintPending;
})();
var printActionGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new PrintSuite(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new PrintTest(x.value0.value0.value0, x.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return new PrintPending(x.value0.value0);
        };
        throw new Error("Failed pattern match at Test.Spec.Reporter.Spec (line 60, column 1 - line 60, column 60): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof PrintSuite) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof PrintTest) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)));
        };
        if (x instanceof PrintPending) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
        };
        throw new Error("Failed pattern match at Test.Spec.Reporter.Spec (line 60, column 1 - line 60, column 60): " + [ x.constructor.name ]);
    }
};
var printActionShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(printActionGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "PrintSuite";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsProduct(genericShowArgsArgument)(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Test_Spec_Result.showResult)))({
        reflectSymbol: function () {
            return "PrintTest";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "PrintPending";
        }
    }))))
};
var print = function (dictMonadState) {
    var bind1 = Control_Bind.bind((dictMonadState.Monad0()).Bind1());
    var modify = Control_Monad_State_Class.modify(dictMonadState);
    return function (dictMonadWriter) {
        var tellLn = Test_Spec_Console.tellLn(dictMonadWriter);
        return function (path) {
            var indent = function ($111) {
                return Test_Spec_Style.indent(Data_Array.length($111));
            };
            return function (v) {
                if (v instanceof PrintSuite) {
                    return tellLn(indent(path) + v.value0);
                };
                if (v instanceof PrintTest && v.value1 instanceof Test_Spec_Result.Success) {
                    var speedDetails = (function () {
                        if (v.value1.value0 instanceof Test_Spec_Speed.Fast) {
                            return "";
                        };
                        return Test_Spec_Style.styled(Test_Spec_Speed.toStyle(v.value1.value0))(" (" + (show(Data_Int.round(v.value1.value1)) + "ms)"));
                    })();
                    return tellLn(indent(path) + (Test_Spec_Style.styled(Test_Spec_Style.green)("\u2713\ufe0e ") + (Test_Spec_Style.styled(Test_Spec_Style.dim)(v.value0) + speedDetails)));
                };
                if (v instanceof PrintTest && v.value1 instanceof Test_Spec_Result.Failure) {
                    return bind1(modify(function (s) {
                        var $81 = {};
                        for (var $82 in s) {
                            if ({}.hasOwnProperty.call(s, $82)) {
                                $81[$82] = s[$82];
                            };
                        };
                        $81.numFailures = s.numFailures + 1 | 0;
                        return $81;
                    }))(function (v1) {
                        return tellLn(indent(path) + Test_Spec_Style.styled(Test_Spec_Style.red)(show(v1.numFailures) + (") " + v.value0)));
                    });
                };
                if (v instanceof PrintPending) {
                    return tellLn(indent(path) + Test_Spec_Style.styled(Test_Spec_Style.cyan)("- " + v.value0));
                };
                throw new Error("Failed pattern match at Test.Spec.Reporter.Spec (line 70, column 14 - line 83, column 65): " + [ v.constructor.name ]);
            };
        };
    };
};
var print1 = /* #__PURE__ */ print(monadStateStateT)(monadWriterStateT);
var initialState = {
    runningItems: Data_Map_Internal.empty,
    numFailures: 0
};
var specReporter = /* #__PURE__ */ Test_Spec_Reporter_Base.defaultReporter(initialState)(/* #__PURE__ */ Test_Spec_Reporter_Base.defaultUpdate({
    getRunningItems: function (v) {
        return v.runningItems;
    },
    putRunningItems: /* #__PURE__ */ Data_Function.flip(function (v) {
        return function (v1) {
            return {
                runningItems: v1,
                numFailures: v.numFailures
            };
        };
    }),
    printFinishedItem: function (path) {
        return function (v) {
            if (v instanceof Test_Spec_Reporter_Base.RunningTest && v.value1 instanceof Data_Maybe.Just) {
                return print1(path)(new PrintTest(v.value0, v.value1.value0));
            };
            if (v instanceof Test_Spec_Reporter_Base.RunningPending) {
                return print1(path)(new PrintPending(v.value0));
            };
            if (v instanceof Test_Spec_Reporter_Base.RunningSuite && v.value1) {
                return print1(path)(new PrintSuite(v.value0));
            };
            return pure(Data_Unit.unit);
        };
    },
    update: function (v) {
        if (v instanceof Test_Spec_Runner_Event.Suite && v.value0 instanceof Test_Spec_Runner_Event.Sequential) {
            return print1(v.value1)(new PrintSuite(v.value2));
        };
        if (v instanceof Test_Spec_Runner_Event.TestEnd) {
            return bind(get)(function (v1) {
                return when(Data_Maybe.isNothing(lookup(v.value0)(v1.runningItems)))(print1(v.value0)(new PrintTest(v.value1, v.value2)));
            });
        };
        if (v instanceof Test_Spec_Runner_Event.Pending) {
            return bind(get)(function (v1) {
                return when(Data_Map_Internal.isEmpty(v1.runningItems))(print1(v.value0)(new PrintPending(v.value1)));
            });
        };
        if (v instanceof Test_Spec_Runner_Event.End) {
            return defaultSummary(v.value0);
        };
        return pure(Data_Unit.unit);
    }
}));
export {
    specReporter
};
//# sourceMappingURL=index.js.map
