{"comments":"Bindings to the global `process` object in Node.js. See also [the Node API documentation](https://nodejs.org/api/process.html)\n","declarations":[{"children":[],"comments":"Register a callback to be performed when the event loop empties, and\nNode.js is about to exit. Asynchronous calls can be made in the callback,\nand if any are made, it will cause the process to continue a little longer.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[53,58],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[53,1]},"title":"onBeforeExit"},{"children":[],"comments":"Register a callback to be performed when the process is about to exit.\nAny work scheduled via asynchronous calls made here will not be performed\nin time.\n\nThe argument to the callback is the exit code which the process is about\nto exit with.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[61,61],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[61,1]},"title":"onExit"},{"children":[],"comments":"Install a handler for a particular signal.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Posix","Signal"],"Signal"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[83,49],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[83,1]},"title":"onSignal"},{"children":[],"comments":"Install a handler for uncaught exceptions. The callback will be called\nwhen the process emits the `uncaughtException` event. The handler\ncurrently does not expose the second `origin` argument from the Node 12\nversion of this event to maintain compatibility with older Node versions.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Effect","Exception"],"Error"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[67,76],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[67,1]},"title":"onUncaughtException"},{"children":[],"comments":"Install a handler for unhandled promise rejections. The callback will be\ncalled when the process emits the `unhandledRejection` event.\n\nThe first argument to the handler can be whatever type the unhandled\nPromise yielded on rejection (typically, but not necessarily, an `Error`).\n\nThe handler currently does not expose the type of the second argument,\nwhich is a `Promise`, in order to allow users of this library to choose\ntheir own PureScript `Promise` bindings.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"b","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"b","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[78,90],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[78,1]},"title":"onUnhandledRejection"},{"children":[],"comments":"Register a callback to run as soon as the current event loop runs to\ncompletion.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[88,39],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[88,1]},"title":"nextTick"},{"children":[],"comments":"Get an array containing the command line arguments.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[92,30],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[92,1]},"title":"argv"},{"children":[],"comments":"Node-specific options passed to the `node` executable.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[96,34],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[96,1]},"title":"execArgv"},{"children":[],"comments":"The absolute pathname of the `node` executable that started the\nprocess.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[101,26],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[101,1]},"title":"execPath"},{"children":[],"comments":"Change the current working directory of the process. If the current\ndirectory could not be changed, an exception will be thrown.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[106,46],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[106,1]},"title":"chdir"},{"children":[],"comments":"Get the current working directory of the process.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[109,21],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[109,1]},"title":"cwd"},{"children":[],"comments":"Get a copy of the current environment.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Foreign","Object"],"Object"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[113,36],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[113,1]},"title":"getEnv"},{"children":[],"comments":"Lookup a particular environment variable.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[117,45],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[117,1]},"title":"lookupEnv"},{"children":[],"comments":"Set an environment variable.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[121,57],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[121,1]},"title":"setEnv"},{"children":[],"comments":"Delete an environment variable.\nUse case: to hide secret environment variable from child processes.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[125,49],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[125,1]},"title":"unsetEnv"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Posix"],"Pid"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[127,11],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[127,1]},"title":"pid"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","Platform"],"Platform"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[130,27],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[130,1]},"title":"platform"},{"children":[],"comments":"Cause the process to exit with the supplied integer code. An exit code\nof 0 is normally considered successful, and anything else is considered a\nfailure.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Effect"],"Effect"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[139,49],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[139,1]},"title":"exit"},{"children":[],"comments":"The standard input stream. Note that this stream will never emit an `end`\nevent, so any handlers attached via `onEnd` will never be called.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Readable"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[143,21],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[143,1]},"title":"stdin"},{"children":[],"comments":"The standard output stream. Note that this stream cannot be closed; calling\n`end` will result in an exception being thrown.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[148,22],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[148,1]},"title":"stdout"},{"children":[],"comments":"The standard error stream. Note that this stream cannot be closed; calling\n`end` will result in an exception being thrown.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Node","Stream"],"Writable"],"tag":"TypeConstructor"},{"annotation":[],"tag":"REmpty"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[153,22],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[153,1]},"title":"stderr"},{"children":[],"comments":"Check whether the standard input stream appears to be attached to a TTY.\nIt is a good idea to check this before processing the input data from stdin.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[158,22],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[158,1]},"title":"stdinIsTTY"},{"children":[],"comments":"Check whether the standard output stream appears to be attached to a TTY.\nIt is a good idea to check this before printing ANSI codes to stdout\n(e.g. for coloured text in the terminal).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[164,23],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[164,1]},"title":"stdoutIsTTY"},{"children":[],"comments":"Check whether the standard error stream appears to be attached to a TTY.\nIt is a good idea to check this before printing ANSI codes to stderr\n(e.g. for coloured text in the terminal).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[170,23],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[170,1]},"title":"stderrIsTTY"},{"children":[],"comments":"Get the Node.js version.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[174,18],"name":".spago/packages/node-process-10.0.0/src/Node/Process.purs","start":[174,1]},"title":"version"}],"name":"Node.Process","reExports":[]}