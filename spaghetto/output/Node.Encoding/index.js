// Generated by purs version 0.15.10
import * as $foreign from "./foreign.js";
var ASCII = /* #__PURE__ */ (function () {
    function ASCII() {

    };
    ASCII.value = new ASCII();
    return ASCII;
})();
var UTF8 = /* #__PURE__ */ (function () {
    function UTF8() {

    };
    UTF8.value = new UTF8();
    return UTF8;
})();
var UTF16LE = /* #__PURE__ */ (function () {
    function UTF16LE() {

    };
    UTF16LE.value = new UTF16LE();
    return UTF16LE;
})();
var UCS2 = /* #__PURE__ */ (function () {
    function UCS2() {

    };
    UCS2.value = new UCS2();
    return UCS2;
})();
var Base64 = /* #__PURE__ */ (function () {
    function Base64() {

    };
    Base64.value = new Base64();
    return Base64;
})();
var Latin1 = /* #__PURE__ */ (function () {
    function Latin1() {

    };
    Latin1.value = new Latin1();
    return Latin1;
})();
var Binary = /* #__PURE__ */ (function () {
    function Binary() {

    };
    Binary.value = new Binary();
    return Binary;
})();
var Hex = /* #__PURE__ */ (function () {
    function Hex() {

    };
    Hex.value = new Hex();
    return Hex;
})();
var showEncoding = {
    show: function (v) {
        if (v instanceof ASCII) {
            return "ASCII";
        };
        if (v instanceof UTF8) {
            return "UTF8";
        };
        if (v instanceof UTF16LE) {
            return "UTF16LE";
        };
        if (v instanceof UCS2) {
            return "UCS2";
        };
        if (v instanceof Base64) {
            return "Base64";
        };
        if (v instanceof Latin1) {
            return "Latin1";
        };
        if (v instanceof Binary) {
            return "Binary";
        };
        if (v instanceof Hex) {
            return "Hex";
        };
        throw new Error("Failed pattern match at Node.Encoding (line 19, column 1 - line 27, column 23): " + [ v.constructor.name ]);
    }
};
var encodingToNode = function (v) {
    if (v instanceof ASCII) {
        return "ascii";
    };
    if (v instanceof UTF8) {
        return "utf8";
    };
    if (v instanceof UTF16LE) {
        return "utf16le";
    };
    if (v instanceof UCS2) {
        return "ucs2";
    };
    if (v instanceof Base64) {
        return "base64";
    };
    if (v instanceof Latin1) {
        return "latin1";
    };
    if (v instanceof Binary) {
        return "binary";
    };
    if (v instanceof Hex) {
        return "hex";
    };
    throw new Error("Failed pattern match at Node.Encoding (line 31, column 1 - line 31, column 37): " + [ v.constructor.name ]);
};
var byteLength = function (str) {
    return function (enc) {
        return $foreign.byteLengthImpl(str)(encodingToNode(enc));
    };
};
export {
    ASCII,
    UTF8,
    UTF16LE,
    UCS2,
    Base64,
    Latin1,
    Binary,
    Hex,
    encodingToNode,
    byteLength,
    showEncoding
};
//# sourceMappingURL=index.js.map
