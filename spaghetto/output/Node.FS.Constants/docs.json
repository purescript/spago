{"comments":null,"declarations":[{"children":[],"comments":"the mode parameter passed to `access` and `accessSync`.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[8,39],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[8,1]},"title":"AccessMode"},{"children":[],"comments":"the file is visible to the calling process. \nThis is useful for determining if a file exists, but says nothing about rwx permissions. Default if no mode is specified.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"AccessMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[12,34],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[12,1]},"title":"f_OK"},{"children":[],"comments":"the file can be read by the calling process.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"AccessMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[15,34],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[15,1]},"title":"r_OK"},{"children":[],"comments":"the file can be written by the calling process.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"AccessMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[18,34],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[18,1]},"title":"w_OK"},{"children":[],"comments":"the file can be executed by the calling process. This has no effect on Windows (will behave like fs.constants.F_OK).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"AccessMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[21,34],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[21,1]},"title":"x_OK"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"AccessMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[23,39],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[23,1]},"title":"defaultAccessMode"},{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semigroup"],"Semigroup"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[42,41],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[41,1]},"title":"<anonymous>"}],"comments":"A constant used in `copyFile`.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[26,37],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[26,1]},"title":"CopyMode"},{"children":[],"comments":"If present, the copy operation will fail with an error if the destination path already exists.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[29,41],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[29,1]},"title":"copyFile_EXCL"},{"children":[],"comments":"If present, the copy operation will attempt to create a copy-on-write reflink. If the underlying platform does not support copy-on-write, then a fallback copy mechanism is used.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[32,44],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[32,1]},"title":"copyFile_FICLONE"},{"children":[],"comments":" \tIf present, the copy operation will attempt to create a copy-on-write reflink. If the underlying platform does not support copy-on-write, then the operation will fail with an error.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[35,50],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[35,1]},"title":"copyFile_FICLONE_FORCE"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[37,44],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[37,1]},"title":"defaultCopyMode"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Function","Uncurried"],"Fn2"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Node","FS","Constants"],"CopyMode"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[39,64],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[39,1]},"title":"appendCopyMode"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[45,6],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[45,3]},"title":"R"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[46,11],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[46,3]},"title":"R_PLUS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[47,7],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[47,3]},"title":"RS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[48,12],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[48,3]},"title":"RS_PLUS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[49,6],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[49,3]},"title":"W"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[50,7],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[50,3]},"title":"WX"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[51,11],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[51,3]},"title":"W_PLUS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[52,12],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[52,3]},"title":"WX_PLUS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[53,6],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[53,3]},"title":"A"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[54,7],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[54,3]},"title":"AX"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[55,11],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[55,3]},"title":"A_PLUS"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[56,12],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[56,3]},"title":"AX_PLUS"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Constants"],"FileFlags"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[70,27],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[58,1]},"title":"showFileFlags"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Constants"],"FileFlags"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[73,28],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[72,1]},"title":"eqFileFlags"}],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[56,12],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[44,1]},"title":"FileFlags"},{"children":[],"comments":"Convert a `FileFlags` to a `String` in the format expected by the Node.js\nfilesystem API.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Node","FS","Constants"],"FileFlags"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[77,39],"name":".spago/packages/node-fs-8.2.0/src/Node/FS/Constants.purs","start":[77,1]},"title":"fileFlagsToNode"}],"name":"Node.FS.Constants","reExports":[]}