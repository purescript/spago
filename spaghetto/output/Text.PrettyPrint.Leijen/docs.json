{"comments":"This is port of https://github.com/ekmett/ansi-wl-pprint to ps without any ansi stuff as it's\nused by optparser, later we shuold use [prettyprinter](https://hackage.haskell.org/package/prettyprinter) once\n[this](https://github.com/pcapriotti/optparse-applicative/issues/273) is fixed.\nAlso see [this](https://github.com/ekmett/ansi-wl-pprint/issues/18)\n","declarations":[{"children":[],"comments":"The document @(list xs)@ comma separates the documents @xs@ and\nencloses them in square brackets. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[31,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[31,1]},"title":"list"},{"children":[],"comments":"The document @(tupled xs)@ comma separates the documents @xs@ and\nencloses them in parenthesis. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All comma separators are put in front of the elements.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[38,27],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[38,1]},"title":"tupled"},{"children":[],"comments":"The document @(semiBraces xs)@ separates the documents @xs@ with\nsemicolons and encloses them in braces. The documents are rendered\nhorizontally if that fits the page. Otherwise they are aligned\nvertically. All semicolons are put in front of the elements.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[45,31],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[45,1]},"title":"semiBraces"},{"children":[],"comments":"The document @(encloseSep l r sep xs)@ concatenates the documents\n@xs@ separated by @sep@ and encloses the resulting document by @l@\nand @r@. The documents are rendered horizontally if that fits the\npage. Otherwise they are aligned vertically. All separators are put\nin front of the elements. For example, the combinator 'list' can be\ndefined with @encloseSep@:\n\n> list xs = encloseSep lbracket rbracket comma xs\n> test    = text \"list\" <+> (list (map int [10,200,3000]))\n\nWhich is layed out with a page width of 20 as:\n\n@\nlist [10,200,3000]\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\nlist [10\n     ,200\n     ,3000]\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[71,52],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[71,1]},"title":"encloseSep"},{"children":[],"comments":"@(punctuate p xs)@ concatenates all documents in @xs@ with\ndocument @p@ except for the last document.\n\n> someText = map text [\"words\",\"in\",\"a\",\"tuple\"]\n> test     = parens (align (cat (punctuate comma someText)))\n\nThis is layed out on a page width of 20 as:\n\n@\n(words,in,a,tuple)\n@\n\nBut when the page width is 15, it is layed out as:\n\n@\n(words,\n in,\n a,\n tuple)\n@\n\n(If you want put the commas in front of their elements instead of\nat the end, you should use 'tupled' or, in general, 'encloseSep'.)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[104,43],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[104,1]},"title":"punctuate"},{"children":[],"comments":"The document @(sep xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<+\\>)@, if it fits the page, or vertically with\n@(\\<$\\>)@.\n\n> sep xs  = group (vsep xs)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[118,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[118,1]},"title":"sep"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[121,62],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[121,1]},"title":"foldr1"},{"children":[],"comments":"The document @(fillSep xs)@ concatenates documents @xs@\nhorizontally with @(\\<+\\>)@ as long as its fits the page, than\ninserts a @line@ and continues doing that for all documents in\n@xs@.\n\n> fillSep xs  = foldr (</>) empty xs\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[131,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[131,1]},"title":"fillSep"},{"children":[],"comments":"The document @(hsep xs)@ concatenates all documents @xs@\nhorizontally with @(\\<+\\>)@.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[136,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[136,1]},"title":"hsep"},{"children":[],"comments":"The document @(vsep xs)@ concatenates all documents @xs@\nvertically with @(\\<$\\>)@. If a 'group' undoes the line breaks\ninserted by @vsep@, all documents are separated with a space.\n\n> someText = map text (words (\"text to lay out\"))\n>\n> test     = text \"some\" <+> vsep someText\n\nThis is layed out as:\n\n@\nsome text\nto\nlay\nout\n@\n\nThe 'align' combinator can be used to align the documents under\ntheir first element\n\n> test     = text \"some\" <+> align (vsep someText)\n\nWhich is printed as:\n\n@\nsome text\n     to\n     lay\n     out\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[169,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[169,1]},"title":"vsep"},{"children":[],"comments":"The document @(cat xs)@ concatenates all documents @xs@ either\nhorizontally with @(\\<\\>)@, if it fits the page, or vertically with\n@(\\<$$\\>)@.\n\n> cat xs  = group (vcat xs)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[177,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[177,1]},"title":"cat"},{"children":[],"comments":"The document @(fillCat xs)@ concatenates documents @xs@\nhorizontally with @(\\<\\>)@ as long as its fits the page, than inserts\na @linebreak@ and continues doing that for all documents in @xs@.\n\n> fillCat xs  = foldr1 (<//>) empty\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[185,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[185,1]},"title":"fillCat"},{"children":[],"comments":"The document @(hcat xs)@ concatenates all documents @xs@\nhorizontally with @(\\<\\>)@.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[190,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[190,1]},"title":"hcat"},{"children":[],"comments":"The document @(vcat xs)@ concatenates all documents @xs@\nvertically with @(\\<$$\\>)@. If a 'group' undoes the line breaks\ninserted by @vcat@, all documents are directly concatenated.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[196,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[196,1]},"title":"vcat"},{"children":[],"comments":"The document @(x \\<+\\> y)@ concatenates document @x@ and @y@ with a\n@space@ in between.  (infixr 6)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[201,37],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[201,1]},"title":"appendWithSpace"},{"children":[],"comments":null,"info":{"alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSpace"}}}],"declType":"alias","fixity":{"associativity":"infixr","precedence":6}},"kind":null,"sourceSpan":{"end":[203,32],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[203,1]},"title":"(<+>)"},{"children":[],"comments":"The document @(x \\<\\/\\> y)@ concatenates document @x@ and @y@ with a\n'softline' in between. This effectively puts @x@ and @y@ either\nnext to each other (with a @space@ in between) or underneath each\nother. (infixr 5)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[209,40],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[209,1]},"title":"appendWithSoftline"},{"children":[],"comments":null,"info":{"alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftline"}}}],"declType":"alias","fixity":{"associativity":"infixr","precedence":5}},"kind":null,"sourceSpan":{"end":[211,35],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[211,1]},"title":"(</>)"},{"children":[],"comments":"The document @(x \\<\\/\\/\\> y)@ concatenates document @x@ and @y@ with\na 'softbreak' in between. This effectively puts @x@ and @y@ either\nright next to each other or underneath each other. (infixr 5)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[216,41],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[216,1]},"title":"appendWithSoftbreak"},{"children":[],"comments":null,"info":{"alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithSoftbreak"}}}],"declType":"alias","fixity":{"associativity":"infixr","precedence":5}},"kind":null,"sourceSpan":{"end":[218,37],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[218,1]},"title":"(<//>)"},{"children":[],"comments":"The document @(x \\<$\\> y)@ concatenates document @x@ and @y@ with a\n'line' in between. (infixr 5)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[222,36],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[222,1]},"title":"appendWithLine"},{"children":[],"comments":null,"info":{"alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLine"}}}],"declType":"alias","fixity":{"associativity":"infixr","precedence":5}},"kind":null,"sourceSpan":{"end":[224,31],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[224,1]},"title":"(<$>)"},{"children":[],"comments":"The document @(x \\<$$\\> y)@ concatenates document @x@ and @y@ with\na @linebreak@ in between. (infixr 5)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[228,41],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[228,1]},"title":"appendWithLinebreak"},{"children":[],"comments":null,"info":{"alias":[["Text","PrettyPrint","Leijen"],{"Right":{"Left":{"Ident":"appendWithLinebreak"}}}],"declType":"alias","fixity":{"associativity":"infixr","precedence":5}},"kind":null,"sourceSpan":{"end":[230,37],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[230,1]},"title":"(<$$>)"},{"children":[],"comments":"The document @softline@ behaves like 'space' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softline = group line\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[236,16],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[236,1]},"title":"softline"},{"children":[],"comments":"The document @softbreak@ behaves like 'empty' if the resulting\noutput fits the page, otherwise it behaves like 'line'.\n\n> softbreak  = group linebreak\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[243,17],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[243,1]},"title":"softbreak"},{"children":[],"comments":"Document @(squotes x)@ encloses document @x@ with single quotes\n\\\"'\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[248,22],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[248,1]},"title":"squotes"},{"children":[],"comments":"Document @(dquotes x)@ encloses document @x@ with double quotes\n'\\\"'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[253,22],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[253,1]},"title":"dquotes"},{"children":[],"comments":"Document @(braces x)@ encloses document @x@ in braces, \\\"{\\\" and\n\\\"}\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[258,21],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[258,1]},"title":"braces"},{"children":[],"comments":"Document @(parens x)@ encloses document @x@ in parenthesis, \\\"(\\\"\nand \\\")\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[263,21],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[263,1]},"title":"parens"},{"children":[],"comments":"Document @(angles x)@ encloses document @x@ in angles, \\\"\\<\\\" and\n\\\"\\>\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[268,21],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[268,1]},"title":"angles"},{"children":[],"comments":"Document @(brackets x)@ encloses document @x@ in square brackets,\n\\\"[\\\" and \\\"]\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[273,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[273,1]},"title":"brackets"},{"children":[],"comments":"The document @(enclose l r x)@ encloses document @x@ between\ndocuments @l@ and @r@ using @(\\<\\>)@.\n\n> enclose l r x   = l <> x <> r\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[280,36],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[280,1]},"title":"enclose"},{"children":[],"comments":"The document @lparen@ contains a left parenthesis, \\\"(\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[284,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[284,1]},"title":"lparen"},{"children":[],"comments":"The document @rparen@ contains a right parenthesis, \\\")\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[287,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[287,1]},"title":"rparen"},{"children":[],"comments":"The document @langle@ contains a left angle, \\\"\\<\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[290,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[290,1]},"title":"langle"},{"children":[],"comments":"The document @rangle@ contains a right angle, \\\">\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[293,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[293,1]},"title":"rangle"},{"children":[],"comments":"The document @lbrace@ contains a left brace, \\\"{\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[296,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[296,1]},"title":"lbrace"},{"children":[],"comments":"The document @rbrace@ contains a right brace, \\\"}\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[299,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[299,1]},"title":"rbrace"},{"children":[],"comments":"The document @lbracket@ contains a left square bracket, \\\"[\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[302,16],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[302,1]},"title":"lbracket"},{"children":[],"comments":"The document @rbracket@ contains a right square bracket, \\\"]\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[305,16],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[305,1]},"title":"rbracket"},{"children":[],"comments":"The document @squote@ contains a single quote, \\\"'\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[309,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[309,1]},"title":"squote"},{"children":[],"comments":"The document @dquote@ contains a double quote, '\\\"'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[312,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[312,1]},"title":"dquote"},{"children":[],"comments":"The document @semi@ contains a semicolon, \\\";\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[315,12],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[315,1]},"title":"semi"},{"children":[],"comments":"The document @colon@ contains a colon, \\\":\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[318,13],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[318,1]},"title":"colon"},{"children":[],"comments":"The document @comma@ contains a comma, \\\",\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[321,13],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[321,1]},"title":"comma"},{"children":[],"comments":"The document @space@ contains a single space, \\\" \\\".\n\n> x <+> y   = x <> space <> y\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[326,13],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[326,1]},"title":"space"},{"children":[],"comments":"The document @dot@ contains a single dot, \\\".\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[329,11],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[329,1]},"title":"dot"},{"children":[],"comments":"The document @backslash@ contains a back slash, \\\"\\\\\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[332,17],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[332,1]},"title":"backslash"},{"children":[],"comments":"The document @equals@ contains an equal sign, \\\"=\\\".\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[335,14],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[335,1]},"title":"equals"},{"children":[],"comments":"The document @(string s)@ concatenates all characters in @s@\nusing @line@ for newline characters and @char@ for all other\ncharacters. It is used instead of 'text' whenever the text contains\nnewline characters.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[348,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[348,1]},"title":"string"},{"children":[],"comments":"The document @(bool b)@ shows the literal bool @b@ using 'text'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[352,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[352,1]},"title":"bool"},{"children":[],"comments":"The document @(int i)@ shows the literal integer @i@ using 'text'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[356,18],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[356,1]},"title":"int"},{"children":[],"comments":"The document @(number f)@ shows the literal number @f@ using 'text'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[360,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[360,1]},"title":"number"},{"children":[],"comments":"The document @(fillBreak i x)@ first renders document @x@. It\nthan appends @space@s until the width is equal to @i@. If the\nwidth of @x@ is already larger than @i@, the nesting level is\nincreased by @i@ and a @line@ is appended. When we redefine @ptype@\nin the previous example to use @fillBreak@, we get a useful\nvariation of the previous output:\n\n> ptype (name,tp)\n>        = fillBreak 6 (text name) <+> text \"::\" <+> text tp\n\nThe output will now be:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak\n           :: Doc\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[439,31],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[439,1]},"title":"fillBreak"},{"children":[],"comments":"The document @(fill i x)@ renders document @x@. It than appends\n@space@s until the width is equal to @i@. If the width of @x@ is\nalready larger, nothing is appended. This combinator is quite\nuseful in practice to output a list of bindings. The following\nexample demonstrates this.\n\n> types  = [(\"empty\",\"Doc\")\n>          ,(\"nest\",\"Int -> Doc -> Doc\")\n>          ,(\"linebreak\",\"Doc\")]\n>\n> ptype (name,tp)\n>        = fill 6 (text name) <+> text \"::\" <+> text tp\n>\n> test   = text \"let\" <+> align (vcat (map ptype types))\n\nWhich is layed out as:\n\n@\nlet empty  :: Doc\n    nest   :: Int -> Doc -> Doc\n    linebreak :: Doc\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[466,26],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[466,1]},"title":"fill"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[471,36],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[471,1]},"title":"width"},{"children":[],"comments":"The document @(indent i x)@ indents document @x@ with @i@ spaces.\n\n> test  = indent 4 (fillSep (map text\n>         (words \"the indent combinator indents these words !\")))\n\nWhich lays out with a page width of 20 as:\n\n@\n    the indent\n    combinator\n    indents these\n    words !\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[491,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[491,1]},"title":"indent"},{"children":[],"comments":"The hang combinator implements hanging indentation. The document\n@(hang i x)@ renders document @x@ with a nesting level set to the\ncurrent column plus @i@. The following example uses hanging\nindentation for some text:\n\n> test  = hang 4 (fillSep (map text\n>         (words \"the hang combinator indents these words !\")))\n\nWhich lays out on a page with a width of 20 characters as:\n\n@\nthe hang combinator\n    indents these\n    words !\n@\n\nThe @hang@ combinator is implemented as:\n\n> hang i x  = align (nest i x)\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[513,26],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[513,1]},"title":"hang"},{"children":[],"comments":"The document @(align x)@ renders document @x@ with the nesting\nlevel set to the current column. It is used for example to\nimplement 'hang'.\n\nAs an example, we will put a document right above another one,\nregardless of the current nesting level:\n\n> x $$ y  = align (x <$> y)\n\n> test    = text \"hi\" <+> (text \"nice\" $$ text \"world\")\n\nwhich will be layed out as:\n\n@\nhi nice\n   world\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[533,20],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[533,1]},"title":"align"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[561,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[561,17]},"title":"Fail"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[562,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[562,17]},"title":"Empty"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Char"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[563,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[563,17]},"title":"Char"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[564,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[564,17]},"title":"Text"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[565,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[565,17]},"title":"Line"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[566,26],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[566,17]},"title":"FlatAlt"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[568,22],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[568,17]},"title":"Cat"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[569,23],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[569,17]},"title":"Nest"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[570,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[570,17]},"title":"Union"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[571,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[571,17]},"title":"Column"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[572,26],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[572,17]},"title":"Columns"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[573,26],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[573,17]},"title":"Nesting"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semigroup"],"Semigroup"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[613,18],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[612,1]},"title":"docSemigroup"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Monoid"],"Monoid"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[615,17],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[614,1]},"title":"docMonoid"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[901,42],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[900,1]},"title":"docShow"}],"comments":"The abstract data type @Doc@ represents pretty documents.\n\nMore specifically, a value of type @Doc@ represents a non-empty set of\npossible renderings of a document.  The rendering functions select one of\nthese possibilities.\n\n@Doc@ is an instance of the 'Show' class. @(show doc)@ pretty\nprints document @doc@ with a page width of 80 characters and a\nribbon width of 32 characters.\n\n> show (text \"hello\" <$> text \"world\")\n\nWhich would return the string \\\"hello\\\\nworld\\\", i.e.\n\n@\nhello\nworld\n@\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[573,39],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[561,1]},"title":"Doc"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[587,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[587,17]},"title":"SFail"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[588,25],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[588,17]},"title":"SEmpty"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Char"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[589,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[589,17]},"title":"SChar"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[590,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[590,17]},"title":"SText"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[591,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[591,17]},"title":"SLine"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[607,44],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[607,1]},"title":"simpleDocEq"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[608,46],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[608,1]},"title":"simpleDocOrd"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Generic","Rep"],"Generic"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":null,"tag":"TypeWildcard"}],"tag":"TypeApp"}},"sourceSpan":{"end":[609,56],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[609,1]},"title":"genericSimpleDoc"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Show"],"Show"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[610,70],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[610,1]},"title":"showSimpleDoc"}],"comments":"The data type @SimpleDoc@ represents rendered documents and is\nused by the display functions.\n\nWhereas values of the data type 'Doc' represent non-empty sets of possible\nrenderings of a document, values of the data type @SimpleDoc@ represent\nsingle renderings of a document.\n\nThe @Int@ in @SText@ contains the length of the string. The @Int@\nin @SLine@ contains the indentation for that line. The library\nprovides two default display functions 'displayS' and\n'displayIO'. You can provide your own display function by writing a\nfunction from a @SimpleDoc@ to your own output format.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[591,38],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[587,1]},"title":"SimpleDoc"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[593,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[593,20]},"title":"SFail'"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[594,29],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[594,20]},"title":"SEmpty'"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Char"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Lazy"],"Lazy"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[595,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[595,20]},"title":"SChar'"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Lazy"],"Lazy"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[596,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[596,20]},"title":"SText'"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Lazy"],"Lazy"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[597,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[597,20]},"title":"SLine'"}],"comments":null,"info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[597,53],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[593,1]},"title":"LazySimpleDoc"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[599,45],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[599,1]},"title":"forceSimpleDoc"},{"children":[],"comments":"The empty document is, indeed, empty. Although @empty@ has no\ncontent, it does have a \\'height\\' of 1 and behaves exactly like\n@(text \\\"\\\")@ (and is therefore not a unit of @\\<$\\>@).\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[620,13],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[620,1]},"title":"empty"},{"children":[],"comments":"The document @(char c)@ contains the literal character @c@. The\ncharacter shouldn't be a newline (@'\\n'@), the function 'line'\nshould be used for line breaks.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Char"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[626,20],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[626,1]},"title":"char"},{"children":[],"comments":"The document @(text s)@ contains the literal string @s@. The\nstring shouldn't contain any newline (@'\\n'@) characters. If the\nstring contains newline characters, the function 'string' should be\nused.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[634,22],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[634,1]},"title":"text"},{"children":[],"comments":"The @line@ document advances to the next line and indents to the\ncurrent nesting level. Document @line@ behaves like @(text \\\" \\\")@\nif the line break is undone by 'group'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[641,12],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[641,1]},"title":"line"},{"children":[],"comments":"The @linebreak@ document advances to the next line and indents to\nthe current nesting level. Document @linebreak@ behaves like\n'empty' if the line break is undone by 'group'.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[647,17],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[647,1]},"title":"linebreak"},{"children":[],"comments":"A linebreak that will never be flattened; it is guaranteed to render\nas a newline.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[652,16],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[652,1]},"title":"hardline"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[655,28],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[655,1]},"title":"beside"},{"children":[],"comments":"The document @(nest i x)@ renders document @x@ with the current\nindentation level increased by i (See also 'hang', 'align' and\n'indent').\n\n> nest 2 (text \"hello\" <$> text \"world\") <$> text \"!\"\n\noutputs as:\n\n@\nhello\n  world\n!\n@\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[671,26],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[671,1]},"title":"nest"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[674,30],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[674,1]},"title":"column"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[677,31],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[677,1]},"title":"nesting"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[680,37],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[680,1]},"title":"columns"},{"children":[],"comments":"The @group@ combinator is used to specify alternative\nlayouts. The document @(group x)@ undoes all line breaks in\ndocument @x@. The resulting line is added to the current line if\nthat fits the page. Otherwise, the document @x@ is rendered without\nany changes.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[688,20],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[688,1]},"title":"group"},{"children":[],"comments":"A document that is normally rendered as the first argument, but\nwhen flattened, is rendered as the second document.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[693,29],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[693,1]},"title":"flatAlt"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[696,22],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[696,1]},"title":"flatten"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[717,18],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[717,13]},"title":"Nil"},{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Docs"],"tag":"TypeConstructor"}],"declType":"dataConstructor"},"sourceSpan":{"end":[718,19],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[718,13]},"title":"Cons"}],"comments":"list of indentation/document pairs; saves an indirection over [(Int,Doc)]\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[718,32],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[717,1]},"title":"Docs"},{"children":[],"comments":"This is the default pretty printer which is used by 'show',\n'putDoc' and 'hPutDoc'. @(renderPretty ribbonfrac width x)@ renders\ndocument @x@ with a page width of @width@ and a ribbon width of\n@(ribbonfrac * width)@ characters. The ribbon width is the maximal\namount of non-indentation characters on a line. The parameter\n@ribbonfrac@ should be between @0.0@ and @1.0@. If it is lower or\nhigher, the ribbon width will be 0 or @width@ respectively.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[727,50],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[727,1]},"title":"renderPretty"},{"children":[],"comments":"A slightly smarter rendering algorithm with more lookahead. It provides\nprovide earlier breaking on deeply nested structures\nFor example, consider this python-ish pseudocode:\n@fun(fun(fun(fun(fun([abcdefg, abcdefg])))))@\nIf we put a softbreak (+ nesting 2) after each open parenthesis, and align\nthe elements of the list to match the opening brackets, this will render with\n@renderPretty@ and a page width of 20 as:\n@\nfun(fun(fun(fun(fun([\n                    | abcdef,\n                    | abcdef,\n                    ]\n  )))))             |\n@\nWhere the 20c. boundary has been marked with |.\nBecause @renderPretty@ only uses one-line lookahead, it sees that the first\nline fits, and is stuck putting the second and third lines after the 20-c\nmark. In contrast, @renderSmart@ will continue to check that the potential\ndocument up to the end of the indentation level. Thus, it will format the\ndocument as:\n\n@\nfun(                |\n  fun(              |\n    fun(            |\n      fun(          |\n        fun([       |\n              abcdef,\n              abcdef,\n            ]       |\n  )))))             |\n@\nWhich fits within the 20c. boundary.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[763,49],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[763,1]},"title":"renderSmart"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[767,48],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[766,1]},"title":"renderFits"},{"children":[],"comments":"@fits1@ does 1 line lookahead.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[819,55],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[819,1]},"title":"fits1"},{"children":[],"comments":"@fitsR@ has a little more lookahead: assuming that nesting roughly\ncorresponds to syntactic depth, @fitsR@ checks that not only the current line\nfits, but the entire syntactic structure being formatted at this level of\nindentation fits. If we were to remove the second case for @SLine@, we would\ncheck that not only the current structure fits, but also the rest of the\ndocument, which would be slightly more intelligent but would have exponential\nruntime (and is prohibitively expensive in practice).\np = pagewidth\nm = minimum nesting level to fit in\nw = the width in which to fit the first line\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"LazySimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[837,55],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[837,1]},"title":"fitsR"},{"children":[],"comments":"@(renderCompact x)@ renders document @x@ without adding any\nindentation. Since no \\'pretty\\' printing is involved, this\nrenderer is very fast. The resulting output contains fewer\ncharacters than a pretty printed version and can be used for output\nthat is read by other programs.\n\nThis rendering function does not add any colorisation information.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[858,34],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[858,1]},"title":"renderCompact"},{"children":[],"comments":"@(displayS simpleDoc)@ takes the output @simpleDoc@ from a\nrendering function and transforms it to a 'ShowS' type (for use in\nthe 'Show' class).\n\n> showWidth :: Int -> Doc -> String\n> showWidth w x   = displayS (renderPretty 0.4 w x) \"\"\n\nANSI color information will be discarded by this function unless\nyou are running on a Unix-like operating system. This is due to\na technical limitation in Windows ANSI support.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"SimpleDoc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[893,32],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[893,1]},"title":"displayS"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[908,24],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[908,1]},"title":"spaces"},{"children":[],"comments":null,"info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[912,29],"name":".spago/packages/optparse-5.0.0/src/Text/PrettyPrint/Leijen.purs","start":[912,1]},"title":"indentation"}],"name":"Text.PrettyPrint.Leijen","reExports":[]}