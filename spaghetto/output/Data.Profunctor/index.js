// Generated by purs version 0.15.10
import * as Control_Category from "../Control.Category/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
var identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);
var wrap = /* #__PURE__ */ Data_Newtype.wrap();
var unwrap = /* #__PURE__ */ Data_Newtype.unwrap();
var profunctorFn = {
    dimap: function (a2b) {
        return function (c2d) {
            return function (b2c) {
                return function ($18) {
                    return c2d(b2c(a2b($18)));
                };
            };
        };
    }
};
var dimap = function (dict) {
    return dict.dimap;
};
var lcmap = function (dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function (a2b) {
        return dimap1(a2b)(identity);
    };
};
var rmap = function (dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function (b2c) {
        return dimap1(identity)(b2c);
    };
};
var unwrapIso = function (dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function () {
        return dimap1(wrap)(unwrap);
    };
};
var wrapIso = function (dictProfunctor) {
    var dimap1 = dimap(dictProfunctor);
    return function () {
        return function (v) {
            return dimap1(unwrap)(wrap);
        };
    };
};
var arr = function (dictCategory) {
    var identity1 = Control_Category.identity(dictCategory);
    return function (dictProfunctor) {
        var rmap1 = rmap(dictProfunctor);
        return function (f) {
            return rmap1(f)(identity1);
        };
    };
};
export {
    dimap,
    lcmap,
    rmap,
    arr,
    unwrapIso,
    wrapIso,
    profunctorFn
};
//# sourceMappingURL=index.js.map
