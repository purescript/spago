{"comments":"Implementation of the `License` data type from the registry spec.\nhttps://github.com/purescript/registry-dev/blob/master/SPEC.md#license\n\nWARNING:\nThis module relies on the 'spdx-expression-parse' NPM library, which you\nmust install if you are using parsing code from this module. Please see the\npackage.json file for exact versions.\n","declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[30,35],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[30,1]},"title":"<anonymous>"}],"comments":"An SPDX license identifier such as 'MIT' or 'Apache-2.0'.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[28,33],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[28,1]},"title":"License"},{"children":[{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[49,27],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[49,22]},"title":"And"},{"comments":null,"info":{"arguments":[],"declType":"dataConstructor"},"sourceSpan":{"end":[49,32],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[49,28]},"title":"Or"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","License"],"SPDXConjunction"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[51,35],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[51,1]},"title":"<anonymous>"}],"comments":"A valid conjunction for SPDX license identifiers. AND means that both\nlicenses must be satisfied; OR means that at least one license must be\nsatisfied.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[49,32],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[49,1]},"title":"SPDXConjunction"},{"children":[],"comments":"A codec for encoding and decoding a `License` as JSON\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Codec","Argonaut"],"JsonCodec"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[33,27],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[33,1]},"title":"codec"},{"children":[],"comments":"Join multiple license identifiers together with the given SPDX conjunction\nto create a new valid SPDX license identifier.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","License"],"SPDXConjunction"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[55,56],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[55,1]},"title":"joinWith"},{"children":[],"comments":"Parse a string as a SPDX license identifier.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Either"],"Either"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[43,41],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[43,1]},"title":"parse"},{"children":[],"comments":"Print an SPDX license identifier as a string.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[37,27],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/License.purs","start":[37,1]},"title":"print"}],"name":"Registry.License","reExports":[]}