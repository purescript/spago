// Generated by purs version 0.15.10
import * as Control_Alt from "../Control.Alt/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Apply from "../Control.Apply/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Error_Class from "../Control.Monad.Error.Class/index.js";
import * as Control_Monad_Except_Trans from "../Control.Monad.Except.Trans/index.js";
import * as Control_Monad_Free from "../Control.Monad.Free/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Control_Monad_Reader_Trans from "../Control.Monad.Reader.Trans/index.js";
import * as Control_Monad_Rec_Class from "../Control.Monad.Rec.Class/index.js";
import * as Control_Monad_Trans_Class from "../Control.Monad.Trans.Class/index.js";
import * as Data_Bifunctor from "../Data.Bifunctor/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Exists from "../Data.Exists/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Generic_Rep from "../Data.Generic.Rep/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_List from "../Data.List/index.js";
import * as Data_List_NonEmpty from "../Data.List.NonEmpty/index.js";
import * as Data_List_Types from "../Data.List.Types/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Ordering from "../Data.Ordering/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_Show_Generic from "../Data.Show.Generic/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect from "../Effect/index.js";
import * as Options_Applicative_Help_Chunk from "../Options.Applicative.Help.Chunk/index.js";
import * as Options_Applicative_Help_Types from "../Options.Applicative.Help.Types/index.js";
import * as Text_PrettyPrint_Leijen from "../Text.PrettyPrint.Leijen/index.js";
var monadExceptT = /* #__PURE__ */ Control_Monad_Except_Trans.monadExceptT(Data_Identity.monadIdentity);
var map = /* #__PURE__ */ Data_Functor.map(/* #__PURE__ */ Control_Monad_Reader_Trans.functorReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.functorExceptT(Data_Identity.functorIdentity)));
var apply = /* #__PURE__ */ Control_Apply.apply(/* #__PURE__ */ Control_Monad_Reader_Trans.applyReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.applyExceptT(Data_Identity.monadIdentity)));
var bind = /* #__PURE__ */ Control_Bind.bind(/* #__PURE__ */ Control_Monad_Reader_Trans.bindReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity)));
var un = /* #__PURE__ */ Data_Newtype.un();
var genericShowConstructor = /* #__PURE__ */ Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments);
var LeafIsSymbol = {
    reflectSymbol: function () {
        return "Leaf";
    }
};
var MultNodeIsSymbol = {
    reflectSymbol: function () {
        return "MultNode";
    }
};
var AltNodeIsSymbol = {
    reflectSymbol: function () {
        return "AltNode";
    }
};
var showRecord = /* #__PURE__ */ Data_Show.showRecord()();
var showMaybe = /* #__PURE__ */ Data_Maybe.showMaybe(Data_Show.showString);
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);
var compare = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordChar);
var compare1 = /* #__PURE__ */ Data_Ord.compare(Data_Ord.ordString);
var SuccessIsSymbol = {
    reflectSymbol: function () {
        return "Success";
    }
};
var apply1 = /* #__PURE__ */ Control_Apply.apply(Effect.applyEffect);
var map2 = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);
var append1 = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);
var over = /* #__PURE__ */ Data_Newtype.over()();
var map3 = /* #__PURE__ */ Data_Functor.map(Control_Monad_Free.freeFunctor);
var bimap = /* #__PURE__ */ Data_Bifunctor.bimap(Control_Monad_Rec_Class.bifunctorStep);
var ParserFailure = function (x) {
    return x;
};
var Internal = /* #__PURE__ */ (function () {
    function Internal() {

    };
    Internal.value = new Internal();
    return Internal;
})();
var Hidden = /* #__PURE__ */ (function () {
    function Hidden() {

    };
    Hidden.value = new Hidden();
    return Hidden;
})();
var Visible = /* #__PURE__ */ (function () {
    function Visible() {

    };
    Visible.value = new Visible();
    return Visible;
})();
var Leaf = /* #__PURE__ */ (function () {
    function Leaf(value0) {
        this.value0 = value0;
    };
    Leaf.create = function (value0) {
        return new Leaf(value0);
    };
    return Leaf;
})();
var MultNode = /* #__PURE__ */ (function () {
    function MultNode(value0) {
        this.value0 = value0;
    };
    MultNode.create = function (value0) {
        return new MultNode(value0);
    };
    return MultNode;
})();
var AltNode = /* #__PURE__ */ (function () {
    function AltNode(value0) {
        this.value0 = value0;
    };
    AltNode.create = function (value0) {
        return new AltNode(value0);
    };
    return AltNode;
})();
var OptProperties = function (x) {
    return x;
};
var OptShort = /* #__PURE__ */ (function () {
    function OptShort(value0) {
        this.value0 = value0;
    };
    OptShort.create = function (value0) {
        return new OptShort(value0);
    };
    return OptShort;
})();
var OptLong = /* #__PURE__ */ (function () {
    function OptLong(value0) {
        this.value0 = value0;
    };
    OptLong.create = function (value0) {
        return new OptLong(value0);
    };
    return OptLong;
})();
var OptHelpInfo = function (x) {
    return x;
};
var CmdStart = /* #__PURE__ */ (function () {
    function CmdStart() {

    };
    CmdStart.value = new CmdStart();
    return CmdStart;
})();
var CmdCont = /* #__PURE__ */ (function () {
    function CmdCont() {

    };
    CmdCont.value = new CmdCont();
    return CmdCont;
})();
var CompletionResult = function (x) {
    return x;
};
var Success = /* #__PURE__ */ (function () {
    function Success(value0) {
        this.value0 = value0;
    };
    Success.create = function (value0) {
        return new Success(value0);
    };
    return Success;
})();
var Failure = /* #__PURE__ */ (function () {
    function Failure(value0) {
        this.value0 = value0;
    };
    Failure.create = function (value0) {
        return new Failure(value0);
    };
    return Failure;
})();
var CompletionInvoked = /* #__PURE__ */ (function () {
    function CompletionInvoked(value0) {
        this.value0 = value0;
    };
    CompletionInvoked.create = function (value0) {
        return new CompletionInvoked(value0);
    };
    return CompletionInvoked;
})();
var Completer = function (x) {
    return x;
};
var Backtrack = /* #__PURE__ */ (function () {
    function Backtrack() {

    };
    Backtrack.value = new Backtrack();
    return Backtrack;
})();
var NoBacktrack = /* #__PURE__ */ (function () {
    function NoBacktrack() {

    };
    NoBacktrack.value = new NoBacktrack();
    return NoBacktrack;
})();
var SubparserInline = /* #__PURE__ */ (function () {
    function SubparserInline() {

    };
    SubparserInline.value = new SubparserInline();
    return SubparserInline;
})();
var ParserPrefs = function (x) {
    return x;
};
var Intersperse = /* #__PURE__ */ (function () {
    function Intersperse() {

    };
    Intersperse.value = new Intersperse();
    return Intersperse;
})();
var NoIntersperse = /* #__PURE__ */ (function () {
    function NoIntersperse() {

    };
    NoIntersperse.value = new NoIntersperse();
    return NoIntersperse;
})();
var AllPositionals = /* #__PURE__ */ (function () {
    function AllPositionals() {

    };
    AllPositionals.value = new AllPositionals();
    return AllPositionals;
})();
var ForwardOptions = /* #__PURE__ */ (function () {
    function ForwardOptions() {

    };
    ForwardOptions.value = new ForwardOptions();
    return ForwardOptions;
})();
var ParserInfo = function (x) {
    return x;
};
var NilP = /* #__PURE__ */ (function () {
    function NilP(value0) {
        this.value0 = value0;
    };
    NilP.create = function (value0) {
        return new NilP(value0);
    };
    return NilP;
})();
var OptP = /* #__PURE__ */ (function () {
    function OptP(value0) {
        this.value0 = value0;
    };
    OptP.create = function (value0) {
        return new OptP(value0);
    };
    return OptP;
})();
var MultP = /* #__PURE__ */ (function () {
    function MultP(value0) {
        this.value0 = value0;
    };
    MultP.create = function (value0) {
        return new MultP(value0);
    };
    return MultP;
})();
var AltP = /* #__PURE__ */ (function () {
    function AltP(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AltP.create = function (value0) {
        return function (value1) {
            return new AltP(value0, value1);
        };
    };
    return AltP;
})();
var BindP = /* #__PURE__ */ (function () {
    function BindP(value0) {
        this.value0 = value0;
    };
    BindP.create = function (value0) {
        return new BindP(value0);
    };
    return BindP;
})();
var Option = function (x) {
    return x;
};
var OptReader = /* #__PURE__ */ (function () {
    function OptReader(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    OptReader.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new OptReader(value0, value1, value2);
            };
        };
    };
    return OptReader;
})();
var FlagReader = /* #__PURE__ */ (function () {
    function FlagReader(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    FlagReader.create = function (value0) {
        return function (value1) {
            return new FlagReader(value0, value1);
        };
    };
    return FlagReader;
})();
var ArgReader = /* #__PURE__ */ (function () {
    function ArgReader(value0) {
        this.value0 = value0;
    };
    ArgReader.create = function (value0) {
        return new ArgReader(value0);
    };
    return ArgReader;
})();
var CmdReader = /* #__PURE__ */ (function () {
    function CmdReader(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    CmdReader.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new CmdReader(value0, value1, value2);
            };
        };
    };
    return CmdReader;
})();
var CReader = function (x) {
    return x;
};
var ReadM = function (x) {
    return x;
};
var ErrorMsg = /* #__PURE__ */ (function () {
    function ErrorMsg(value0) {
        this.value0 = value0;
    };
    ErrorMsg.create = function (value0) {
        return new ErrorMsg(value0);
    };
    return ErrorMsg;
})();
var InfoMsg = /* #__PURE__ */ (function () {
    function InfoMsg(value0) {
        this.value0 = value0;
    };
    InfoMsg.create = function (value0) {
        return new InfoMsg(value0);
    };
    return InfoMsg;
})();
var ShowHelpText = /* #__PURE__ */ (function () {
    function ShowHelpText() {

    };
    ShowHelpText.value = new ShowHelpText();
    return ShowHelpText;
})();
var MissingError = /* #__PURE__ */ (function () {
    function MissingError(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MissingError.create = function (value0) {
        return function (value1) {
            return new MissingError(value0, value1);
        };
    };
    return MissingError;
})();
var ExpectsArgError = /* #__PURE__ */ (function () {
    function ExpectsArgError(value0) {
        this.value0 = value0;
    };
    ExpectsArgError.create = function (value0) {
        return new ExpectsArgError(value0);
    };
    return ExpectsArgError;
})();
var UnexpectedError = /* #__PURE__ */ (function () {
    function UnexpectedError(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    UnexpectedError.create = function (value0) {
        return function (value1) {
            return new UnexpectedError(value0, value1);
        };
    };
    return UnexpectedError;
})();
var SomeParser = /* #__PURE__ */ (function () {
    function SomeParser(value0) {
        this.value0 = value0;
    };
    SomeParser.create = function (value0) {
        return new SomeParser(value0);
    };
    return SomeParser;
})();
var MultPE = /* #__PURE__ */ (function () {
    function MultPE(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    MultPE.create = function (value0) {
        return function (value1) {
            return new MultPE(value0, value1);
        };
    };
    return MultPE;
})();
var Context = /* #__PURE__ */ (function () {
    function Context(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Context.create = function (value0) {
        return function (value1) {
            return new Context(value0, value1);
        };
    };
    return Context;
})();
var ParserM = function (x) {
    return x;
};
var readerAsk = /* #__PURE__ */ Control_Monad_Reader_Class.ask(/* #__PURE__ */ Control_Monad_Reader_Trans.monadAskReaderT(monadExceptT));
var readerAbort = /* #__PURE__ */ (function () {
    var $478 = Control_Monad_Trans_Class.lift(Control_Monad_Reader_Trans.monadTransReaderT)(monadExceptT);
    var $479 = Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity));
    return function ($480) {
        return ReadM($478($479($480)));
    };
})();
var readerError = function ($481) {
    return readerAbort(ErrorMsg.create($481));
};
var readMNewtype = {
    Coercible0: function () {
        return undefined;
    }
};
var readMFunctor = {
    map: function (f) {
        return function (v) {
            return map(f)(v);
        };
    }
};
var map4 = /* #__PURE__ */ Data_Functor.map(readMFunctor);
var readMApply = {
    apply: function (v) {
        return function (v1) {
            return apply(v)(v1);
        };
    },
    Functor0: function () {
        return readMFunctor;
    }
};
var readMBind = {
    bind: function (v) {
        return function (f) {
            return bind(v)((function () {
                var $482 = un(ReadM);
                return function ($483) {
                    return $482(f($483));
                };
            })());
        };
    },
    Apply0: function () {
        return readMApply;
    }
};
var readMApplicative = {
    pure: /* #__PURE__ */ (function () {
        var $484 = Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)));
        return function ($485) {
            return ReadM($484($485));
        };
    })(),
    Apply0: function () {
        return readMApply;
    }
};
var readMMonad = {
    Applicative0: function () {
        return readMApplicative;
    },
    Bind1: function () {
        return readMBind;
    }
};
var readMMonadFail = {
    throwError: readerError,
    Monad0: function () {
        return readMMonad;
    }
};
var parserResultGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new Success(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new Failure(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return new CompletionInvoked(x.value0.value0);
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 452, column 1 - line 452, column 66): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Success) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof Failure) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof CompletionInvoked) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 452, column 1 - line 452, column 66): " + [ x.constructor.name ]);
    }
};
var genericShow = /* #__PURE__ */ Data_Show_Generic.genericShow(parserResultGeneric);
var parserResultFunctor = {
    map: function (v) {
        return function (v1) {
            if (v1 instanceof Success) {
                return new Success(v(v1.value0));
            };
            if (v1 instanceof Failure) {
                return new Failure(v1.value0);
            };
            if (v1 instanceof CompletionInvoked) {
                return new CompletionInvoked(v1.value0);
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 455, column 1 - line 458, column 52): " + [ v.constructor.name, v1.constructor.name ]);
        };
    }
};
var map5 = /* #__PURE__ */ Data_Functor.map(parserResultFunctor);
var parserResultApply = {
    apply: function (v) {
        return function (v1) {
            if (v instanceof Success) {
                return map5(v.value0)(v1);
            };
            if (v instanceof Failure) {
                return new Failure(v.value0);
            };
            if (v instanceof CompletionInvoked) {
                return new CompletionInvoked(v.value0);
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 465, column 1 - line 468, column 54): " + [ v.constructor.name, v1.constructor.name ]);
        };
    },
    Functor0: function () {
        return parserResultFunctor;
    }
};
var parserResultBind = {
    bind: function (v) {
        return function (v1) {
            if (v instanceof Success) {
                return v1(v.value0);
            };
            if (v instanceof Failure) {
                return new Failure(v.value0);
            };
            if (v instanceof CompletionInvoked) {
                return new CompletionInvoked(v.value0);
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 473, column 1 - line 476, column 53): " + [ v.constructor.name, v1.constructor.name ]);
        };
    },
    Apply0: function () {
        return parserResultApply;
    }
};
var parserResultApplicative = /* #__PURE__ */ (function () {
    return {
        pure: Success.create,
        Apply0: function () {
            return parserResultApply;
        }
    };
})();
var parserResultMonad = {
    Applicative0: function () {
        return parserResultApplicative;
    },
    Bind1: function () {
        return parserResultBind;
    }
};
var parserPrefsNewtype = {
    Coercible0: function () {
        return undefined;
    }
};
var parserPrefsGeneric = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var parserMMonadRec = Control_Monad_Free.freeMonadRec;
var tailRecM = /* #__PURE__ */ Control_Monad_Rec_Class.tailRecM(parserMMonadRec);
var parserMMonad = Control_Monad_Free.freeMonad;
var parserMFunctor = Control_Monad_Free.freeFunctor;
var map6 = /* #__PURE__ */ Data_Functor.map(parserMFunctor);
var parserMBind = Control_Monad_Free.freeBind;
var bind1 = /* #__PURE__ */ Control_Bind.bind(parserMBind);
var parserMApply = Control_Monad_Free.freeApply;
var apply2 = /* #__PURE__ */ Control_Apply.apply(parserMApply);
var parserMApplicative = Control_Monad_Free.freeApplicative;
var pure1 = /* #__PURE__ */ Control_Applicative.pure(parserMApplicative);
var parserInfoNewtype = {
    Coercible0: function () {
        return undefined;
    }
};
var parserFailureShow = {
    show: function (v) {
        return "(ParserFailure <function>)";
    }
};
var parserFailureFunctor = {
    map: function (f) {
        return function (v) {
            return function (progn) {
                var v1 = v(progn);
                return new Data_Tuple.Tuple(f(v1.value0), new Data_Tuple.Tuple(v1.value1.value0, new Data_Tuple.Tuple(v1.value1.value1.value0, v1.value1.value1.value1)));
            };
        };
    }
};
var map7 = /* #__PURE__ */ Data_Functor.map(parserFailureFunctor);
var parseErrorSemigroup = {
    append: function (v) {
        return function (m) {
            return m;
        };
    }
};
var alt = /* #__PURE__ */ Control_Alt.alt(/* #__PURE__ */ Control_Monad_Reader_Trans.altReaderT(/* #__PURE__ */ Control_Monad_Except_Trans.altExceptT(parseErrorSemigroup)(Data_Identity.monadIdentity)));
var readMAlt = {
    alt: function (v) {
        return function (v1) {
            return alt(v)(v1);
        };
    },
    Functor0: function () {
        return readMFunctor;
    }
};
var overFailure = function (v) {
    return function (v1) {
        if (v1 instanceof Failure) {
            return new Failure(map7(v)(v1.value0));
        };
        return v1;
    };
};
var optional = function (dictAlt) {
    var alt2 = Control_Alt.alt(dictAlt);
    var map10 = Data_Functor.map(dictAlt.Functor0());
    return function (dictApplicative) {
        var pure3 = Control_Applicative.pure(dictApplicative);
        return function (a) {
            return alt2(map10(Data_Maybe.Just.create)(a))(pure3(Data_Maybe.Nothing.value));
        };
    };
};
var optionNewtype = {
    Coercible0: function () {
        return undefined;
    }
};
var optVisibilityGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return Internal.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return Hidden.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return Visible.value;
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 161, column 1 - line 161, column 64): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Internal) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof Hidden) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof Visible) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 161, column 1 - line 161, column 64): " + [ x.constructor.name ]);
    }
};
var optVisibilityShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(optVisibilityGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Internal";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Hidden";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Visible";
        }
    }))))
};
var show = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "propDescMod";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "propHelp";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "propMetaVar";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "propShowDefault";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil({
    reflectSymbol: function () {
        return "propVisibility";
    }
})(optVisibilityShow))(showMaybe))(Data_Show.showString))(/* #__PURE__ */ Options_Applicative_Help_Chunk.chunkShow(Text_PrettyPrint_Leijen.docShow)))(showMaybe)));
var optVisibilityEq = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Internal && y instanceof Internal) {
                return true;
            };
            if (x instanceof Hidden && y instanceof Hidden) {
                return true;
            };
            if (x instanceof Visible && y instanceof Visible) {
                return true;
            };
            return false;
        };
    }
};
var optVisibilityOrd = {
    compare: function (x) {
        return function (y) {
            if (x instanceof Internal && y instanceof Internal) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Internal) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Internal) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Hidden && y instanceof Hidden) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Hidden) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Hidden) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Visible && y instanceof Visible) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 0, column 0 - line 0, column 0): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return optVisibilityEq;
    }
};
var optTreeGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new Leaf(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new MultNode(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return new AltNode(x.value0.value0);
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 529, column 1 - line 529, column 56): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Leaf) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof MultNode) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof AltNode) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 529, column 1 - line 529, column 56): " + [ x.constructor.name ]);
    }
};
var genericShow1 = /* #__PURE__ */ Data_Show_Generic.genericShow(optTreeGeneric);
var optTreeShow = function (dictShow) {
    return {
        show: genericShow1(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(dictShow))(LeafIsSymbol))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(optTreeShow(dictShow))))(MultNodeIsSymbol))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(optTreeShow(dictShow))))(AltNodeIsSymbol))))
    };
};
var optPropertiesShow = {
    show: function (v) {
        return "(OptProperties " + (show({
            propVisibility: v.propVisibility,
            propHelp: v.propHelp,
            propMetaVar: v.propMetaVar,
            propShowDefault: v.propShowDefault,
            propDescMod: map1(Data_Function["const"]("<func>"))(v.propDescMod)
        }) + ")");
    }
};
var show1 = /* #__PURE__ */ Data_Show.show(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
    reflectSymbol: function () {
        return "optMain";
    }
})(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil({
    reflectSymbol: function () {
        return "optProps";
    }
})(optPropertiesShow))(Data_Show.showString)));
var optionShow = {
    show: function (v) {
        return "(Option " + (show1({
            optProps: v.optProps,
            optMain: "<OptReader>"
        }) + ")");
    }
};
var optPropertiesNewtype = {
    Coercible0: function () {
        return undefined;
    }
};
var optShowDefault = /* #__PURE__ */ (function () {
    var $486 = un(OptProperties);
    var $487 = un(Option);
    return function ($488) {
        return (function (v) {
            return v.propShowDefault;
        })($486((function (v) {
            return v.optProps;
        })($487($488))));
    };
})();
var optVisibility = /* #__PURE__ */ (function () {
    var $489 = un(OptProperties);
    var $490 = un(Option);
    return function ($491) {
        return (function (v) {
            return v.propVisibility;
        })($489((function (v) {
            return v.optProps;
        })($490($491))));
    };
})();
var optNameGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new OptShort(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new OptLong(x.value0);
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 149, column 1 - line 149, column 52): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof OptShort) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof OptLong) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 149, column 1 - line 149, column 52): " + [ x.constructor.name ]);
    }
};
var optNameShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(optNameGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Data_Show.showChar))({
        reflectSymbol: function () {
            return "OptShort";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "OptLong";
        }
    })))
};
var optNameEq = {
    eq: function (x) {
        return function (y) {
            if (x instanceof OptShort && y instanceof OptShort) {
                return x.value0 === y.value0;
            };
            if (x instanceof OptLong && y instanceof OptLong) {
                return x.value0 === y.value0;
            };
            return false;
        };
    }
};
var optNameOrd = {
    compare: function (x) {
        return function (y) {
            if (x instanceof OptShort && y instanceof OptShort) {
                return compare(x.value0)(y.value0);
            };
            if (x instanceof OptShort) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof OptShort) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof OptLong && y instanceof OptLong) {
                return compare1(x.value0)(y.value0);
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 0, column 0 - line 0, column 0): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return optNameEq;
    }
};
var optMetaVar = /* #__PURE__ */ (function () {
    var $492 = un(OptProperties);
    var $493 = un(Option);
    return function ($494) {
        return (function (v) {
            return v.propMetaVar;
        })($492((function (v) {
            return v.optProps;
        })($493($494))));
    };
})();
var optHelpInfoGeneric = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var optHelpInfoShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(optHelpInfoGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "hinfoDefault";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "hinfoMulti";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil({
        reflectSymbol: function () {
            return "hinfoUnreachableArgs";
        }
    })(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showBoolean))))({
        reflectSymbol: function () {
            return "OptHelpInfo";
        }
    }))
};
var optHelpInfoEq = {
    eq: function (x) {
        return function (y) {
            return x.hinfoDefault === y.hinfoDefault && x.hinfoMulti === y.hinfoMulti && x.hinfoUnreachableArgs === y.hinfoUnreachableArgs;
        };
    }
};
var optHelp = /* #__PURE__ */ (function () {
    var $495 = un(OptProperties);
    var $496 = un(Option);
    return function ($497) {
        return (function (v) {
            return v.propHelp;
        })($495((function (v) {
            return v.optProps;
        })($496($497))));
    };
})();
var optDescMod = /* #__PURE__ */ (function () {
    var $498 = un(OptProperties);
    var $499 = un(Option);
    return function ($500) {
        return (function (v) {
            return v.propDescMod;
        })($498((function (v) {
            return v.optProps;
        })($499($500))));
    };
})();
var oneM = function ($501) {
    return ParserM(Control_Monad_Free.liftF($501));
};
var newtypeParserFailure = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeOptHelpInfo = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeCompletionResult = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeCompleter = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeCReader = {
    Coercible0: function () {
        return undefined;
    }
};
var mkCompleter = Completer;
var isCmdStartGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return CmdStart.value;
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return CmdCont.value;
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 81, column 1 - line 81, column 58): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof CmdStart) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof CmdCont) {
            return new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value);
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 81, column 1 - line 81, column 58): " + [ x.constructor.name ]);
    }
};
var isCmdStartShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(isCmdStartGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "CmdStart";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "CmdCont";
        }
    })))
};
var fromM = function (v) {
    return new BindP(v);
};
var completionResultShow = {
    show: function (v) {
        return "(CompletionResult <function>)";
    }
};
var genericShowSum = /* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(parserFailureShow))({
    reflectSymbol: function () {
        return "Failure";
    }
}))(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(completionResultShow))({
    reflectSymbol: function () {
        return "CompletionInvoked";
    }
}));
var parserResultShow = function (dictShow) {
    return {
        show: genericShow(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(dictShow))(SuccessIsSymbol))(genericShowSum))
    };
};
var completerSemigroup = {
    append: function (v) {
        return function (v1) {
            return function (s) {
                return apply1(map2(append1)(v(s)))(v1(s));
            };
        };
    }
};
var completerMonoid = {
    mempty: function (v) {
        return pure([  ]);
    },
    Semigroup0: function () {
        return completerSemigroup;
    }
};
var cReaderFunctor = {
    map: function (f) {
        return over(CReader)(function (r) {
            return {
                crReader: map4(f)(r.crReader),
                crCompleter: r.crCompleter
            };
        });
    }
};
var map8 = /* #__PURE__ */ Data_Functor.map(cReaderFunctor);
var parserInfoFunctor = {
    map: function (f) {
        return over(ParserInfo)(function (i) {
            return {
                infoParser: Data_Functor.map(parserFunctor)(f)(i.infoParser),
                infoFailureCode: i.infoFailureCode,
                infoFooter: i.infoFooter,
                infoFullDesc: i.infoFullDesc,
                infoHeader: i.infoHeader,
                infoPolicy: i.infoPolicy,
                infoProgDesc: i.infoProgDesc
            };
        });
    }
};
var parserFunctor = {
    map: function (v) {
        return function (v1) {
            if (v1 instanceof NilP) {
                return new NilP(v(v1.value0));
            };
            if (v1 instanceof OptP) {
                return new OptP(Data_Functor.map(optionFunctor)(v)(v1.value0));
            };
            if (v1 instanceof MultP) {
                return Data_Exists.runExists(function (v2) {
                    return new MultP(Data_Exists.mkExists(new MultPE(Data_Functor.map(parserFunctor)(function (v3) {
                        return function ($502) {
                            return v(v3($502));
                        };
                    })(v2.value0), v2.value1)));
                })(v1.value0);
            };
            if (v1 instanceof AltP) {
                return new AltP(Data_Functor.map(parserFunctor)(v)(v1.value0), Data_Functor.map(parserFunctor)(v)(v1.value1));
            };
            if (v1 instanceof BindP) {
                return new BindP(map3(v)(v1.value0));
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 317, column 1 - line 322, column 36): " + [ v.constructor.name, v1.constructor.name ]);
        };
    }
};
var optionFunctor = {
    map: function (f) {
        return over(Option)(function (o) {
            return {
                optMain: Data_Functor.map(optReaderFunctor)(f)(o.optMain),
                optProps: o.optProps
            };
        });
    }
};
var optReaderFunctor = {
    map: function (v) {
        return function (v1) {
            if (v1 instanceof OptReader) {
                return new OptReader(v1.value0, map8(v)(v1.value1), v1.value2);
            };
            if (v1 instanceof FlagReader) {
                return new FlagReader(v1.value0, v(v1.value1));
            };
            if (v1 instanceof ArgReader) {
                return new ArgReader(map8(v)(v1.value0));
            };
            if (v1 instanceof CmdReader) {
                return new CmdReader(v1.value0, v1.value1, (function () {
                    var $503 = map1(Data_Functor.map(parserInfoFunctor)(v));
                    return function ($504) {
                        return $503(v1.value2($504));
                    };
                })());
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 264, column 1 - line 268, column 68): " + [ v.constructor.name, v1.constructor.name ]);
        };
    }
};
var map9 = /* #__PURE__ */ Data_Functor.map(parserFunctor);
var parserAlt = /* #__PURE__ */ (function () {
    return {
        alt: AltP.create,
        Functor0: function () {
            return parserFunctor;
        }
    };
})();
var alt1 = /* #__PURE__ */ Control_Alt.alt(parserAlt);
var parserApply = {
    apply: function (a) {
        return function (b) {
            return new MultP(Data_Exists.mkExists(new MultPE(a, b)));
        };
    },
    Functor0: function () {
        return parserFunctor;
    }
};
var parserApplicative = /* #__PURE__ */ (function () {
    return {
        pure: NilP.create,
        Apply0: function () {
            return parserApply;
        }
    };
})();
var pure2 = /* #__PURE__ */ Control_Applicative.pure(parserApplicative);
var manyM = function (p) {
    var go = function (acc) {
        return bind1(oneM(alt1(map9(Control_Monad_Rec_Class.Loop.create)(p))(pure2(new Control_Monad_Rec_Class.Done(Data_Unit.unit)))))(function (aa) {
            return pure1(bimap(function (v) {
                return new Data_List_Types.Cons(v, acc);
            })(function (v) {
                return Data_List.reverse(acc);
            })(aa));
        });
    };
    return tailRecM(go)(Data_List_Types.Nil.value);
};
var many = function ($505) {
    return fromM(manyM($505));
};
var someM = function (p) {
    return apply2(map6(Data_List_NonEmpty["cons$prime"])(oneM(p)))(manyM(p));
};
var some = function ($506) {
    return fromM(someM($506));
};
var backtrackingGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return Backtrack.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return NoBacktrack.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return SubparserInline.value;
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 119, column 1 - line 119, column 62): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Backtrack) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof NoBacktrack) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof SubparserInline) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 119, column 1 - line 119, column 62): " + [ x.constructor.name ]);
    }
};
var backtrackingShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(backtrackingGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Backtrack";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "NoBacktrack";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "SubparserInline";
        }
    }))))
};
var parserPrefsShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(parserPrefsGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowConstructor(/* #__PURE__ */ Data_Show_Generic.genericShowArgsArgument(/* #__PURE__ */ showRecord(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "prefBacktrack";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "prefColumns";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "prefDisambiguate";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "prefMultiSuffix";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "prefShowHelpOnEmpty";
        }
    })(/* #__PURE__ */ Data_Show.showRecordFieldsConsNil({
        reflectSymbol: function () {
            return "prefShowHelpOnError";
        }
    })(Data_Show.showBoolean))(Data_Show.showBoolean))(Data_Show.showString))(Data_Show.showBoolean))(Data_Show.showInt))(backtrackingShow))))({
        reflectSymbol: function () {
            return "ParserPrefs";
        }
    }))
};
var backtrackingEq = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Backtrack && y instanceof Backtrack) {
                return true;
            };
            if (x instanceof NoBacktrack && y instanceof NoBacktrack) {
                return true;
            };
            if (x instanceof SubparserInline && y instanceof SubparserInline) {
                return true;
            };
            return false;
        };
    }
};
var eq4 = /* #__PURE__ */ Data_Eq.eq(backtrackingEq);
var parserPrefsEq = {
    eq: function (x) {
        return function (y) {
            return eq4(x.prefBacktrack)(y.prefBacktrack) && x.prefColumns === y.prefColumns && x.prefDisambiguate === y.prefDisambiguate && x.prefMultiSuffix === y.prefMultiSuffix && x.prefShowHelpOnEmpty === y.prefShowHelpOnEmpty && x.prefShowHelpOnError === y.prefShowHelpOnError;
        };
    }
};
var argPolicyGeneric = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return Intersperse.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return NoIntersperse.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return AllPositionals.value;
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inr)) {
            return ForwardOptions.value;
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 508, column 1 - line 508, column 56): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof Intersperse) {
            return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
        };
        if (x instanceof NoIntersperse) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
        };
        if (x instanceof AllPositionals) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value)));
        };
        if (x instanceof ForwardOptions) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value)));
        };
        throw new Error("Failed pattern match at Options.Applicative.Types (line 508, column 1 - line 508, column 56): " + [ x.constructor.name ]);
    }
};
var argPolicyShow = {
    show: /* #__PURE__ */ Data_Show_Generic.genericShow(argPolicyGeneric)(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "Intersperse";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "NoIntersperse";
        }
    }))(/* #__PURE__ */ Data_Show_Generic.genericShowSum(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "AllPositionals";
        }
    }))(/* #__PURE__ */ genericShowConstructor({
        reflectSymbol: function () {
            return "ForwardOptions";
        }
    })))))
};
var argPolicyEq = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Intersperse && y instanceof Intersperse) {
                return true;
            };
            if (x instanceof NoIntersperse && y instanceof NoIntersperse) {
                return true;
            };
            if (x instanceof AllPositionals && y instanceof AllPositionals) {
                return true;
            };
            if (x instanceof ForwardOptions && y instanceof ForwardOptions) {
                return true;
            };
            return false;
        };
    }
};
var argPolicyOrd = {
    compare: function (x) {
        return function (y) {
            if (x instanceof Intersperse && y instanceof Intersperse) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Intersperse) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Intersperse) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof NoIntersperse && y instanceof NoIntersperse) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof NoIntersperse) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof NoIntersperse) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof AllPositionals && y instanceof AllPositionals) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof AllPositionals) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof AllPositionals) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof ForwardOptions && y instanceof ForwardOptions) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Options.Applicative.Types (line 0, column 0 - line 0, column 0): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return argPolicyEq;
    }
};
export {
    ErrorMsg,
    InfoMsg,
    ShowHelpText,
    MissingError,
    ExpectsArgError,
    UnexpectedError,
    ParserInfo,
    ParserPrefs,
    Option,
    OptShort,
    OptLong,
    OptReader,
    FlagReader,
    ArgReader,
    CmdReader,
    OptProperties,
    Internal,
    Hidden,
    Visible,
    Backtrack,
    NoBacktrack,
    SubparserInline,
    ReadM,
    readerAsk,
    readerAbort,
    readerError,
    CReader,
    NilP,
    OptP,
    MultP,
    AltP,
    BindP,
    MultPE,
    Completer,
    mkCompleter,
    CompletionResult,
    ParserFailure,
    Success,
    Failure,
    CompletionInvoked,
    overFailure,
    Intersperse,
    NoIntersperse,
    AllPositionals,
    ForwardOptions,
    OptHelpInfo,
    Leaf,
    MultNode,
    AltNode,
    SomeParser,
    Context,
    CmdStart,
    CmdCont,
    optVisibility,
    optMetaVar,
    optHelp,
    optShowDefault,
    optDescMod,
    many,
    some,
    optional,
    isCmdStartGeneric,
    isCmdStartShow,
    parseErrorSemigroup,
    parserInfoNewtype,
    parserInfoFunctor,
    backtrackingEq,
    backtrackingGeneric,
    backtrackingShow,
    parserPrefsNewtype,
    parserPrefsEq,
    parserPrefsGeneric,
    parserPrefsShow,
    optNameEq,
    optNameOrd,
    optNameGeneric,
    optNameShow,
    optVisibilityEq,
    optVisibilityOrd,
    optVisibilityGeneric,
    optVisibilityShow,
    optPropertiesNewtype,
    optPropertiesShow,
    optionNewtype,
    optionShow,
    optionFunctor,
    readMNewtype,
    readMFunctor,
    readMApply,
    readMApplicative,
    readMAlt,
    readMBind,
    readMMonad,
    readMMonadFail,
    newtypeCReader,
    cReaderFunctor,
    optReaderFunctor,
    parserFunctor,
    parserApply,
    parserApplicative,
    parserAlt,
    newtypeCompleter,
    completerSemigroup,
    completerMonoid,
    newtypeCompletionResult,
    completionResultShow,
    newtypeParserFailure,
    parserFailureShow,
    parserFailureFunctor,
    parserResultGeneric,
    parserResultShow,
    parserResultFunctor,
    parserResultApply,
    parserResultApplicative,
    parserResultBind,
    parserResultMonad,
    argPolicyEq,
    argPolicyOrd,
    argPolicyGeneric,
    argPolicyShow,
    newtypeOptHelpInfo,
    optHelpInfoEq,
    optHelpInfoGeneric,
    optHelpInfoShow,
    optTreeGeneric,
    optTreeShow
};
export {
    ParserHelp
} from "../Options.Applicative.Help.Types/index.js";
//# sourceMappingURL=index.js.map
