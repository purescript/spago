{"builtWith":"0.15.10","comments":[{"LineComment":" | `Prelude` is a module that re-exports many other foundational modules from the `purescript-prelude` library"},{"LineComment":" | (e.g. the Monad type class hierarchy, the Monoid type classes, Eq, Ord, etc.)."},{"LineComment":" |"},{"LineComment":" | Typically, this module will be imported in most other libraries and projects as an open import."},{"LineComment":" |"},{"LineComment":" | ```"},{"LineComment":" | module MyModule where"},{"LineComment":" |"},{"LineComment":" | import Prelude -- open import"},{"LineComment":" |"},{"LineComment":" | import Data.Maybe (Maybe(..)) -- closed import"},{"LineComment":" | ```"}],"decls":[],"exports":[],"foreign":[],"imports":[{"annotation":{"meta":null,"sourceSpan":{"end":[43,75],"start":[43,1]}},"moduleName":["Control","Applicative"]},{"annotation":{"meta":null,"sourceSpan":{"end":[44,61],"start":[44,1]}},"moduleName":["Control","Apply"]},{"annotation":{"meta":null,"sourceSpan":{"end":[45,102],"start":[45,1]}},"moduleName":["Control","Bind"]},{"annotation":{"meta":null,"sourceSpan":{"end":[46,51],"start":[46,1]}},"moduleName":["Control","Category"]},{"annotation":{"meta":null,"sourceSpan":{"end":[47,63],"start":[47,1]}},"moduleName":["Control","Monad"]},{"annotation":{"meta":null,"sourceSpan":{"end":[48,72],"start":[48,1]}},"moduleName":["Control","Semigroupoid"]},{"annotation":{"meta":null,"sourceSpan":{"end":[50,32],"start":[50,1]}},"moduleName":["Data","Boolean"]},{"annotation":{"meta":null,"sourceSpan":{"end":[51,50],"start":[51,1]}},"moduleName":["Data","BooleanAlgebra"]},{"annotation":{"meta":null,"sourceSpan":{"end":[52,49],"start":[52,1]}},"moduleName":["Data","Bounded"]},{"annotation":{"meta":null,"sourceSpan":{"end":[53,52],"start":[53,1]}},"moduleName":["Data","CommutativeRing"]},{"annotation":{"meta":null,"sourceSpan":{"end":[54,53],"start":[54,1]}},"moduleName":["Data","DivisionRing"]},{"annotation":{"meta":null,"sourceSpan":{"end":[55,49],"start":[55,1]}},"moduleName":["Data","Eq"]},{"annotation":{"meta":null,"sourceSpan":{"end":[56,81],"start":[56,1]}},"moduleName":["Data","EuclideanRing"]},{"annotation":{"meta":null,"sourceSpan":{"end":[57,32],"start":[57,1]}},"moduleName":["Data","Field"]},{"annotation":{"meta":null,"sourceSpan":{"end":[58,45],"start":[58,1]}},"moduleName":["Data","Function"]},{"annotation":{"meta":null,"sourceSpan":{"end":[59,86],"start":[59,1]}},"moduleName":["Data","Functor"]},{"annotation":{"meta":null,"sourceSpan":{"end":[60,79],"start":[60,1]}},"moduleName":["Data","HeytingAlgebra"]},{"annotation":{"meta":null,"sourceSpan":{"end":[61,42],"start":[61,1]}},"moduleName":["Data","Monoid"]},{"annotation":{"meta":null,"sourceSpan":{"end":[62,46],"start":[62,1]}},"moduleName":["Data","NaturalTransformation"]},{"annotation":{"meta":null,"sourceSpan":{"end":[63,96],"start":[63,1]}},"moduleName":["Data","Ord"]},{"annotation":{"meta":null,"sourceSpan":{"end":[64,36],"start":[64,1]}},"moduleName":["Data","Ordering"]},{"annotation":{"meta":null,"sourceSpan":{"end":[65,48],"start":[65,1]}},"moduleName":["Data","Ring"]},{"annotation":{"meta":null,"sourceSpan":{"end":[66,54],"start":[66,1]}},"moduleName":["Data","Semigroup"]},{"annotation":{"meta":null,"sourceSpan":{"end":[67,69],"start":[67,1]}},"moduleName":["Data","Semiring"]},{"annotation":{"meta":null,"sourceSpan":{"end":[68,36],"start":[68,1]}},"moduleName":["Data","Show"]},{"annotation":{"meta":null,"sourceSpan":{"end":[69,30],"start":[69,1]}},"moduleName":["Data","Unit"]},{"annotation":{"meta":null,"sourceSpan":{"end":[70,32],"start":[70,1]}},"moduleName":["Data","Void"]},{"annotation":{"meta":null,"sourceSpan":{"end":[70,32],"start":[13,1]}},"moduleName":["Prim"]}],"moduleName":["Prelude"],"modulePath":".spago/packages/prelude-6.0.1/src/Prelude.purs","reExports":{"Control.Applicative":["liftA1","pure","unless","when"],"Control.Apply":["apply"],"Control.Bind":["bind","discard","ifM","join"],"Control.Category":["identity"],"Control.Monad":["ap","liftM1","unlessM","whenM"],"Control.Semigroupoid":["compose"],"Data.Boolean":["otherwise"],"Data.BooleanAlgebra":[],"Data.Bounded":["bottom","top"],"Data.CommutativeRing":[],"Data.DivisionRing":["recip"],"Data.Eq":["eq","notEq"],"Data.EuclideanRing":["degree","div","gcd","lcm","mod"],"Data.Field":[],"Data.Function":["const","flip"],"Data.Functor":["flap","map","void"],"Data.HeytingAlgebra":["conj","disj","not"],"Data.Monoid":["mempty"],"Data.NaturalTransformation":[],"Data.Ord":["between","clamp","compare","comparing","max","min"],"Data.Ordering":["EQ","GT","LT"],"Data.Ring":["negate","sub"],"Data.Semigroup":["append"],"Data.Semiring":["add","mul","one","zero"],"Data.Show":["show"],"Data.Unit":["unit"],"Data.Void":["absurd"]},"sourceSpan":{"end":[70,32],"start":[13,1]}}