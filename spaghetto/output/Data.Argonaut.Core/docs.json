{"comments":"This module defines a data type and various functions for creating and\nmanipulating JSON values. The README contains additional documentation\nfor this module.\n","declarations":[{"children":[{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[56,33],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[55,1]},"title":"eqJson"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[59,45],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[58,1]},"title":"ordJson"}],"comments":"The type of JSON data. The underlying representation is the same as what\nwould be returned from JavaScript's `JSON.parse` function; that is,\nordinary JavaScript booleans, strings, arrays, objects, etc.\n","info":{"dataDeclType":"data","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[53,33],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[53,1]},"title":"Json"},{"children":[],"comments":"Case analysis for `Json` values. See the README for more information.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Foreign","Object"],"Object"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[82,7],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[73,1]},"title":"caseJson"},{"children":[],"comments":"A simpler version of `caseJson` which accepts a callback for when the\n`Json` argument was null, and a default value for all other cases.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[87,56],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[87,1]},"title":"caseJsonNull"},{"children":[],"comments":"A simpler version of `caseJson` which accepts a callback for when the\n`Json` argument was a `Boolean`, and a default value for all other cases.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[92,62],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[92,1]},"title":"caseJsonBoolean"},{"children":[],"comments":"A simpler version of `caseJson` which accepts a callback for when the\n`Json` argument was a `Number`, and a default value for all other cases.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[97,60],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[97,1]},"title":"caseJsonNumber"},{"children":[],"comments":"A simpler version of `caseJson` which accepts a callback for when the\n`Json` argument was a `String`, and a default value for all other cases.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[102,60],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[102,1]},"title":"caseJsonString"},{"children":[],"comments":"A simpler version of `caseJson` which accepts a callback for when the\n`Json` argument was a `Array Json`, and a default value for all other cases.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[107,63],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[107,1]},"title":"caseJsonArray"},{"children":[],"comments":"A simpler version of `caseJson` which accepts a callback for when the\n`Json` argument was an `Object`, and a default value for all other cases.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Foreign","Object"],"Object"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[112,65],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[112,1]},"title":"caseJsonObject"},{"children":[],"comments":"Check if the provided `Json` is the `null` value\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[124,26],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[124,1]},"title":"isNull"},{"children":[],"comments":"Check if the provided `Json` is a `Boolean`\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[128,29],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[128,1]},"title":"isBoolean"},{"children":[],"comments":"Check if the provided `Json` is a `Number`\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[132,28],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[132,1]},"title":"isNumber"},{"children":[],"comments":"Check if the provided `Json` is a `String`\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[136,28],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[136,1]},"title":"isString"},{"children":[],"comments":"Check if the provided `Json` is an `Array`\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[140,27],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[140,1]},"title":"isArray"},{"children":[],"comments":"Check if the provided `Json` is an `Object`\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[144,28],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[144,1]},"title":"isObject"},{"children":[],"comments":"Construct `Json` from a `Boolean` value\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[184,46],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[184,1]},"title":"fromBoolean"},{"children":[],"comments":"Construct `Json` from a `Number` value\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[187,44],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[187,1]},"title":"fromNumber"},{"children":[],"comments":"Construct the `Json` representation of a `String` value.\nNote that this function only produces `Json` containing a single piece of `String`\ndata (similar to `fromBoolean`, `fromNumber`, etc.).\nThis function does NOT convert the `String` encoding of a JSON value to `Json` - For that\npurpose, you'll need to use `jsonParser`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[194,44],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[194,1]},"title":"fromString"},{"children":[],"comments":"Construct `Json` from an array of `Json` values\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[197,47],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[197,1]},"title":"fromArray"},{"children":[],"comments":"Construct `Json` from an object with `Json` values\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Foreign","Object"],"Object"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[200,49],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[200,1]},"title":"fromObject"},{"children":[],"comments":"Convert `Json` to the `Unit` value if the `Json` is the null value\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Unit"],"Unit"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[157,29],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[157,1]},"title":"toNull"},{"children":[],"comments":"Convert `Json` to a `Boolean` value, if the `Json` is a boolean.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[161,35],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[161,1]},"title":"toBoolean"},{"children":[],"comments":"Convert `Json` to a `Number` value, if the `Json` is a number.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[165,33],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[165,1]},"title":"toNumber"},{"children":[],"comments":"Convert `Json` to a `String` value, if the `Json` is a string. To write a\n`Json` value to a JSON string, see `stringify`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[170,33],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[170,1]},"title":"toString"},{"children":[],"comments":"Convert `Json` to an `Array` of `Json` values, if the `Json` is an array.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[174,38],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[174,1]},"title":"toArray"},{"children":[],"comments":"Convert `Json` to an `Object` of `Json` values, if the `Json` is an object.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Foreign","Object"],"Object"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[178,40],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[178,1]},"title":"toObject"},{"children":[],"comments":"The JSON null value represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[205,32],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[205,1]},"title":"jsonNull"},{"children":[],"comments":"The true boolean value represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[208,17],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[208,1]},"title":"jsonTrue"},{"children":[],"comments":"The false boolean value represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[212,18],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[212,1]},"title":"jsonFalse"},{"children":[],"comments":"The number zero represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[216,17],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[216,1]},"title":"jsonZero"},{"children":[],"comments":"An empty string represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[220,24],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[220,1]},"title":"jsonEmptyString"},{"children":[],"comments":"An empty array represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[224,23],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[224,1]},"title":"jsonEmptyArray"},{"children":[],"comments":"Constructs a `Json` array value containing only the provided value\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[232,35],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[232,1]},"title":"jsonSingletonArray"},{"children":[],"comments":"An empty object represented as `Json`\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[228,24],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[228,1]},"title":"jsonEmptyObject"},{"children":[],"comments":"Constructs a `Json` object value containing only the provided key and value\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[236,46],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[236,1]},"title":"jsonSingletonObject"},{"children":[],"comments":"Converts a `Json` value to a JSON string. To retrieve a string from a `Json`\nstring value, see `fromString`.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[241,43],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[241,1]},"title":"stringify"},{"children":[],"comments":"Converts a `Json` value to a JSON string.\nThe first `Int` argument specifies the amount of white space characters to use as indentation.\nThis number is capped at 10 (if it is greater, the value is just 10). Values less than 1 indicate that no space should be used.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Argonaut","Core"],"Json"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[246,60],"name":".spago/packages/argonaut-core-7.0.0/src/Data/Argonaut/Core.purs","start":[246,1]},"title":"stringifyWithIndent"}],"name":"Data.Argonaut.Core","reExports":[]}