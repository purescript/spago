// Generated by purs version 0.15.10
import * as $foreign from "./foreign.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad from "../Control.Monad/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Nullable from "../Data.Nullable/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Set from "../Data.Set/index.js";
import * as Data_Symbol from "../Data.Symbol/index.js";
import * as Data_Traversable from "../Data.Traversable/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as Node_EventEmitter from "../Node.EventEmitter/index.js";
import * as Node_EventEmitter_TypedEmitter from "../Node.EventEmitter.TypedEmitter/index.js";
import * as Node_Platform from "../Node.Platform/index.js";
import * as Node_Process from "../Node.Process/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
var eq = /* #__PURE__ */ Data_Eq.eq(/* #__PURE__ */ Data_Maybe.eqMaybe(Node_Platform.eqPlatform));
var guard = /* #__PURE__ */ Data_Monoid.guard(Data_Monoid.monoidArray);
var append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);
var bind = /* #__PURE__ */ Control_Bind.bind(Effect.bindEffect);
var pure = /* #__PURE__ */ Control_Applicative.pure(Effect.applicativeEffect);
var whenM = /* #__PURE__ */ Control_Monad.whenM(Effect.monadEffect);
var traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray);
var $$void = /* #__PURE__ */ Data_Functor["void"](Effect.functorEffect);
var emit = /* #__PURE__ */ Node_EventEmitter_TypedEmitter.emit()()(Node_EventEmitter.unsafeEmitFunctionFunctio);
var exitIsSymbol = {
    reflectSymbol: function () {
        return "exit";
    }
};
var emit1 = /* #__PURE__ */ emit(exitIsSymbol);
var afterexitIsSymbol = {
    reflectSymbol: function () {
        return "afterexit";
    }
};
var emit2 = /* #__PURE__ */ emit(afterexitIsSymbol);
var unless = /* #__PURE__ */ Control_Applicative.unless(Effect.applicativeEffect);
var member = /* #__PURE__ */ Data_Set.member(Data_Ord.ordString);
var insert = /* #__PURE__ */ Data_Set.insert(Data_Ord.ordString);
var map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);
var unsafeEmit = /* #__PURE__ */ Node_EventEmitter.unsafeEmit(Node_EventEmitter.unsafeEmitFunctionFunctio);
var when = /* #__PURE__ */ Control_Applicative.when(Effect.applicativeEffect);
var reflectSymbol = /* #__PURE__ */ Data_Symbol.reflectSymbol(exitIsSymbol);
var reflectSymbol1 = /* #__PURE__ */ Data_Symbol.reflectSymbol(afterexitIsSymbol);
var unlessM = /* #__PURE__ */ Control_Monad.unlessM(Effect.monadEffect);
var $$for = /* #__PURE__ */ Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray);
var subscribe = /* #__PURE__ */ Node_EventEmitter_TypedEmitter.subscribe()(Node_EventEmitter.unsafeOnEventFunctionFunc8)(Node_EventEmitter.unsafeOffEventEffectFn2Un);
var subscribe1 = /* #__PURE__ */ subscribe(afterexitIsSymbol);
var subscribe2 = /* #__PURE__ */ subscribe(exitIsSymbol);
var listenersLength = /* #__PURE__ */ Node_EventEmitter_TypedEmitter.listenersLength();
var listenersLength1 = /* #__PURE__ */ listenersLength(exitIsSymbol);
var listenersLength2 = /* #__PURE__ */ listenersLength(afterexitIsSymbol);
var signalExitProp = "__purescript_signal_exit__";
var isWin = /* #__PURE__ */ (function () {
    return eq(new Data_Maybe.Just(Node_Platform.Win32.value))(Node_Process.platform);
})();
var signals = /* #__PURE__ */ (function () {
    var windows = guard(isWin)([ "SIGVTALRM", "SIGXCPU", "SIGXFSZ", "SIGUSR2", "SIGTRAP", "SIGSYS", "SIGQUIT", "SIGIOT", "SIGPROF" ]);
    var normal = [ "SIGABRT", "SIGALRM", "SIGHUP", "SIGINT", "SIGTERM" ];
    var linux = guard(eq(Node_Process.platform)(new Data_Maybe.Just(Node_Platform.Linux.value)))([ "SIGIO", "SIGPOLL", "SIGPWR", "SIGSTKFLT", "SIGUNUSED" ]);
    return append(normal)(append(windows)(linux));
})();
var getGlobalRecOnProcessObject = /* #__PURE__ */ (function () {
    var attachRefsToProcessObject = function __do() {
        var v = $foreign.unsafeReadProcessProp("emit");
        var v1 = $foreign.unsafeReadProcessProp("reallyExit");
        var restoreOriginalProcessFunctions = function __do() {
            $foreign.unsafeWriteProcessProp("emit", v);
            return $foreign.unsafeWriteProcessProp("reallyExit", v1);
        };
        var emitter = Node_EventEmitter_TypedEmitter["new"](Type_Proxy["Proxy"].value)();
        Node_EventEmitter_TypedEmitter.setUnlimitedListeners(emitter)();
        var countRef = Effect_Ref["new"](0)();
        var emittedEventsRef = Effect_Ref["new"](Data_Set.empty)();
        var loadedRef = Effect_Ref["new"](false)();
        var signalListenersRef = Effect_Ref["new"]([  ])();
        var obj = {
            originalProcessEmit: v,
            originalProcessReallyExit: v1,
            restoreOriginalProcessFunctions: restoreOriginalProcessFunctions,
            emitter: emitter,
            countRef: countRef,
            emittedEventsRef: emittedEventsRef,
            loadedRef: loadedRef,
            signalListenersRef: signalListenersRef
        };
        $foreign.unsafeWriteProcessProp(signalExitProp, obj);
        return obj;
    };
    return Control_Bind.ifM(Effect.bindEffect)(function () {
        return $foreign.unsafeProcessHasProp(signalExitProp);
    })(function () {
        return $foreign.unsafeReadProcessProp(signalExitProp);
    })(attachRefsToProcessObject);
})();
var _exit = /* #__PURE__ */ (function () {
    return Type_Proxy["Proxy"].value;
})();
var _afterexit = /* #__PURE__ */ (function () {
    return Type_Proxy["Proxy"].value;
})();
var onExit$prime = function (cb) {
    return function (options) {
        var unload = function __do() {
            var v = getGlobalRecOnProcessObject();
            return whenM(Effect_Ref.read(v.loadedRef))(function __do() {
                Effect_Ref.write(false)(v.loadedRef)();
                bind(Effect_Ref.read(v.signalListenersRef))(traverse_(function (v1) {
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return pure(Data_Unit.unit);
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        return v1.value0;
                    };
                    throw new Error("Failed pattern match at Node.Library.Execa.SignalExit (line 99, column 49 - line 101, column 40): " + [ v1.constructor.name ]);
                }))();
                v.restoreOriginalProcessFunctions();
                return Effect_Ref.modify_(function (v1) {
                    return v1 - 1 | 0;
                })(v.countRef)();
            })();
        };
        var processReallyExitFn = function (v) {
            var v1 = getGlobalRecOnProcessObject();
            var exitCode = Data_Maybe.fromMaybe(0)(Data_Nullable.toMaybe(v));
            $foreign.unsafeWriteProcessProp("exit", exitCode);
            $$void(Node_EventEmitter_TypedEmitter.withEmit(emit1(_exit)(v1.emitter)(Data_Nullable.notNull(exitCode))(Data_Nullable["null"])))();
            $$void(Node_EventEmitter_TypedEmitter.withEmit(emit2(_afterexit)(v1.emitter)(Data_Nullable.notNull(exitCode))(Data_Nullable["null"])))();
            return $foreign.processCallFn(v1.originalProcessReallyExit, Data_Nullable.notNull(exitCode));
        };
        var emitFn = function (event, code, signal) {
            var v = getGlobalRecOnProcessObject();
            var eventsAlreadyEmitted = Effect_Ref.read(v.emittedEventsRef)();
            return unless(member(event)(eventsAlreadyEmitted))(function __do() {
                Effect_Ref.modify_(insert(event))(v.emittedEventsRef)();
                return map(function (v1) {
                    return Data_Unit.unit;
                })(unsafeEmit(v.emitter)(event)(code)(signal))();
            })();
        };
        var mkListener = function (sig) {
            return function (countRef) {
                return function __do() {
                    var listenersLen = $foreign.processListenersLength(sig);
                    var count = Effect_Ref.read(countRef)();
                    return when(listenersLen === count)(function __do() {
                        unload();
                        emitFn(reflectSymbol(_exit), Data_Nullable["null"], Data_Nullable.notNull(sig));
                        emitFn(reflectSymbol1(_afterexit), Data_Nullable["null"], Data_Nullable.notNull(sig));
                        var sig$prime = (function () {
                            var $74 = isWin && sig === "SIGHUP";
                            if ($74) {
                                return "SIGINT";
                            };
                            return sig;
                        })();
                        return $foreign.processKill(Node_Process.pid, sig$prime);
                    })();
                };
            };
        };
        var processEmitFn = $foreign.customProcessEmit(function (runOriginalProcessEmit, ev, arg) {
            var v = getGlobalRecOnProcessObject();
            var $76 = ev === reflectSymbol(_exit);
            if ($76) {
                var exitCode = (function () {
                    var v1 = Data_Nullable.toMaybe(arg);
                    if (v1 instanceof Data_Maybe.Nothing) {
                        return $foreign.processExitCode();
                    };
                    if (v1 instanceof Data_Maybe.Just) {
                        $foreign.unsafeWriteProcessProp("exit", v1.value0);
                        return Data_Nullable.notNull(v1.value0);
                    };
                    throw new Error("Failed pattern match at Node.Library.Execa.SignalExit (line 173, column 19 - line 177, column 35): " + [ v1.constructor.name ]);
                })();
                var ret = runOriginalProcessEmit(v.originalProcessEmit);
                emitFn(reflectSymbol(_exit), exitCode, Data_Nullable["null"]);
                emitFn(reflectSymbol1(_afterexit), exitCode, Data_Nullable["null"]);
                return ret;
            };
            return runOriginalProcessEmit(v.originalProcessEmit);
        });
        var load = function __do() {
            var v = getGlobalRecOnProcessObject();
            return unlessM(Effect_Ref.read(v.loadedRef))(function __do() {
                Effect_Ref.write(true)(v.loadedRef)();
                Effect_Ref.modify_(function (v1) {
                    return v1 + 1 | 0;
                })(v.countRef)();
                var signalListeners = $$for(signals)(function (sig) {
                    return map(Data_Either.hush)(Effect_Exception["try"]((function () {
                        var listener = mkListener(sig)(v.countRef);
                        return function __do() {
                            $foreign.processOn(sig, listener);
                            return $$void(Effect_Exception["try"](function () {
                                return $foreign.processOff(sig, listener);
                            }));
                        };
                    })()));
                })();
                Effect_Ref.write(signalListeners)(v.signalListenersRef)();
                $foreign.unsafeWriteProcessProp("emit", processEmitFn);
                return $foreign.unsafeWriteProcessProp("reallyExit", processReallyExitFn);
            })();
        };
        return function __do() {
            var v = getGlobalRecOnProcessObject();
            load();
            var unSubscribe = (function () {
                if (options.alwaysLast) {
                    return subscribe1(_afterexit)(function (exitCode) {
                        return function (sig) {
                            return cb(Data_Nullable.toMaybe(exitCode))(Data_Nullable.toMaybe(sig));
                        };
                    })(v.emitter)();
                };
                return subscribe2(_exit)(function (exitCode) {
                    return function (sig) {
                        return cb(Data_Nullable.toMaybe(exitCode))(Data_Nullable.toMaybe(sig));
                    };
                })(v.emitter)();
            })();
            return function __do() {
                unSubscribe();
                var exitLen = listenersLength1(_exit)(v.emitter)();
                var afterExitLen = listenersLength2(_afterexit)(v.emitter)();
                return when(exitLen === 0 && afterExitLen === 0)(unload)();
            };
        };
    };
};
var onAfterExit = function (cb) {
    return onExit$prime(cb)({
        alwaysLast: true
    });
};
var onExit = function (cb) {
    return onExit$prime(cb)({
        alwaysLast: false
    });
};
export {
    onExit,
    onAfterExit
};
//# sourceMappingURL=index.js.map
