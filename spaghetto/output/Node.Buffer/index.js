// Generated by purs version 0.15.10
import * as Effect from "../Effect/index.js";
import * as Node_Buffer_Class from "../Node.Buffer.Class/index.js";
import * as Node_Buffer_Internal from "../Node.Buffer.Internal/index.js";
import * as Node_Buffer_Types from "../Node.Buffer.Types/index.js";
var mutableBufferEffect = {
    create: /* #__PURE__ */ Node_Buffer_Internal.create(Effect.monadEffect),
    freeze: Node_Buffer_Internal.copyAll,
    unsafeFreeze: /* #__PURE__ */ Node_Buffer_Internal.unsafeFreeze(Effect.monadEffect),
    thaw: Node_Buffer_Internal.copyAll,
    unsafeThaw: /* #__PURE__ */ Node_Buffer_Internal.unsafeThaw(Effect.monadEffect),
    fromArray: /* #__PURE__ */ Node_Buffer_Internal.fromArray(Effect.monadEffect),
    fromString: /* #__PURE__ */ Node_Buffer_Internal.fromString(Effect.monadEffect),
    fromArrayBuffer: /* #__PURE__ */ Node_Buffer_Internal.fromArrayBuffer(Effect.monadEffect),
    toArrayBuffer: /* #__PURE__ */ Node_Buffer_Internal.toArrayBuffer(Effect.monadEffect),
    read: /* #__PURE__ */ Node_Buffer_Internal.read(Effect.monadEffect),
    readString: /* #__PURE__ */ Node_Buffer_Internal.readString(Effect.monadEffect),
    toString: /* #__PURE__ */ Node_Buffer_Internal.toString(Effect.monadEffect),
    write: /* #__PURE__ */ Node_Buffer_Internal.write(Effect.monadEffect),
    writeString: /* #__PURE__ */ Node_Buffer_Internal.writeString(Effect.monadEffect),
    toArray: /* #__PURE__ */ Node_Buffer_Internal.toArray(Effect.monadEffect),
    getAtOffset: /* #__PURE__ */ Node_Buffer_Internal.getAtOffset(Effect.monadEffect),
    setAtOffset: Node_Buffer_Internal.setAtOffset,
    slice: Node_Buffer_Internal.slice,
    size: /* #__PURE__ */ Node_Buffer_Internal.size(Effect.monadEffect),
    concat: Node_Buffer_Internal.concat,
    "concat'": /* #__PURE__ */ Node_Buffer_Internal["concat$prime"](Effect.monadEffect),
    copy: Node_Buffer_Internal.copy,
    fill: Node_Buffer_Internal.fill,
    Monad0: function () {
        return Effect.monadEffect;
    }
};
export {
    mutableBufferEffect
};
export {
    concat,
    concat$prime,
    copy,
    create,
    fill,
    freeze,
    fromArray,
    fromArrayBuffer,
    fromString,
    getAtOffset,
    read,
    readString,
    setAtOffset,
    size,
    slice,
    thaw,
    toArray,
    toArrayBuffer,
    toString,
    unsafeFreeze,
    unsafeThaw,
    write,
    writeString
} from "../Node.Buffer.Class/index.js";
export {
    DoubleBE,
    DoubleLE,
    FloatBE,
    FloatLE,
    Int16BE,
    Int16LE,
    Int32BE,
    Int32LE,
    Int8,
    UInt16BE,
    UInt16LE,
    UInt32BE,
    UInt32LE,
    UInt8
} from "../Node.Buffer.Types/index.js";
//# sourceMappingURL=index.js.map
