{"comments":"Implementation of the `Manifest` data type representing a `purs.json` file,\nas described in the registry spec. Every package in the registry contains\na manifest file in the root of the package tarball. Manifests contain\ncritical package information such as the package name, version, license,\ndependencies, and more.\nhttps://github.com/purescript/registry-dev/blob/master/SPEC.md#manifest\n\nThere is also a Dhall spec for this data type:\nhttps://github.com/purescript/registry-dev/blob/master/specs/v1/Manifest.dhall\n\nPackage manifests can be found in the tarball for each package, and they\nare also cached in the registry index:\nhttps://github.com/purescript/registry-index\n","declarations":[{"children":[{"comments":null,"info":{"arguments":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Record"],"tag":"TypeConstructor"},{"annotation":[],"contents":["name",{"annotation":[],"contents":[["Registry","PackageName"],"PackageName"],"tag":"TypeConstructor"},{"annotation":[],"contents":["version",{"annotation":[],"contents":[["Registry","Version"],"Version"],"tag":"TypeConstructor"},{"annotation":[],"contents":["license",{"annotation":[],"contents":[["Registry","License"],"License"],"tag":"TypeConstructor"},{"annotation":[],"contents":["location",{"annotation":[],"contents":[["Registry","Location"],"Location"],"tag":"TypeConstructor"},{"annotation":[],"contents":["owners",{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","Owner"],"Owner"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":["description",{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":["files",{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Array","NonEmpty","Internal"],"NonEmptyArray"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","NonEmpty","Internal"],"NonEmptyString"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":["dependencies",{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Map","Internal"],"Map"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","PackageName"],"PackageName"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Registry","Range"],"Range"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"tag":"REmpty"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"RCons"}],"tag":"TypeApp"}],"declType":"dataConstructor"},"sourceSpan":{"end":[57,4],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/Manifest.purs","start":[48,18]},"title":"Manifest"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Newtype"],"Newtype"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","Manifest"],"Manifest"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":null,"tag":"TypeWildcard"}],"tag":"TypeApp"}},"sourceSpan":{"end":[59,35],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/Manifest.purs","start":[59,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Eq"],"Eq"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","Manifest"],"Manifest"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[60,28],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/Manifest.purs","start":[60,1]},"title":"<anonymous>"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Ord"],"Ord"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","Manifest"],"Manifest"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[69,6],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/Manifest.purs","start":[65,1]},"title":"<anonymous>"}],"comments":"The manifest for a package version, which records critical information for\nthe registry, pursuit, and package managers to use.\n","info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[57,4],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/Manifest.purs","start":[48,1]},"title":"Manifest"},{"children":[],"comments":"A codec for encoding and decoding a `Manifest` as JSON. Represented as a\nJSON object. The implementation uses explicitly ordered keys instead of\nrecord sugar.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Codec","Argonaut"],"JsonCodec"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Registry","Manifest"],"Manifest"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[74,28],"name":".spago/packages/registry-lib/7e1f67d1205d68d7f22d9d55d25ba2354dfbb14e/lib/src/Manifest.purs","start":[74,1]},"title":"codec"}],"name":"Registry.Manifest","reExports":[]}