// Generated by purs version 0.15.10
import * as Control_Category from "../Control.Category/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Record from "../Record/index.js";
import * as Record_Builder from "../Record.Builder/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
var merge = /* #__PURE__ */ Record.merge()();
var identity = /* #__PURE__ */ Control_Category.identity(Record_Builder.categoryBuilder);
var compose1 = /* #__PURE__ */ Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder);
var insert = /* #__PURE__ */ Record_Builder.insert()();
var defaultsRecord = function () {
    return function () {
        return {
            defaults: Data_Function.flip(merge)
        };
    };
};
var defaults = function (dict) {
    return dict.defaults;
};
var convertRecordOptionsNil = {
    convertRecordOptions: function (v) {
        return function (v1) {
            return function (v2) {
                return identity;
            };
        };
    }
};
var convertRecordOptions = function (dict) {
    return dict.convertRecordOptions;
};
var convertOptionsWithDefaults = function (dict) {
    return dict.convertOptionsWithDefaults;
};
var convertOptionsRecord = function () {
    return function (dictConvertRecordOptions) {
        var convertRecordOptions1 = convertRecordOptions(dictConvertRecordOptions);
        return {
            convertOptions: function (t) {
                return function (i) {
                    return Record_Builder.buildFromScratch(convertRecordOptions1(t)(Type_Proxy["Proxy"].value)(i));
                };
            }
        };
    };
};
var convertOptions = function (dict) {
    return dict.convertOptions;
};
var convertOptionsWithDefaultsRecord = function (dictConvertOptions) {
    var convertOptions1 = convertOptions(dictConvertOptions);
    return function (dictDefaults) {
        var defaults1 = defaults(dictDefaults);
        return {
            convertOptionsWithDefaults: function (t) {
                return function (def) {
                    var $30 = defaults1(def);
                    var $31 = convertOptions1(t);
                    return function ($32) {
                        return $30($31($32));
                    };
                };
            }
        };
    };
};
var convertOption = function (dict) {
    return dict.convertOption;
};
var convertRecordOptionsCons = function (dictConvertRecordOptions) {
    var convertRecordOptions1 = convertRecordOptions(dictConvertRecordOptions);
    return function (dictConvertOption) {
        var convertOption1 = convertOption(dictConvertOption);
        return function () {
            return function () {
                return function () {
                    return function (dictIsSymbol) {
                        var insert1 = insert(dictIsSymbol);
                        var get = Record.get(dictIsSymbol)();
                        return {
                            convertRecordOptions: function (t) {
                                return function (v) {
                                    return function (r) {
                                        return compose1(insert1(Type_Proxy["Proxy"].value)(convertOption1(t)(Type_Proxy["Proxy"].value)(get(Type_Proxy["Proxy"].value)(r))))(convertRecordOptions1(t)(Type_Proxy["Proxy"].value)(r));
                                    };
                                };
                            }
                        };
                    };
                };
            };
        };
    };
};
export {
    convertOption,
    convertOptions,
    convertOptionsWithDefaults,
    convertRecordOptions,
    defaults,
    convertOptionsWithDefaultsRecord,
    convertRecordOptionsNil,
    convertRecordOptionsCons,
    convertOptionsRecord,
    defaultsRecord
};
//# sourceMappingURL=index.js.map
