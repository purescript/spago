// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_State_Class from "../Control.Monad.State.Class/index.js";
import * as Control_Monad_State_Trans from "../Control.Monad.State.Trans/index.js";
import * as Control_Monad_Writer_Trans from "../Control.Monad.Writer.Trans/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_String_Regex from "../Data.String.Regex/index.js";
import * as Data_String_Regex_Unsafe from "../Data.String.Regex.Unsafe/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Exception from "../Effect.Exception/index.js";
import * as Test_Spec_Console from "../Test.Spec.Console/index.js";
import * as Test_Spec_Reporter_Base from "../Test.Spec.Reporter.Base/index.js";
import * as Test_Spec_Result from "../Test.Spec.Result/index.js";
import * as Test_Spec_Runner_Event from "../Test.Spec.Runner.Event/index.js";
import * as Test_Spec_Summary from "../Test.Spec.Summary/index.js";
var tellLn = /* #__PURE__ */ Test_Spec_Console.tellLn(/* #__PURE__ */ Control_Monad_State_Trans.monadWriterStateT(/* #__PURE__ */ Control_Monad_Writer_Trans.monadWriterWriterT(Data_Monoid.monoidString)(Data_Identity.monadIdentity)));
var append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupString);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var monadWriterT = /* #__PURE__ */ Control_Monad_Writer_Trans.monadWriterT(Data_Monoid.monoidString)(Data_Identity.monadIdentity);
var bindStateT = /* #__PURE__ */ Control_Monad_State_Trans.bindStateT(monadWriterT);
var bind = /* #__PURE__ */ Control_Bind.bind(bindStateT);
var monadStateStateT = /* #__PURE__ */ Control_Monad_State_Trans.monadStateStateT(monadWriterT);
var get = /* #__PURE__ */ Control_Monad_State_Class.get(monadStateStateT);
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(bindStateT);
var modify_ = /* #__PURE__ */ Control_Monad_State_Class.modify_(monadStateStateT);
var pure = /* #__PURE__ */ Control_Applicative.pure(/* #__PURE__ */ Control_Monad_State_Trans.applicativeStateT(monadWriterT));
var map = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var escTitle = /* #__PURE__ */ (function () {
    var rex = Data_String_Regex_Unsafe.unsafeRegex("#")(Data_String_Regex.parseFlags("g"));
    return Data_String_Regex.replace(rex)("");
})();
var escMsg = /* #__PURE__ */ (function () {
    var rex = Data_String_Regex_Unsafe.unsafeRegex("^")(Data_String_Regex.parseFlags("gm"));
    return Data_String_Regex.replace(rex)("  ");
})();
var tapReporter = /* #__PURE__ */ Test_Spec_Reporter_Base.defaultReporter(1)(function (v) {
    if (v instanceof Test_Spec_Runner_Event.Start) {
        return tellLn("1.." + show(v.value0));
    };
    if (v instanceof Test_Spec_Runner_Event.Pending) {
        return bind(get)(function (n) {
            return discard(tellLn("ok " + (show(n) + (" " + (escTitle(v.value1) + " # SKIP -")))))(function () {
                return modify_(function (v1) {
                    return v1 + 1 | 0;
                });
            });
        });
    };
    if (v instanceof Test_Spec_Runner_Event.TestEnd && v.value2 instanceof Test_Spec_Result.Success) {
        return bind(get)(function (n) {
            return discard(tellLn("ok " + (show(n) + (" " + escTitle(v.value1)))))(function () {
                return modify_(function (v1) {
                    return v1 + 1 | 0;
                });
            });
        });
    };
    if (v instanceof Test_Spec_Runner_Event.TestEnd && v.value2 instanceof Test_Spec_Result.Failure) {
        return bind(get)(function (n) {
            return discard(tellLn("not ok " + (show(n) + (" " + escTitle(v.value1)))))(function () {
                return discard(tellLn(escMsg(Effect_Exception.message(v.value2.value0))))(function () {
                    return discard((function () {
                        var v1 = Effect_Exception.stack(v.value2.value0);
                        if (v1 instanceof Data_Maybe.Nothing) {
                            return pure(Data_Unit.unit);
                        };
                        if (v1 instanceof Data_Maybe.Just) {
                            return tellLn(Data_String_Common.joinWith("\x0a")(map(append("    "))(Data_String_Common.split("\x0a")(v1.value0))));
                        };
                        throw new Error("Failed pattern match at Test.Spec.Reporter.Tap (line 37, column 5 - line 39, column 82): " + [ v1.constructor.name ]);
                    })())(function () {
                        return modify_(function (v1) {
                            return v1 + 1 | 0;
                        });
                    });
                });
            });
        });
    };
    if (v instanceof Test_Spec_Runner_Event.End) {
        var v1 = Test_Spec_Summary.summarize(v.value0);
        return discard(tellLn("# tests " + show((v1.failed + v1.passed | 0) + v1.pending | 0)))(function () {
            return discard(tellLn("# pass " + show(v1.passed + v1.pending | 0)))(function () {
                return tellLn("# fail " + show(v1.failed));
            });
        });
    };
    return pure(Data_Unit.unit);
});
export {
    tapReporter
};
//# sourceMappingURL=index.js.map
