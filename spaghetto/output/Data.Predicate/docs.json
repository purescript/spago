{"comments":null,"declarations":[{"children":[{"comments":null,"info":{"arguments":[{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[9,47],"name":".spago/packages/contravariant-6.0.0/src/Data/Predicate.purs","start":[9,21]},"title":"Predicate"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Newtype"],"Newtype"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Predicate"],"Predicate"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":null,"tag":"TypeWildcard"}],"tag":"TypeApp"}},"sourceSpan":{"end":[11,60],"name":".spago/packages/contravariant-6.0.0/src/Data/Predicate.purs","start":[11,1]},"title":"newtypePredicate"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","HeytingAlgebra"],"HeytingAlgebra"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Predicate"],"Predicate"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[13,80],"name":".spago/packages/contravariant-6.0.0/src/Data/Predicate.purs","start":[13,1]},"title":"heytingAlgebraPredicate"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","BooleanAlgebra"],"BooleanAlgebra"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Predicate"],"Predicate"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[15,80],"name":".spago/packages/contravariant-6.0.0/src/Data/Predicate.purs","start":[15,1]},"title":"booleanAlgebraPredicate"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Functor","Contravariant"],"Contravariant"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","Predicate"],"Predicate"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[18,45],"name":".spago/packages/contravariant-6.0.0/src/Data/Predicate.purs","start":[17,1]},"title":"contravariantPredicate"}],"comments":"An adaptor allowing `>$<` to map over the inputs of a predicate.\n","info":{"dataDeclType":"newtype","declType":"data","roles":["Representational"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[9,47],"name":".spago/packages/contravariant-6.0.0/src/Data/Predicate.purs","start":[9,1]},"title":"Predicate"}],"name":"Data.Predicate","reExports":[]}