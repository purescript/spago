// Generated by purs version 0.15.10
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Test_Prelude from "../Test.Prelude/index.js";
import * as Test_Spec from "../Test.Spec/index.js";
var discard = /* #__PURE__ */ Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff);
var bind = /* #__PURE__ */ Control_Bind.bind(Effect_Aff.bindAff);
var spec = /* #__PURE__ */ Test_Spec.around(Data_Identity.monadIdentity)(Test_Prelude.withTempDir)(/* #__PURE__ */ Test_Spec.describe(Data_Identity.monadIdentity)("install")(/* #__PURE__ */ Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleFunc)("Spago should warn that config was not changed, when trying to install package already present in project dependencies")(function (v) {
    return discard(bind(v.spago([ "init" ]))(Test_Prelude.shouldBeSuccess))(function () {
        return discard(bind(v.spago([ "install" ]))(Test_Prelude.shouldBeSuccess))(function () {
            return bind(v.spago([ "fetch", "effect" ]))(Test_Prelude.shouldBeSuccessErr(v.fixture("spago-install-existing-dep-stderr.txt")));
        });
    });
})));
export {
    spec
};
//# sourceMappingURL=index.js.map
