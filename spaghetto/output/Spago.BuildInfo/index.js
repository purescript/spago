// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Reader_Class from "../Control.Monad.Reader.Class/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Node_Path from "../Node.Path/index.js";
import * as Registry_PackageName from "../Registry.PackageName/index.js";
import * as Registry_Version from "../Registry.Version/index.js";
import * as Spago_Config from "../Spago.Config/index.js";
import * as Spago_Core_Prelude from "../Spago.Core.Prelude/index.js";
import * as Spago_FS from "../Spago.FS/index.js";
import * as Spago_Generated_BuildInfo from "../Spago.Generated.BuildInfo/index.js";
import * as Spago_Paths from "../Spago.Paths/index.js";
var map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var bind = /* #__PURE__ */ Control_Bind.bind(Spago_Core_Prelude.bindSpago);
var writeTextFile = /* #__PURE__ */ Spago_FS.writeTextFile(Spago_Core_Prelude.monadAffSpago);
var exists = /* #__PURE__ */ Spago_FS.exists(Spago_Core_Prelude.monadEffectSpago);
var readTextFile = /* #__PURE__ */ Spago_FS.readTextFile(Spago_Core_Prelude.monadAffSpago);
var when = /* #__PURE__ */ Control_Applicative.when(Spago_Core_Prelude.applicativeSpago);
var mkPackageBuildInfo = function (v) {
    return {
        name: Registry_PackageName.print(v["package"].name),
        version: Data_Maybe.fromMaybe("0.0.0")(map(Registry_Version.print)(map(function (v1) {
            return v1.version;
        })(v["package"].publish)))
    };
};
var currentSpagoVersion = /* #__PURE__ */ (function () {
    return Data_Maybe.fromMaybe("0.0.0")(map(function (v) {
        return v.version;
    })(Data_Array.head(Spago_Generated_BuildInfo.buildInfo.packages)));
})();
var mkBuildInfo = function (v) {
    var renderPackage = function (p) {
        return "{ name: \"" + (p.name + ("\", version: \"" + (p.version + "\"}")));
    };
    return Data_String_Common.joinWith("\x0a")([ "module Spago.Generated.BuildInfo where", "", "buildInfo :: { packages :: Array { name :: String, version :: String }, pursVersion :: String, spagoVersion :: String }", "buildInfo =", "  { packages: [" + (Data_String_Common.joinWith(", ")(map1(renderPackage)(v.packages)) + "]"), "  , pursVersion: \"" + (v.pursVersion + "\""), "  , spagoVersion: \"" + (currentSpagoVersion + "\""), "  }", "" ]);
};
var buildInfoPath = /* #__PURE__ */ Node_Path.concat([ Spago_Paths.localCachePath, "BuildInfo.purs" ]);
var writeBuildInfo = /* #__PURE__ */ bind(/* #__PURE__ */ Control_Monad_Reader_Class.ask(Spago_Core_Prelude.monadAskSpago))(function (v) {
    var buildInfo = {
        pursVersion: Registry_Version.print(v.purs.version),
        packages: map1(mkPackageBuildInfo)((function () {
            if (v.workspace.selected instanceof Data_Maybe.Just) {
                return [ v.workspace.selected.value0 ];
            };
            if (v.workspace.selected instanceof Data_Maybe.Nothing) {
                return Spago_Config.getWorkspacePackages(v.workspace.packageSet);
            };
            throw new Error("Failed pattern match at Spago.BuildInfo (line 42, column 42 - line 44, column 70): " + [ v.workspace.selected.constructor.name ]);
        })())
    };
    var buildInfoString = mkBuildInfo(buildInfo);
    var writeIt = writeTextFile(buildInfoPath)(buildInfoString);
    return bind(exists(buildInfoPath))(function (v1) {
        if (!v1) {
            return writeIt;
        };
        if (v1) {
            return bind(readTextFile(buildInfoPath))(function (currentContent) {
                return when(currentContent !== buildInfoString)(writeIt);
            });
        };
        throw new Error("Failed pattern match at Spago.BuildInfo (line 49, column 31 - line 54, column 16): " + [ v1.constructor.name ]);
    });
});
export {
    writeBuildInfo,
    mkBuildInfo,
    buildInfoPath,
    currentSpagoVersion,
    mkPackageBuildInfo
};
