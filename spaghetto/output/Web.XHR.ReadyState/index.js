// Generated by purs version 0.15.10
import * as Data_Enum from "../Data.Enum/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Ordering from "../Data.Ordering/index.js";
var Unsent = /* #__PURE__ */ (function () {
    function Unsent() {

    };
    Unsent.value = new Unsent();
    return Unsent;
})();
var Opened = /* #__PURE__ */ (function () {
    function Opened() {

    };
    Opened.value = new Opened();
    return Opened;
})();
var HeadersReceived = /* #__PURE__ */ (function () {
    function HeadersReceived() {

    };
    HeadersReceived.value = new HeadersReceived();
    return HeadersReceived;
})();
var Loading = /* #__PURE__ */ (function () {
    function Loading() {

    };
    Loading.value = new Loading();
    return Loading;
})();
var Done = /* #__PURE__ */ (function () {
    function Done() {

    };
    Done.value = new Done();
    return Done;
})();
var toEnum = function (v) {
    if (v === 0) {
        return new Data_Maybe.Just(Unsent.value);
    };
    if (v === 1) {
        return new Data_Maybe.Just(Opened.value);
    };
    if (v === 2) {
        return new Data_Maybe.Just(HeadersReceived.value);
    };
    if (v === 3) {
        return new Data_Maybe.Just(Loading.value);
    };
    if (v === 4) {
        return new Data_Maybe.Just(Done.value);
    };
    return Data_Maybe.Nothing.value;
};
var fromEnum = function (v) {
    if (v instanceof Unsent) {
        return 0;
    };
    if (v instanceof Opened) {
        return 1;
    };
    if (v instanceof HeadersReceived) {
        return 2;
    };
    if (v instanceof Loading) {
        return 3;
    };
    if (v instanceof Done) {
        return 4;
    };
    throw new Error("Failed pattern match at Web.XHR.ReadyState (line 41, column 12 - line 46, column 12): " + [ v.constructor.name ]);
};
var eqReadyState = {
    eq: function (x) {
        return function (y) {
            if (x instanceof Unsent && y instanceof Unsent) {
                return true;
            };
            if (x instanceof Opened && y instanceof Opened) {
                return true;
            };
            if (x instanceof HeadersReceived && y instanceof HeadersReceived) {
                return true;
            };
            if (x instanceof Loading && y instanceof Loading) {
                return true;
            };
            if (x instanceof Done && y instanceof Done) {
                return true;
            };
            return false;
        };
    }
};
var ordReadyState = {
    compare: function (x) {
        return function (y) {
            if (x instanceof Unsent && y instanceof Unsent) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Unsent) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Unsent) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Opened && y instanceof Opened) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Opened) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Opened) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof HeadersReceived && y instanceof HeadersReceived) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof HeadersReceived) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof HeadersReceived) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Loading && y instanceof Loading) {
                return Data_Ordering.EQ.value;
            };
            if (x instanceof Loading) {
                return Data_Ordering.LT.value;
            };
            if (y instanceof Loading) {
                return Data_Ordering.GT.value;
            };
            if (x instanceof Done && y instanceof Done) {
                return Data_Ordering.EQ.value;
            };
            throw new Error("Failed pattern match at Web.XHR.ReadyState (line 0, column 0 - line 0, column 0): " + [ x.constructor.name, y.constructor.name ]);
        };
    },
    Eq0: function () {
        return eqReadyState;
    }
};
var enumReadyState = {
    succ: /* #__PURE__ */ Data_Enum.defaultSucc(toEnum)(fromEnum),
    pred: /* #__PURE__ */ Data_Enum.defaultPred(toEnum)(fromEnum),
    Ord0: function () {
        return ordReadyState;
    }
};
var boundedReadyState = /* #__PURE__ */ (function () {
    return {
        bottom: Unsent.value,
        top: Done.value,
        Ord0: function () {
            return ordReadyState;
        }
    };
})();
var boundedEnumReadyState = {
    cardinality: 5,
    toEnum: toEnum,
    fromEnum: fromEnum,
    Bounded0: function () {
        return boundedReadyState;
    },
    Enum1: function () {
        return enumReadyState;
    }
};
export {
    Unsent,
    Opened,
    HeadersReceived,
    Loading,
    Done,
    toEnum,
    fromEnum,
    eqReadyState,
    ordReadyState,
    boundedReadyState,
    enumReadyState,
    boundedEnumReadyState
};
//# sourceMappingURL=index.js.map
