// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Data_Codec_Argonaut from "../Data.Codec.Argonaut/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_Map_Internal from "../Data.Map.Internal/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect_Aff from "../Effect.Aff/index.js";
import * as Registry_PackageName from "../Registry.PackageName/index.js";
import * as Registry_Range from "../Registry.Range/index.js";
import * as Registry_Sha256 from "../Registry.Sha256/index.js";
import * as Registry_Version from "../Registry.Version/index.js";
import * as Spago_Core_Config from "../Spago.Core.Config/index.js";
import * as Spago_Lock from "../Spago.Lock/index.js";
import * as Spago_Prelude from "../Spago.Prelude/index.js";
import * as Spago_Yaml from "../Spago.Yaml/index.js";
import * as Test_Spec from "../Test.Spec/index.js";
import * as Test_Spec_Assertions from "../Test.Spec.Assertions/index.js";
var fromFoldable = /* #__PURE__ */ Data_Map_Internal.fromFoldable(Registry_PackageName.ordPackageName)(Data_Foldable.foldableArray);
var fail = /* #__PURE__ */ Test_Spec_Assertions.fail(Effect_Aff.monadThrowAff);
var eqRec = /* #__PURE__ */ Data_Eq.eqRec();
var eqRowCons = /* #__PURE__ */ Data_Eq.eqRowCons(Data_Eq.eqRowNil)();
var packagesIsSymbol = {
    reflectSymbol: function () {
        return "packages";
    }
};
var eqMap = /* #__PURE__ */ Data_Map_Internal.eqMap(Registry_PackageName.eqPackageName);
var validLockfileString = "\x0aworkspace:\x0a  packages:\x0a    my-app:\x0a      path: my-app\x0a      dependencies:\x0a        - effect: \">=1.0.0 <5.0.0\"\x0a        - my-library\x0a      test_dependencies: []\x0a\x0a    my-library:\x0a      path: my-library\x0a      dependencies:\x0a        - prelude\x0a      test_dependencies:\x0a        - console: \"*\"\x0a\x0a  package_set:\x0a    registry: 22.1.1\x0a\x0a  extra_packages:\x0a    console:\x0a      git: https://github.com/purescript/purescript-console.git\x0a      ref: v1.0.0\x0a\x0a    prelude:\x0a      git: https://github.com/purescript/purescript-libraries.git\x0a      ref: v1.0.0\x0a      subdir: prelude\x0a\x0apackages:\x0a  console:\x0a    type: git\x0a    url: https://github.com/purescript/purescript-console.git\x0a    rev: 3b83d7b792d03872afeea5e62b4f686ab0f09842\x0a    dependencies:\x0a      - prelude\x0a  effect:\x0a    type: registry\x0a    version: 4.0.0\x0a    integrity: sha256-eBtZu+HZcMa5HilvI6kaDyVX3ji8p0W9MGKy2K4T6+M=\x0a    dependencies:\x0a      - prelude\x0a  prelude:\x0a    type: git\x0a    url: https://github.com/purescript/purescript-libraries.git\x0a    rev: 3b83d7b792d03872afeea5e62b4f686ab0f09842\x0a    subdir: prelude\x0a    dependencies: []\x0a  ";
var validLockfile = /* #__PURE__ */ (function () {
    var prelude = Spago_Prelude.unsafeFromRight(Registry_PackageName.parse("prelude"));
    var packageTuple = function (name) {
        return Data_Tuple.Tuple.create(Spago_Prelude.unsafeFromRight(Registry_PackageName.parse(name)));
    };
    return {
        workspace: {
            packages: fromFoldable([ packageTuple("my-app")({
                dependencies: fromFoldable([ packageTuple("effect")(new Data_Maybe.Just(Spago_Prelude.unsafeFromRight(Registry_Range.parse(">=1.0.0 <5.0.0")))), packageTuple("my-library")(Data_Maybe.Nothing.value) ]),
                test_dependencies: Data_Map_Internal.empty,
                path: "my-app"
            }), packageTuple("my-library")({
                dependencies: fromFoldable([ packageTuple("prelude")(Data_Maybe.Nothing.value) ]),
                test_dependencies: fromFoldable([ packageTuple("console")(new Data_Maybe.Just(Spago_Core_Config.widestRange)) ]),
                path: "my-library"
            }) ]),
            package_set: new Data_Maybe.Just(new Spago_Core_Config.SetFromRegistry({
                registry: Spago_Prelude.unsafeFromRight(Registry_Version.parse("22.1.1"))
            })),
            extra_packages: fromFoldable([ packageTuple("console")(new Spago_Core_Config.ExtraRemotePackage(new Spago_Core_Config.RemoteGitPackage({
                git: "https://github.com/purescript/purescript-console.git",
                ref: "v1.0.0",
                dependencies: Data_Maybe.Nothing.value,
                subdir: Data_Maybe.Nothing.value
            }))), packageTuple("prelude")(new Spago_Core_Config.ExtraRemotePackage(new Spago_Core_Config.RemoteGitPackage({
                git: "https://github.com/purescript/purescript-libraries.git",
                ref: "v1.0.0",
                dependencies: Data_Maybe.Nothing.value,
                subdir: new Data_Maybe.Just("prelude")
            }))) ])
        },
        packages: fromFoldable([ packageTuple("console")(new Spago_Lock.FromGit({
            url: "https://github.com/purescript/purescript-console.git",
            rev: "3b83d7b792d03872afeea5e62b4f686ab0f09842",
            subdir: Data_Maybe.Nothing.value,
            dependencies: [ prelude ]
        })), packageTuple("effect")(new Spago_Lock.FromRegistry({
            version: Spago_Prelude.unsafeFromRight(Registry_Version.parse("4.0.0")),
            integrity: Spago_Prelude.unsafeFromRight(Registry_Sha256.parse("sha256-eBtZu+HZcMa5HilvI6kaDyVX3ji8p0W9MGKy2K4T6+M=")),
            dependencies: [ prelude ]
        })), packageTuple("prelude")(new Spago_Lock.FromGit({
            url: "https://github.com/purescript/purescript-libraries.git",
            rev: "3b83d7b792d03872afeea5e62b4f686ab0f09842",
            subdir: new Data_Maybe.Just("prelude"),
            dependencies: [  ]
        })) ])
    };
})();
var spec = /* #__PURE__ */ Test_Spec.it(Data_Identity.monadIdentity)(Test_Spec.exampleMUnit)("parses lockfile")(/* #__PURE__ */ (function () {
    var v = Spago_Yaml.parseYaml(Spago_Lock.lockfileCodec)(validLockfileString);
    if (v instanceof Data_Either.Left) {
        return fail("Failed to parse: " + Data_Codec_Argonaut.printJsonDecodeError(v.value0));
    };
    if (v instanceof Data_Either.Right && Data_Eq.notEq(eqRec(Data_Eq.eqRowCons(eqRowCons({
        reflectSymbol: function () {
            return "workspace";
        }
    })(eqRec(Data_Eq.eqRowCons(Data_Eq.eqRowCons(eqRowCons(packagesIsSymbol)(eqMap(eqRec(Data_Eq.eqRowCons(Data_Eq.eqRowCons(eqRowCons({
        reflectSymbol: function () {
            return "test_dependencies";
        }
    })(Spago_Core_Config.eqDependencies))()({
        reflectSymbol: function () {
            return "path";
        }
    })(Data_Eq.eqString))()({
        reflectSymbol: function () {
            return "dependencies";
        }
    })(Spago_Core_Config.eqDependencies)))))()({
        reflectSymbol: function () {
            return "package_set";
        }
    })(Data_Maybe.eqMaybe(Spago_Core_Config.eqSetAddress)))()({
        reflectSymbol: function () {
            return "extra_packages";
        }
    })(eqMap(Spago_Core_Config.eqExtraPackage)))))()(packagesIsSymbol)(eqMap(Spago_Lock.eqLockEntry))))(v.value0)(validLockfile)) {
        return fail("\x0a" + (Spago_Yaml.printYaml(Spago_Lock.lockfileCodec)(v.value0) + ("\x0adoes not equal\x0a\x0a" + Spago_Yaml.printYaml(Spago_Lock.lockfileCodec)(validLockfile))));
    };
    if (v instanceof Data_Either.Right) {
        return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit);
    };
    throw new Error("Failed pattern match at Test.Spago.Lock (line 22, column 5 - line 28, column 18): " + [ v.constructor.name ]);
})());
export {
    spec,
    validLockfile,
    validLockfileString
};
//# sourceMappingURL=index.js.map
