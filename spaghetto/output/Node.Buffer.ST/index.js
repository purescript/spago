// Generated by purs version 0.15.10
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_ST_Internal from "../Control.Monad.ST.Internal/index.js";
import * as Node_Buffer_Class from "../Node.Buffer.Class/index.js";
import * as Node_Buffer_Internal from "../Node.Buffer.Internal/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Control_Monad_ST_Internal.bindST);
var mutableBufferST = {
    create: /* #__PURE__ */ Node_Buffer_Internal.create(Control_Monad_ST_Internal.monadST),
    freeze: Node_Buffer_Internal.copyAll,
    unsafeFreeze: /* #__PURE__ */ Node_Buffer_Internal.unsafeFreeze(Control_Monad_ST_Internal.monadST),
    thaw: Node_Buffer_Internal.copyAll,
    unsafeThaw: /* #__PURE__ */ Node_Buffer_Internal.unsafeThaw(Control_Monad_ST_Internal.monadST),
    fromArray: /* #__PURE__ */ Node_Buffer_Internal.fromArray(Control_Monad_ST_Internal.monadST),
    fromString: /* #__PURE__ */ Node_Buffer_Internal.fromString(Control_Monad_ST_Internal.monadST),
    fromArrayBuffer: /* #__PURE__ */ Node_Buffer_Internal.fromArrayBuffer(Control_Monad_ST_Internal.monadST),
    toArrayBuffer: /* #__PURE__ */ Node_Buffer_Internal.toArrayBuffer(Control_Monad_ST_Internal.monadST),
    read: /* #__PURE__ */ Node_Buffer_Internal.read(Control_Monad_ST_Internal.monadST),
    readString: /* #__PURE__ */ Node_Buffer_Internal.readString(Control_Monad_ST_Internal.monadST),
    toString: /* #__PURE__ */ Node_Buffer_Internal.toString(Control_Monad_ST_Internal.monadST),
    write: /* #__PURE__ */ Node_Buffer_Internal.write(Control_Monad_ST_Internal.monadST),
    writeString: /* #__PURE__ */ Node_Buffer_Internal.writeString(Control_Monad_ST_Internal.monadST),
    toArray: /* #__PURE__ */ Node_Buffer_Internal.toArray(Control_Monad_ST_Internal.monadST),
    getAtOffset: /* #__PURE__ */ Node_Buffer_Internal.getAtOffset(Control_Monad_ST_Internal.monadST),
    setAtOffset: Node_Buffer_Internal.setAtOffset,
    slice: Node_Buffer_Internal.slice,
    size: /* #__PURE__ */ Node_Buffer_Internal.size(Control_Monad_ST_Internal.monadST),
    concat: Node_Buffer_Internal.concat,
    "concat'": /* #__PURE__ */ Node_Buffer_Internal["concat$prime"](Control_Monad_ST_Internal.monadST),
    copy: Node_Buffer_Internal.copy,
    fill: Node_Buffer_Internal.fill,
    Monad0: function () {
        return Control_Monad_ST_Internal.monadST;
    }
};
var unsafeFreeze = /* #__PURE__ */ Node_Buffer_Class.unsafeFreeze(mutableBufferST);
var run = function (st) {
    return bind(st)(unsafeFreeze)();
};
export {
    run,
    mutableBufferST
};
//# sourceMappingURL=index.js.map
