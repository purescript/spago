// Generated by purs version 0.15.10
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Char from "../Data.Char/index.js";
import * as Data_Int from "../Data.Int/index.js";
import * as Data_String_CodePoints from "../Data.String.CodePoints/index.js";
import * as Node_Buffer_Class from "../Node.Buffer.Class/index.js";
import * as Node_Buffer_Internal from "../Node.Buffer.Internal/index.js";
import * as Node_Buffer_Types from "../Node.Buffer.Types/index.js";
var stripFinalNewlineBuf = function (dictMutableBuffer) {
    var Monad0 = dictMutableBuffer.Monad0();
    var bind = Control_Bind.bind(Monad0.Bind1());
    var size = Node_Buffer_Internal.size(Monad0);
    var unsafeFreeze = Node_Buffer_Class.unsafeFreeze(dictMutableBuffer);
    var read = Node_Buffer_Internal.read(Monad0);
    var slice = Node_Buffer_Class.slice(dictMutableBuffer);
    return function (b) {
        var charR = Data_Int.toNumber(Data_Char.toCharCode("\x0d"));
        var charN = Data_Int.toNumber(Data_Char.toCharCode("\x0a"));
        return bind(size(b))(function (len) {
            if (len === 0) {
                return unsafeFreeze(b);
            };
            if (len === 1) {
                return bind(read(Node_Buffer_Types.UInt8.value)(len - 1 | 0)(b))(function (lastChar) {
                    var $15 = lastChar === charN || lastChar === charR;
                    if ($15) {
                        return unsafeFreeze(slice(0)(len - 1 | 0)(b));
                    };
                    return unsafeFreeze(b);
                });
            };
            return bind(read(Node_Buffer_Types.UInt8.value)(len - 1 | 0)(b))(function (lastChar) {
                return bind(read(Node_Buffer_Types.UInt8.value)(len - 2 | 0)(b))(function (sndLastChar) {
                    var $16 = lastChar === charN && sndLastChar === charR;
                    if ($16) {
                        return unsafeFreeze(slice(0)(len - 2 | 0)(b));
                    };
                    var $17 = lastChar === charN || lastChar === charR;
                    if ($17) {
                        return unsafeFreeze(slice(0)(len - 1 | 0)(b));
                    };
                    return unsafeFreeze(b);
                });
            });
        });
    };
};
var stripFinalNewline = function (s) {
    var v = Data_String_CodePoints.splitAt(Data_String_CodePoints.length(s) - 1 | 0)(s);
    if (v.after === "\x0a") {
        var v1 = Data_String_CodePoints.splitAt(Data_String_CodePoints.length(v.before) - 1 | 0)(v.before);
        if (v1.after === "\x0d") {
            return v1.before;
        };
        return v.before;
    };
    if (v.after === "\x0d") {
        return v.before;
    };
    return s;
};
export {
    stripFinalNewline,
    stripFinalNewlineBuf
};
//# sourceMappingURL=index.js.map
