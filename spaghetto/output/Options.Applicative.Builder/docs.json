{"comments":"This module contains utility functions and combinators to create parsers\nfor individual options.\n\nEach parser builder takes an option modifier. A modifier can be created by\ncomposing the basic modifiers provided by this module using the 'Monoid'\noperations 'mempty' and 'append', or their aliases 'idm' and '<>'.\n\nFor example:\n\n```purescript\nout = strOption\n    ( long \"output\"\n   <> short 'o'\n   <> metavar \"FILENAME\" )\n```\n\ncreates a parser for an option called `output`.\n","declarations":[{"children":[],"comments":"Builder for a command parser. The 'command' modifier can be used to\nspecify individual commands.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"CommandFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[271,55],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[271,1]},"title":"subparser"},{"children":[],"comments":"Builder for a 'String' argument.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[286,58],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[286,1]},"title":"strArgument"},{"children":[],"comments":"Builder for an argument parser.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"ArgumentFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[279,66],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[279,1]},"title":"argument"},{"children":[],"comments":"Builder for a flag parser.\n\nA flag that switches from a \\\"default value\\\" to an \\\"active value\\\" when\nencountered. For a simple boolean value, use `switch` instead.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"FlagFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[301,17],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[297,1]},"title":"flag"},{"children":[],"comments":"Builder for a flag parser without a default value.\n\nSame as 'flag', but with no default value. In particular, this flag will\nnever parse successfully by itself.\n\nIt still makes sense to use it as part of a composite parser. For example\n\n> length <$> many (flag' () (short 't'))\n\nis a parser that counts the number of \"-t\" arguments on the command line,\nalternatively\n\n> flag' true (long \"on\") <|> flag' false (long \"off\")\n\nwill require the user to enter '--on' or '--off' on the command line.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"FlagFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[322,18],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[319,1]},"title":"flag'"},{"children":[],"comments":"Builder for a boolean flag.\n\n**Note**: Because this parser will never fail, it can not be used with\ncombinators such as 'some' or 'many', as these combinators continue until\na failure occurs. See @flag'@.\n\n> switch = flag false true\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"FlagFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[336,51],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[336,1]},"title":"switch"},{"children":[],"comments":"An option that always fails.\n\nWhen this option is encountered, the option parser immediately aborts with\nthe given parse error.  If you simply want to output a message, use\n'infoOption' instead.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Types"],"ParseError"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"OptionFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[344,84],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[344,1]},"title":"abortOption"},{"children":[],"comments":"An option that always fails and displays a message.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"OptionFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[351,79],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[351,1]},"title":"infoOption"},{"children":[],"comments":"Builder for an option taking a 'String' argument.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"OptionFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[355,54],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[355,1]},"title":"strOption"},{"children":[],"comments":"Builder for an option using the given reader.\n\nThis is a regular option, and should always have either a `long` or\n`short` name specified in the modifiers (or both).\n\n> nameParser = option str ( long \"name\" <> short 'n' )\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"OptionFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[365,62],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[365,1]},"title":"option"},{"children":[],"comments":"Specify a short name for an option.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasName"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Char"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[158,50],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[158,1]},"title":"short"},{"children":[],"comments":"Specify a long name for an option.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasName"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[162,51],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[162,1]},"title":"long"},{"children":[],"comments":"Specify the help text for an option.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[186,38],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[186,1]},"title":"help"},{"children":[],"comments":"Specify the help text for an option as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[191,44],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[191,1]},"title":"helpDoc"},{"children":[],"comments":"Specify a default value for an option.\n\n**Note**: Because this modifier means the parser will never fail,\ndo not use it with combinators such as 'some' or 'many', as\nthese combinators continue until a failure occurs.\nCareless use will thus result in a hang.\n\nTo display the default value, combine with `showDefault` or\n`showDefaultWith`.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasValue"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[174,48],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[174,1]},"title":"value"},{"children":[],"comments":"Show the default value for this option using a function.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[178,56],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[178,1]},"title":"showDefaultWith"},{"children":[],"comments":"Show the default value for this option using its 'Show' instance.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"a","tag":"TypeVar"}],"constraintClass":[["Data","Show"],"Show"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[182,45],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[182,1]},"title":"showDefault"},{"children":[],"comments":"Specify a metavariable for the argument.\n\nMetavariables have no effect on the actual parser, and only serve to specify\nthe symbolic name for an argument to be displayed in the help text.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasMetavar"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[202,57],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[202,1]},"title":"metavar"},{"children":[],"comments":"Specify the error to display when no argument is provided to this option.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Types"],"ParseError"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"OptionFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[195,57],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[195,1]},"title":"noArgError"},{"children":[],"comments":"Hide this option from the brief description.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[206,30],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[206,1]},"title":"hidden"},{"children":[],"comments":"Apply a function to the option description in the usage text.\n\n> import Options.Applicative.Help\n> flag' () (short 't' <> style bold)\n\n**NOTE**: This builder is more flexible than its name and example\nallude. One of the motivating examples for its addition was to\nused `const` to completely replace the usage text of an option.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[218,47],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[218,1]},"title":"style"},{"children":[],"comments":"Add a command to a subparser option.\n\nSuggested usage for multiple commands is to add them to a single subparser. e.g.\n\n```purescript\nsample :: Parser Sample\nsample = subparser\n       ( command \"hello\"\n         (info hello (progDesc \"Print greeting\"))\n      <> command \"goodbye\"\n         (info goodbye (progDesc \"Say goodbye\"))\n       )\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserInfo"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"CommandFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[235,67],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[235,1]},"title":"command"},{"children":[],"comments":"Add a description to a group of commands.\n\nAdvanced feature for separating logical groups of commands on the parse line.\n\nIf using the same `metavar` for each group of commands, it may yield a more\nattractive usage text combined with `hidden` for some groups.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"CommandFields"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[245,56],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[245,1]},"title":"commandGroup"},{"children":[],"comments":"Add a list of possible completion values.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[250,70],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[250,1]},"title":"completeWith"},{"children":[],"comments":"Add a bash completion action. Common actions include `file` and\n`directory`. See\n<http://www.gnu.org/software/bash/manual/html_node/Programmable-Completion-Builtins.html#Programmable-Completion-Builtins>\nfor a complete list.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[257,58],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[257,1]},"title":"action"},{"children":[],"comments":"Add a completer to an argument.\n\nA completer is a function `String -> Effect String` which, given a partial\nargument, returns all possible completions for that argument.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"f","kind":null,"skolem":null,"type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"f","tag":"TypeVar"}],"constraintClass":[["Options","Applicative","Builder","Internal"],"HasCompleter"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Types"],"Completer"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder","Internal"],"Mod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"f","tag":"TypeVar"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[264,64],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[264,1]},"title":"completer"},{"children":[],"comments":"Trivial option modifier.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"m","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"constraintAnn":[],"constraintArgs":[{"annotation":[],"contents":"m","tag":"TypeVar"}],"constraintClass":[["Data","Monoid"],"Monoid"],"constraintData":null,"constraintKindArgs":[]},{"annotation":[],"contents":"m","tag":"TypeVar"}],"tag":"ConstrainedType"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[520,31],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[520,1]},"title":"idm"},{"children":[],"comments":"String 'Option' reader.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[119,20],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[119,1]},"title":"str"},{"children":[],"comments":"Int 'Option' reader.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[123,17],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[123,1]},"title":"int"},{"children":[],"comments":"Number 'Option' reader.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Number"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[129,23],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[129,1]},"title":"number"},{"children":[],"comments":"Boolean 'Option' reader.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[135,25],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[135,1]},"title":"boolean"},{"children":[],"comments":"Convert a function producing a 'Maybe' into a reader.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[146,56],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[146,1]},"title":"maybeReader"},{"children":[],"comments":"Convert a function producing an 'Either' into a reader.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Either"],"Either"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[142,65],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[142,1]},"title":"eitherReader"},{"children":[],"comments":"Null 'Option' reader. All arguments will fail validation.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ReadM"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[152,30],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[152,1]},"title":"disabled"},{"children":[{"comments":null,"info":{"arguments":[{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserInfo"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserInfo"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[374,59],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[374,19]},"title":"InfoMod"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Newtype"],"Newtype"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":null,"tag":"TypeWildcard"}],"tag":"TypeApp"}},"sourceSpan":{"end":[375,56],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[375,1]},"title":"newtypeInfoMod"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Monoid"],"Monoid"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[378,28],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[377,1]},"title":"infoModMonoid"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semigroup"],"Semigroup"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"sourceSpan":{"end":[381,59],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[380,1]},"title":"infoModSemigroup"}],"comments":"Modifier for 'ParserInfo'.\n","info":{"dataDeclType":"newtype","declType":"data","roles":["Nominal"],"typeArguments":[["a",null]]},"kind":null,"sourceSpan":{"end":[374,59],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[374,1]},"title":"InfoMod"},{"children":[],"comments":"Show a full description in the help text of this parser (i.e.\noptions with the `hidden` modifier will still be displayed,\nunlike `briefDesc`).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[386,32],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[386,1]},"title":"fullDesc"},{"children":[],"comments":"Only show a brief description in the help text of this parser (i.e.\noptions with the `hidden` modifier will NOT be displayed,\nunlike `fullDesc`).\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[392,33],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[392,1]},"title":"briefDesc"},{"children":[],"comments":"Specify a header for this parser.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[396,40],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[396,1]},"title":"header"},{"children":[],"comments":"Specify a header for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[401,46],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[401,1]},"title":"headerDoc"},{"children":[],"comments":"Specify a footer for this parser.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[405,40],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[405,1]},"title":"footer"},{"children":[],"comments":"Specify a footer for this parser as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[410,46],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[410,1]},"title":"footerDoc"},{"children":[],"comments":"Specify a short program description.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[414,42],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[414,1]},"title":"progDesc"},{"children":[],"comments":"Specify a short program description as a 'Text.PrettyPrint.ANSI.Leijen.Doc'\nvalue.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Maybe"],"Maybe"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Text","PrettyPrint","Leijen"],"Doc"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[419,48],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[419,1]},"title":"progDescDoc"},{"children":[],"comments":"Specify an exit code if a parse error occurs.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["ExitCodes"],"ExitCode"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[423,47],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[423,1]},"title":"failureCode"},{"children":[],"comments":"Disable parsing of regular options after arguments. After a positional\nargument is parsed, all remaining options and arguments will be treated\nas a positional arguments. Not recommended in general as users often\nexpect to be able to freely intersperse regular options and flags within\ncommand line options.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[431,37],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[431,1]},"title":"noIntersperse"},{"children":[],"comments":"Intersperse matched options and arguments normally, but allow unmatched\noptions to be treated as positional arguments.\nThis is sometimes useful if one is wrapping a third party cli tool and\nneeds to pass options through, while also providing a handful of their\nown options. Not recommended in general as typos by the user may not\nyield a parse error and cause confusion.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[440,38],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[440,1]},"title":"forwardOptions"},{"children":[],"comments":"Create a 'ParserInfo' given a 'Parser' and a modifier.\n","info":{"declType":"value","type":{"annotation":[],"contents":{"identifier":"a","kind":null,"skolem":null,"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"Parser"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Builder"],"InfoMod"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserInfo"],"tag":"TypeConstructor"},{"annotation":[],"contents":"a","tag":"TypeVar"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"},"visibility":"TypeVarInvisible"},"tag":"ForAll"}},"kind":null,"sourceSpan":{"end":[444,56],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[444,1]},"title":"info"},{"children":[{"comments":null,"info":{"arguments":[{"annotation":[],"contents":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserPrefs"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserPrefs"],"tag":"TypeConstructor"}],"tag":"TypeApp"},"tag":"ParensInType"}],"declType":"dataConstructor"},"sourceSpan":{"end":[456,57],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[456,18]},"title":"PrefsMod"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Newtype"],"Newtype"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":null,"tag":"TypeWildcard"}],"tag":"TypeApp"}},"sourceSpan":{"end":[457,54],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[457,1]},"title":"newtypePrefsMod"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Monoid"],"Monoid"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[460,29],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[459,1]},"title":"prefsModMonoid"},{"comments":null,"info":{"declType":"instance","dependencies":[],"type":{"annotation":[],"contents":[{"annotation":[],"contents":[["Data","Semigroup"],"Semigroup"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"sourceSpan":{"end":[463,62],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[462,1]},"title":"prefsModSemigroup"}],"comments":null,"info":{"dataDeclType":"newtype","declType":"data","roles":[],"typeArguments":[]},"kind":null,"sourceSpan":{"end":[456,57],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[456,1]},"title":"PrefsMod"},{"children":[],"comments":"Include a suffix to attach to the metavar when multiple values\ncan be entered.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[467,34],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[467,1]},"title":"multiSuffix"},{"children":[],"comments":"Turn on disambiguation.\n\nSee\nhttps://github.com/pcapriotti/optparse-applicative#disambiguation\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[474,25],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[474,1]},"title":"disambiguate"},{"children":[],"comments":"Show full help text on any error.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[478,28],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[478,1]},"title":"showHelpOnError"},{"children":[],"comments":"Show the help text if the user enters only the program name or\nsubcommand.\n\nThis will suppress a \"Missing:\" error and show the full usage\ninstead if a user just types the name of the program.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[486,28],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[486,1]},"title":"showHelpOnEmpty"},{"children":[],"comments":"Turn off backtracking after subcommand is parsed.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[490,24],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[490,1]},"title":"noBacktrack"},{"children":[],"comments":"Allow full mixing of subcommand and parent arguments by inlining\nselected subparsers into the parent parser.\n\n**Note:** When this option is used, preferences for the subparser which\neffect the parser behaviour (such as noIntersperse) are ignored.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[498,28],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[498,1]},"title":"subparserInline"},{"children":[],"comments":"Set the maximum width of the generated help text.\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"Int"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[502,27],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[502,1]},"title":"columns"},{"children":[],"comments":"Create a `ParserPrefs` given a modifier\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Options","Applicative","Builder"],"PrefsMod"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserPrefs"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[506,33],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[506,1]},"title":"prefs"},{"children":[],"comments":"Default preferences.\n","info":{"declType":"value","type":{"annotation":[],"contents":[["Options","Applicative","Types"],"ParserPrefs"],"tag":"TypeConstructor"}},"kind":null,"sourceSpan":{"end":[524,28],"name":".spago/packages/optparse-5.0.0/src/Options/Applicative/Builder.purs","start":[524,1]},"title":"defaultPrefs"}],"name":"Options.Applicative.Builder","reExports":[]}