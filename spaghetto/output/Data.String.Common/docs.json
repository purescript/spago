{"comments":null,"declarations":[{"children":[],"comments":"Returns `true` if the given string is empty.\n\n```purescript\nnull \"\" == true\nnull \"Hi\" == false\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"Boolean"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[23,26],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[23,1]},"title":"null"},{"children":[],"comments":"Compare two strings in a locale-aware fashion. This is in contrast to\nthe `Ord` instance on `String` which treats strings as arrays of code\nunits:\n\n```purescript\n\"ä\" `localeCompare` \"b\" == LT\n\"ä\" `compare` \"b\" == GT\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Data","Ordering"],"Ordering"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[34,46],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[34,1]},"title":"localeCompare"},{"children":[],"comments":"Replaces the first occurence of the pattern with the replacement string.\n\n```purescript\nreplace (Pattern \"<=\") (Replacement \"≤\") \"a <= b <= c\" == \"a ≤ b <= c\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","Pattern"],"Pattern"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","Pattern"],"Replacement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[50,69],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[50,1]},"title":"replace"},{"children":[],"comments":"Replaces all occurences of the pattern with the replacement string.\n\n```purescript\nreplaceAll (Pattern \"<=\") (Replacement \"≤\") \"a <= b <= c\" == \"a ≤ b ≤ c\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","Pattern"],"Pattern"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","Pattern"],"Replacement"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[57,72],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[57,1]},"title":"replaceAll"},{"children":[],"comments":"Returns the substrings of the second string separated along occurences\nof the first string.\n\n```purescript\nsplit (Pattern \" \") \"hello world\" == [\"hello\", \"world\"]\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Data","String","Pattern"],"Pattern"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[65,58],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[65,1]},"title":"split"},{"children":[],"comments":"Returns the argument converted to lowercase.\n\n```purescript\ntoLower \"hElLo\" == \"hello\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[72,43],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[72,1]},"title":"toLower"},{"children":[],"comments":"Returns the argument converted to uppercase.\n\n```purescript\ntoUpper \"Hello\" == \"HELLO\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[79,43],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[79,1]},"title":"toUpper"},{"children":[],"comments":"Removes whitespace from the beginning and end of a string, including\n[whitespace characters](http://www.ecma-international.org/ecma-262/5.1/#sec-7.2)\nand [line terminators](http://www.ecma-international.org/ecma-262/5.1/#sec-7.3).\n\n```purescript\ntrim \"   Hello  \\n World\\n\\t    \" == \"Hello  \\n World\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[88,40],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[88,1]},"title":"trim"},{"children":[],"comments":"Joins the strings in the array together, inserting the first argument\nas separator between them.\n\n```purescript\njoinWith \", \" [\"apple\", \"banana\", \"orange\"] == \"apple, banana, orange\"\n```\n","info":{"declType":"value","type":{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"},{"annotation":[],"contents":[{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Function"],"tag":"TypeConstructor"},{"annotation":[],"contents":[{"annotation":[],"contents":[["Prim"],"Array"],"tag":"TypeConstructor"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"},{"annotation":[],"contents":[["Prim"],"String"],"tag":"TypeConstructor"}],"tag":"TypeApp"}],"tag":"TypeApp"}},"kind":null,"sourceSpan":{"end":[96,60],"name":".spago/packages/strings-6.0.1/src/Data/String/Common.purs","start":[96,1]},"title":"joinWith"}],"name":"Data.String.Common","reExports":[]}