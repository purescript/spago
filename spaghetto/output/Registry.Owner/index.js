// Generated by purs version 0.15.10
import * as Data_Codec from "../Data.Codec/index.js";
import * as Data_Codec_Argonaut from "../Data.Codec.Argonaut/index.js";
import * as Data_Codec_Argonaut_Record from "../Data.Codec.Argonaut.Record/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Profunctor from "../Data.Profunctor/index.js";
var publicIsSymbol = {
    reflectSymbol: function () {
        return "public";
    }
};
var keytypeIsSymbol = {
    reflectSymbol: function () {
        return "keytype";
    }
};
var idIsSymbol = {
    reflectSymbol: function () {
        return "id";
    }
};
var Owner = function (x) {
    return x;
};
var newtypeOwner_ = {
    Coercible0: function () {
        return undefined;
    }
};
var eqOwner = /* #__PURE__ */ Data_Eq.eqRec()(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(/* #__PURE__ */ Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(publicIsSymbol)(Data_Eq.eqString))()(keytypeIsSymbol)(Data_Eq.eqString))()(idIsSymbol)(/* #__PURE__ */ Data_Maybe.eqMaybe(Data_Eq.eqString)));
var codec = /* #__PURE__ */ Data_Profunctor.wrapIso(/* #__PURE__ */ Data_Codec.profunctorCodec(Data_Either.functorEither))()(Owner)(/* #__PURE__ */ Data_Codec_Argonaut_Record.object()(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecConsOptional(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(/* #__PURE__ */ Data_Codec_Argonaut_Record.rowListCodecCons(Data_Codec_Argonaut_Record.rowListCodecNil)()()(publicIsSymbol))()()(keytypeIsSymbol))()()(idIsSymbol))("Owner")({
    id: /* #__PURE__ */ Data_Codec_Argonaut_Record.optional(Data_Codec_Argonaut.string),
    keytype: Data_Codec_Argonaut.string,
    "public": Data_Codec_Argonaut.string
}));
export {
    Owner,
    codec,
    newtypeOwner_,
    eqOwner
};
//# sourceMappingURL=index.js.map
