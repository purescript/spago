// Generated by purs version 0.15.10
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Category from "../Control.Category/index.js";
import * as Data_Argonaut_Core from "../Data.Argonaut.Core/index.js";
import * as Data_Codec from "../Data.Codec/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
import * as Foreign_Object_ST from "../Foreign.Object.ST/index.js";
var pure = /* #__PURE__ */ Control_Applicative.pure(Data_Either.applicativeEither);
var identity = /* #__PURE__ */ Control_Category.identity(Control_Category.categoryFn);
var map = /* #__PURE__ */ Data_Functor.map(Data_Maybe.functorMaybe);
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);
var renameField = function (oldName) {
    return function (newName) {
        var rename = function (obj) {
            return Data_Maybe.maybe(obj)(Data_Tuple.uncurry(Foreign_Object.insert(newName)))(Foreign_Object.pop(oldName)(obj));
        };
        var dec = function (j) {
            return Data_Argonaut_Core.caseJsonObject(j)(function ($16) {
                return Data_Argonaut_Core.fromObject(rename($16));
            })(j);
        };
        return Data_Codec["codec$prime"](function ($17) {
            return pure(dec($17));
        })(identity);
    };
};
var nestForTagged = /* #__PURE__ */ (function () {
    var mkValue = function (obj) {
        var v = Foreign_Object.pop("value")(obj);
        if (v instanceof Data_Maybe.Just && Foreign_Object.isEmpty(v.value0.value1)) {
            return v.value0.value0;
        };
        return Data_Argonaut_Core.fromObject(obj);
    };
    var rewrite = function (obj) {
        var v = Foreign_Object.pop("tag")(obj);
        if (v instanceof Data_Maybe.Nothing) {
            return Foreign_Object.runST(function __do() {
                var result = Foreign_Object_ST["new"]();
                return Foreign_Object_ST.poke("value")(mkValue(obj))(result)();
            });
        };
        if (v instanceof Data_Maybe.Just) {
            return Foreign_Object.runST(function __do() {
                var result = Foreign_Object_ST["new"]();
                Foreign_Object_ST.poke("tag")(v.value0.value0)(result)();
                return Foreign_Object_ST.poke("value")(mkValue(v.value0.value1))(result)();
            });
        };
        throw new Error("Failed pattern match at Data.Codec.Argonaut.Migration (line 124, column 5 - line 131, column 48): " + [ v.constructor.name ]);
    };
    var dec = function (j) {
        return Data_Argonaut_Core.caseJsonObject(j)(function ($18) {
            return Data_Argonaut_Core.fromObject(rewrite($18));
        })(j);
    };
    return Data_Codec["codec$prime"](function ($19) {
        return pure(dec($19));
    })(identity);
})();
var alterField = function (field) {
    return function (f) {
        var setDefault = Foreign_Object.alter(f)(field);
        var dec = function (j) {
            return Data_Argonaut_Core.caseJsonObject(j)(function ($20) {
                return Data_Argonaut_Core.fromObject(setDefault($20));
            })(j);
        };
        return Data_Codec["codec$prime"](function ($21) {
            return pure(dec($21));
        })(identity);
    };
};
var updateField = function (field) {
    var $22 = alterField(field);
    return function ($23) {
        return $22(map($23));
    };
};
var addDefaultOrUpdateField = function (field) {
    var $24 = alterField(field);
    var $25 = map1(Data_Maybe.Just.create);
    return function ($26) {
        return $24($25($26));
    };
};
var addDefaultField = function (field) {
    var $27 = addDefaultOrUpdateField(field);
    return function ($28) {
        return $27(Data_Maybe.fromMaybe($28));
    };
};
export {
    addDefaultField,
    updateField,
    addDefaultOrUpdateField,
    renameField,
    nestForTagged
};
//# sourceMappingURL=index.js.map
